name: <Native> Linux

on: [pull_request]

jobs:
  compile_linux:
    name: "Linux-Ubuntu"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download external libraries
        shell: bash
        run: |
          EXT_VERSION=`grep version native/external-config.json  |awk -F'"' '{print $4}'`
          git clone --branch $EXT_VERSION --depth 1 https://github.com/cocos-creator/engine-native-external native/external
      - name: Generate bindings
        run: |
          python3 -m pip install PyYAML==5.4.1 Cheetah3
          python3 ./native/tools/tojs/genbindings.py
          rm ./native/tools/tojs/userconf.ini
      - name: Install dependencies
        run: |
          sudo apt install libx11-dev -y
          sudo apt install libsndio-dev -y
          sudo apt install ninja-build -y
      - name: Compile
        env:
          COCOS_ENGINE_DEV: 1
        run: |
          COCOS2DX_ROOT=$GITHUB_WORKSPACE/native
          echo "Compiling Linux ... "
          cd  $COCOS2DX_ROOT/templates/linux
          mkdir -p build-linux/proj
          touch build-linux/proj/cfg.cmake
          echo "set(CC_USE_VULKAN OFF)" >> build-linux/proj/cfg.cmake
          echo "set(CC_USE_GLES2 OFF)" >> build-linux/proj/cfg.cmake
          echo "set(CC_USE_GLES3 ON)" >> build-linux/proj/cfg.cmake
          echo "set(CC_USE_METAL OFF)" >> build-linux/proj/cfg.cmake
          echo "set(USE_WEBSOCKET_SERVER OFF)" >> build-linux/proj/cfg.cmake
          echo "set(CMAKE_CXX_STANDARD_REQUIRED ON)" >> build-linux/proj/cfg.cmake
          echo "set(USE_PHYSICS_PHYSX OFF)" >> build-linux/proj/cfg.cmake
          mkdir build-linux/assets

          RES_DIR=$COCOS2DX_ROOT/templates/linux/build-linux
          cd build-linux
          cmake ../ -GNinja -DRES_DIR=$RES_DIR -DCOCOS_X_PATH=$COCOS2DX_ROOT
          set +e
          cmake --build . 