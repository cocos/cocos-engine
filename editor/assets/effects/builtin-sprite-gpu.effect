// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - passes:
    - vert: sprite-vs-gpu:vert
      frag: sprite-fs-gpu:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
}%

CCProgram sprite-vs-gpu %{
  precision highp float;
  #include <cc-sprite-vs-gpu>

  out vec4 v_color;

  vec4 vert () {
    SpriteVertexData i;
    CCSpriteInput(i);

    v_color = i.color;
    vec4 pos = i.position;
    // Vertex customization goes here
    #if USE_PIXEL_ALIGNMENT
      pos = cc_matView * pos;
      pos.xyz = floor(pos.xyz);
      pos = cc_matProj * pos;
    #else
      pos = cc_matViewProj * pos;
    #endif
    return pos;
  }
}%

CCProgram sprite-fs-gpu %{
  precision highp float;
  #include <cc-sprite-fs-gpu>
  #include <gamma>

  in vec4 v_color;

  vec4 frag () {
    SpriteFragmentData i;
    CCSpriteInput(i);
    vec4 color = v_color * CCSpriteSample(cc_spriteTexture, i.uv);

    // Customization goes here

    #if IS_GRAY
      // https://en.wikipedia.org/wiki/Grayscale
      color.rgb = SRGBToLinear(color.rgb);
      color.rgb = vec3(dot(color.rgb, vec3(0.2126, 0.7152, 0.0722)));
      color.rgb = LinearToSRGB(color.rgb);
    #endif
    return color;
  }
}%
