struct LightingResult
{
  // material-dependent lighting data
  vec3 diffuseColorWithLighting, specularColorWithLighting;

  // pure lighting
  vec3 directDiffuse, directSpecular;
  vec3 environmentDiffuse, environmentSpecular;
  float shadow, ao;
  vec3 lightmapColor;
  vec3 emissive;
#if CC_SURFACES_LIGHTING_USE_FRESNEL
  float fresnel;
#endif
#if CC_SURFACES_LIGHTING_TRANSMIT_SPECULAR
  vec3 directTransmitSpecular;
  vec3 environmentTransmitSpecular;
#endif
#if CC_SURFACES_LIGHTING_TRANSMITTENCE
  vec3 transmittence;
#endif  
#if CC_SURFACES_LIGHTING_TRT
  vec3 directTRT, environmentTRT;
#endif  
  //vec3 scattered;
};
