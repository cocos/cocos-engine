// default functions
#ifndef CC_SURFACES_FRAGMENT_MODIFY_BASECOLOR_AND_TRANSPARENCY
vec4 SurfacesFragmentModifyBaseColorAndTransparency()
{
	return vec4(cc_ambientSky.xyz * cc_ambientSky.w, 1.0);
}
#endif

// no structure and module functions needed


layout(location = 0) out vec4 fragColorX;

void main() {
  vec4 color = SurfacesFragmentModifyBaseColorAndTransparency();
  color.a = 1.0;

  #if CC_USE_RGBE_OUTPUT
    color = packRGBE(color.rgb);
  #elif !CC_USE_FLOAT_OUTPUT
    color.rgb = HDRToLDR(color.rgb);
    color.rgb = LinearToSRGB(color.rgb);
  #endif

  //todo: LDR fogging in gamma space, HDR fogging should move before tone mapping
  #if CC_USE_FOG != CC_FOG_NONE
    float fogFactor = 1.0;
    CC_TRANSFER_FOG_BASE(vec4(FSInput_worldPos, 1.0), fogFactor);
    CC_APPLY_FOG_BASE(color, fogFactor);
  #endif
  
  fragColorX = color;
}
