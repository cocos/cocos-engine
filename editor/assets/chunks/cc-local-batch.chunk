// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.

#if !USE_INSTANCING
  #if USE_BATCHING
    #pragma define BATCHING_COUNT 10
    #pragma builtin(local)
    layout(set = 2, binding = 0) uniform CCLocalBatched {
      highp mat4 cc_matWorlds[BATCHING_COUNT];
    };
  #else
    #include <cc-local>
  #endif
#endif

void CCGetWorldMatrix(out mat4 matWorld)
{
  #if USE_INSTANCING
    matWorld = mat4(
      vec4(a_matWorld0.xyz, 0.0),
      vec4(a_matWorld1.xyz, 0.0),
      vec4(a_matWorld2.xyz, 0.0),
      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)
    );
  #elif USE_BATCHING
    matWorld = cc_matWorlds[int(a_dyn_batch_id)];
  #else
    matWorld = cc_matWorld;
  #endif
}

void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)
{
  #if USE_INSTANCING
    matWorld = mat4(
      vec4(a_matWorld0.xyz, 0.0),
      vec4(a_matWorld1.xyz, 0.0),
      vec4(a_matWorld2.xyz, 0.0),
      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)
    );
    matWorldIT = matWorld;
  #elif USE_BATCHING
    matWorld = cc_matWorlds[int(a_dyn_batch_id)];
    matWorldIT = matWorld;
  #else
    matWorld = cc_matWorld;
    matWorldIT = cc_matWorldIT;
  #endif
}
