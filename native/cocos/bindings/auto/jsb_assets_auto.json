[
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Error",
        "parents": [],
        "nested_classes": [],
        "class_name": "Error",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Error",
        "underlined_class_name": "cc_Error",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "msg",
                "pretty_name": "msg",
                "signature_name": "js_assets_Error",
                "type": {
                    "name": "optional<std::string>",
                    "script_ns": "boost.optional<std::string>",
                    "whole_name": "boost::optional<std::string>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.BoundingBox",
        "parents": [],
        "nested_classes": [],
        "class_name": "BoundingBox",
        "is_ref_class": false,
        "namespaced_class_name": "cc::BoundingBox",
        "underlined_class_name": "cc_BoundingBox",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "min",
                "pretty_name": "min",
                "signature_name": "js_assets_BoundingBox",
                "type": {
                    "name": "Vec3",
                    "script_ns": "jsb.Vec3",
                    "whole_name": "cc::Vec3",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Vec3",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "max",
                "pretty_name": "max",
                "signature_name": "js_assets_BoundingBox",
                "type": {
                    "name": "Vec3",
                    "script_ns": "jsb.Vec3",
                    "whole_name": "cc::Vec3",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Vec3",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.VertexIdChannel",
        "parents": [],
        "nested_classes": [],
        "class_name": "VertexIdChannel",
        "is_ref_class": false,
        "namespaced_class_name": "cc::VertexIdChannel",
        "underlined_class_name": "cc_VertexIdChannel",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "stream",
                "pretty_name": "stream",
                "signature_name": "js_assets_VertexIdChannel",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "index",
                "pretty_name": "index",
                "signature_name": "js_assets_VertexIdChannel",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Asset",
        "parents": [
            "cc::CCObject",
            "cc::EventTarget"
        ],
        "nested_classes": [],
        "class_name": "Asset",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Asset",
        "underlined_class_name": "cc_Asset",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [
            {
                "name": "_native",
                "pretty_name": "_native",
                "signature_name": "js_assets_Asset",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_nativeUrl",
                "pretty_name": "_nativeUrl",
                "signature_name": "js_assets_Asset",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "_uuid",
                "names": [
                    "_uuid"
                ],
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "const std::string&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "nativeUrl",
                "names": [
                    "nativeUrl"
                ],
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "_nativeDep",
                "names": [
                    "_nativeDep"
                ],
                "type": {
                    "name": "NativeDep",
                    "script_ns": "jsb.NativeDep",
                    "whole_name": "cc::NativeDep",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::NativeDep",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "isDefault",
                "names": [
                    "isDefault"
                ],
                "type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "constructor": {
                "name": "Asset",
                "signature_name": "js_assets_Asset_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Asset"
            },
            "getNativeAsset": {
                "name": "getNativeAsset",
                "signature_name": "js_assets_Asset_getNativeAsset",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "any",
                    "script_ns": "nowhere",
                    "whole_name": "ccstd::any",
                    "namespace_name": "ccstd::",
                    "namespaced_class_name": "ccstd::any",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en<br>\n-- The underlying native asset of this asset if one is available.<br><br>\n-- This property can be used to access additional details or functionality related to the asset.<br><br>\n-- This property will be initialized by the loader if `_native` is available.<br>\n-- zh<br>\n-- \u6b64\u8d44\u6e90\u7684\u57fa\u7840\u8d44\u6e90\uff08\u5982\u679c\u6709\uff09\u3002 \u6b64\u5c5e\u6027\u53ef\u7528\u4e8e\u8bbf\u95ee\u4e0e\u8d44\u6e90\u76f8\u5173\u7684\u5176\u4ed6\u8be6\u7ec6\u4fe1\u606f\u6216\u529f\u80fd\u3002<br><br>\n-- \u5982\u679c`_native`\u53ef\u7528\uff0c\u5219\u6b64\u5c5e\u6027\u5c06\u7531\u52a0\u8f7d\u5668\u521d\u59cb\u5316\u3002<br>\n-- default null<br>\n-- private",
                "current_class_name": "Asset"
            },
            "setNativeAsset": {
                "name": "setNativeAsset",
                "signature_name": "js_assets_Asset_setNativeAsset",
                "arguments": [
                    {
                        "name": "any",
                        "script_ns": "nowhere",
                        "whole_name": "const ccstd::any&",
                        "namespace_name": "ccstd::",
                        "namespaced_class_name": "ccstd::any",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "obj"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Asset"
            },
            "createNode": {
                "name": "createNode",
                "signature_name": "js_assets_Asset_createNode",
                "arguments": [
                    {
                        "name": "std::function",
                        "script_ns": "std::function<void (jsb.Error, jsb.Node )>",
                        "whole_name": "const std::function<void (cc::Error, cc::Node *)>&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "std::function<void (cc::Error, cc::Node *)>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": true,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [
                            {
                                "name": "Error",
                                "script_ns": "jsb.Error",
                                "whole_name": "cc::Error",
                                "namespace_name": "",
                                "namespaced_class_name": "cc::Error",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "Node*",
                                "script_ns": "jsb.Node",
                                "whole_name": "cc::Node*",
                                "namespace_name": "",
                                "namespaced_class_name": "cc::Node*",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "ret_type": "void"
                    }
                ],
                "argumentTips": [
                    "cb"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en<br>\n-- Create a new node using this asset in the scene.<br/><br>\n-- If this type of asset don't have its corresponding node type, this method should be null.<br>\n-- zh<br>\n-- \u4f7f\u7528\u8be5\u8d44\u6e90\u5728\u573a\u666f\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\u3002<br/><br>\n-- \u5982\u679c\u8fd9\u7c7b\u8d44\u6e90\u6ca1\u6709\u76f8\u5e94\u7684\u8282\u70b9\u7c7b\u578b\uff0c\u8be5\u65b9\u6cd5\u5e94\u8be5\u662f\u7a7a\u7684\u3002",
                "current_class_name": "Asset"
            },
            "addAssetRef": {
                "name": "addAssetRef",
                "signature_name": "js_assets_Asset_addAssetRef",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Asset"
            },
            "decAssetRef": {
                "name": "decAssetRef",
                "signature_name": "js_assets_Asset_decAssetRef",
                "arguments": [
                    {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "autoRelease"
                ],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Asset"
            },
            "getAssetRefCount": {
                "name": "getAssetRefCount",
                "signature_name": "js_assets_Asset_getAssetRefCount",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Asset"
            },
            "onLoaded": {
                "name": "onLoaded",
                "signature_name": "js_assets_Asset_onLoaded",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Asset"
            },
            "initDefault": {
                "name": "initDefault",
                "signature_name": "js_assets_Asset_initDefault",
                "min_args": 0,
                "comment": "",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": "Asset",
                "implementations": [
                    {
                        "name": "initDefault",
                        "signature_name": "initDefault",
                        "arguments": [
                            {
                                "name": "optional<std::string>",
                                "script_ns": "boost.optional<std::string>",
                                "whole_name": "const boost::optional<std::string>&",
                                "namespace_name": "boost::",
                                "namespaced_class_name": "boost::optional<std::string>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "uuid"
                        ],
                        "static": false,
                        "min_args": 1,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "initDefault",
                        "signature_name": "initDefault",
                        "arguments": [],
                        "argumentTips": [],
                        "static": false,
                        "min_args": 0,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    }
                ]
            },
            "validate": {
                "name": "validate",
                "signature_name": "js_assets_Asset_validate",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Asset"
            },
            "serialize": {
                "name": "serialize",
                "signature_name": "js_assets_Asset_serialize",
                "arguments": [
                    {
                        "name": "any",
                        "script_ns": "nowhere",
                        "whole_name": "const ccstd::any&",
                        "namespace_name": "ccstd::",
                        "namespaced_class_name": "ccstd::any",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    ""
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "any",
                    "script_ns": "nowhere",
                    "whole_name": "ccstd::any",
                    "namespace_name": "ccstd::",
                    "namespaced_class_name": "ccstd::any",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "return",
                "current_class_name": "Asset"
            },
            "deserialize": {
                "name": "deserialize",
                "signature_name": "js_assets_Asset_deserialize",
                "arguments": [
                    {
                        "name": "any",
                        "script_ns": "nowhere",
                        "whole_name": "const ccstd::any&",
                        "namespace_name": "ccstd::",
                        "namespaced_class_name": "ccstd::any",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "any",
                        "script_ns": "nowhere",
                        "whole_name": "const ccstd::any&",
                        "namespace_name": "ccstd::",
                        "namespaced_class_name": "ccstd::any",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "serializedData",
                    "handle"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "param data",
                "current_class_name": "Asset"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "destroy": [
                {
                    "name": "destroy",
                    "signature_name": "destroy",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "toString": [
                {
                    "name": "toString",
                    "signature_name": "toString",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "std::string",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.BufferAsset",
        "parents": [
            "cc::Asset"
        ],
        "nested_classes": [],
        "class_name": "BufferAsset",
        "is_ref_class": false,
        "namespaced_class_name": "cc::BufferAsset",
        "underlined_class_name": "cc_BufferAsset",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "buffer",
                "names": [
                    "buffer"
                ],
                "type": {
                    "name": "ArrayBuffer*",
                    "script_ns": "jsb.ArrayBuffer",
                    "whole_name": "cc::ArrayBuffer*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::ArrayBuffer*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "constructor": {
                "name": "BufferAsset",
                "signature_name": "js_assets_BufferAsset_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "BufferAsset"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "getNativeAsset": [
                {
                    "name": "getNativeAsset",
                    "signature_name": "getNativeAsset",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "any",
                        "script_ns": "nowhere",
                        "whole_name": "ccstd::any",
                        "namespace_name": "ccstd::",
                        "namespaced_class_name": "ccstd::any",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "setNativeAsset": [
                {
                    "name": "setNativeAsset",
                    "signature_name": "setNativeAsset",
                    "arguments": [
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "obj"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "validate": [
                {
                    "name": "validate",
                    "signature_name": "validate",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IPropertyInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IPropertyInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IPropertyInfo",
        "underlined_class_name": "cc_IPropertyInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "type",
                "pretty_name": "type",
                "signature_name": "js_assets_IPropertyInfo",
                "type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "handleInfo",
                "pretty_name": "handleInfo",
                "signature_name": "js_assets_IPropertyInfo",
                "type": {
                    "name": "optional<std::tuple<std::string, unsigned int, cc::gfx::Type>>",
                    "script_ns": "boost.optional<std::tuple<std::string, unsigned int, cc::gfx::Type>>",
                    "whole_name": "boost::optional<std::tuple<std::string, unsigned int, cc::gfx::Type>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::tuple<std::string, unsigned int, cc::gfx::Type>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "samplerHash",
                "pretty_name": "samplerHash",
                "signature_name": "js_assets_IPropertyInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "value",
                "pretty_name": "value",
                "signature_name": "js_assets_IPropertyInfo",
                "type": {
                    "name": "optional<boost::variant2::variant<std::vector<float>, std::string>>",
                    "script_ns": "boost.optional<boost.variant2::variant<std::vector<float>, std::string>>",
                    "whole_name": "boost::optional<boost::variant2::variant<std::vector<float>, std::string>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<boost::variant2::variant<std::vector<float>, std::string>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "linear",
                "pretty_name": "linear",
                "signature_name": "js_assets_IPropertyInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.RasterizerStateInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "RasterizerStateInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::RasterizerStateInfo",
        "underlined_class_name": "cc_RasterizerStateInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "isDiscard",
                "pretty_name": "isDiscard",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "isFrontFaceCCW",
                "pretty_name": "isFrontFaceCCW",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "depthBiasEnabled",
                "pretty_name": "depthBiasEnabled",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "isDepthClip",
                "pretty_name": "isDepthClip",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "isMultisample",
                "pretty_name": "isMultisample",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "polygonMode",
                "pretty_name": "polygonMode",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<cc::gfx::PolygonMode>",
                    "script_ns": "boost.optional<cc::gfx::PolygonMode>",
                    "whole_name": "boost::optional<cc::gfx::PolygonMode>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::PolygonMode>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "shadeModel",
                "pretty_name": "shadeModel",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<cc::gfx::ShadeModel>",
                    "script_ns": "boost.optional<cc::gfx::ShadeModel>",
                    "whole_name": "boost::optional<cc::gfx::ShadeModel>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::ShadeModel>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "cullMode",
                "pretty_name": "cullMode",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<cc::gfx::CullMode>",
                    "script_ns": "boost.optional<cc::gfx::CullMode>",
                    "whole_name": "boost::optional<cc::gfx::CullMode>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::CullMode>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "depthBias",
                "pretty_name": "depthBias",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<float>",
                    "script_ns": "boost.optional<float>",
                    "whole_name": "boost::optional<float>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<float>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "depthBiasClamp",
                "pretty_name": "depthBiasClamp",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<float>",
                    "script_ns": "boost.optional<float>",
                    "whole_name": "boost::optional<float>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<float>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "depthBiasSlop",
                "pretty_name": "depthBiasSlop",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<float>",
                    "script_ns": "boost.optional<float>",
                    "whole_name": "boost::optional<float>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<float>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "lineWidth",
                "pretty_name": "lineWidth",
                "signature_name": "js_assets_RasterizerStateInfo",
                "type": {
                    "name": "optional<float>",
                    "script_ns": "boost.optional<float>",
                    "whole_name": "boost::optional<float>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<float>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "fromGFXRasterizerState": {
                "name": "fromGFXRasterizerState",
                "signature_name": "fromGFXRasterizerState",
                "arguments": [
                    {
                        "name": "RasterizerState",
                        "script_ns": "gfx.RasterizerState",
                        "whole_name": "const cc::gfx::RasterizerState&",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::RasterizerState",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "rs"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            },
            "assignToGFXRasterizerState": {
                "name": "assignToGFXRasterizerState",
                "signature_name": "assignToGFXRasterizerState",
                "arguments": [
                    {
                        "name": "RasterizerState",
                        "script_ns": "gfx.RasterizerState",
                        "whole_name": "cc::gfx::RasterizerState&",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::RasterizerState",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "rs"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.DepthStencilStateInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "DepthStencilStateInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::DepthStencilStateInfo",
        "underlined_class_name": "cc_DepthStencilStateInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "depthTest",
                "pretty_name": "depthTest",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "depthWrite",
                "pretty_name": "depthWrite",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilTestFront",
                "pretty_name": "stencilTestFront",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilTestBack",
                "pretty_name": "stencilTestBack",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "depthFunc",
                "pretty_name": "depthFunc",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<cc::gfx::ComparisonFunc>",
                    "script_ns": "boost.optional<cc::gfx::ComparisonFunc>",
                    "whole_name": "boost::optional<cc::gfx::ComparisonFunc>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::ComparisonFunc>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilFuncFront",
                "pretty_name": "stencilFuncFront",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<cc::gfx::ComparisonFunc>",
                    "script_ns": "boost.optional<cc::gfx::ComparisonFunc>",
                    "whole_name": "boost::optional<cc::gfx::ComparisonFunc>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::ComparisonFunc>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilReadMaskFront",
                "pretty_name": "stencilReadMaskFront",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilWriteMaskFront",
                "pretty_name": "stencilWriteMaskFront",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilFailOpFront",
                "pretty_name": "stencilFailOpFront",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<cc::gfx::StencilOp>",
                    "script_ns": "boost.optional<cc::gfx::StencilOp>",
                    "whole_name": "boost::optional<cc::gfx::StencilOp>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::StencilOp>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilZFailOpFront",
                "pretty_name": "stencilZFailOpFront",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<cc::gfx::StencilOp>",
                    "script_ns": "boost.optional<cc::gfx::StencilOp>",
                    "whole_name": "boost::optional<cc::gfx::StencilOp>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::StencilOp>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilPassOpFront",
                "pretty_name": "stencilPassOpFront",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<cc::gfx::StencilOp>",
                    "script_ns": "boost.optional<cc::gfx::StencilOp>",
                    "whole_name": "boost::optional<cc::gfx::StencilOp>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::StencilOp>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilRefFront",
                "pretty_name": "stencilRefFront",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilFuncBack",
                "pretty_name": "stencilFuncBack",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<cc::gfx::ComparisonFunc>",
                    "script_ns": "boost.optional<cc::gfx::ComparisonFunc>",
                    "whole_name": "boost::optional<cc::gfx::ComparisonFunc>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::ComparisonFunc>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilReadMaskBack",
                "pretty_name": "stencilReadMaskBack",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilWriteMaskBack",
                "pretty_name": "stencilWriteMaskBack",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilFailOpBack",
                "pretty_name": "stencilFailOpBack",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<cc::gfx::StencilOp>",
                    "script_ns": "boost.optional<cc::gfx::StencilOp>",
                    "whole_name": "boost::optional<cc::gfx::StencilOp>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::StencilOp>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilZFailOpBack",
                "pretty_name": "stencilZFailOpBack",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<cc::gfx::StencilOp>",
                    "script_ns": "boost.optional<cc::gfx::StencilOp>",
                    "whole_name": "boost::optional<cc::gfx::StencilOp>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::StencilOp>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilPassOpBack",
                "pretty_name": "stencilPassOpBack",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<cc::gfx::StencilOp>",
                    "script_ns": "boost.optional<cc::gfx::StencilOp>",
                    "whole_name": "boost::optional<cc::gfx::StencilOp>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::StencilOp>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stencilRefBack",
                "pretty_name": "stencilRefBack",
                "signature_name": "js_assets_DepthStencilStateInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "fromGFXDepthStencilState": {
                "name": "fromGFXDepthStencilState",
                "signature_name": "fromGFXDepthStencilState",
                "arguments": [
                    {
                        "name": "DepthStencilState",
                        "script_ns": "gfx.DepthStencilState",
                        "whole_name": "const cc::gfx::DepthStencilState&",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::DepthStencilState",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "ds"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            },
            "assignToGFXDepthStencilState": {
                "name": "assignToGFXDepthStencilState",
                "signature_name": "assignToGFXDepthStencilState",
                "arguments": [
                    {
                        "name": "DepthStencilState",
                        "script_ns": "gfx.DepthStencilState",
                        "whole_name": "cc::gfx::DepthStencilState&",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::DepthStencilState",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "ds"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.BlendTargetInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "BlendTargetInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::BlendTargetInfo",
        "underlined_class_name": "cc_BlendTargetInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "blend",
                "pretty_name": "blend",
                "signature_name": "js_assets_BlendTargetInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blendSrc",
                "pretty_name": "blendSrc",
                "signature_name": "js_assets_BlendTargetInfo",
                "type": {
                    "name": "optional<cc::gfx::BlendFactor>",
                    "script_ns": "boost.optional<cc::gfx::BlendFactor>",
                    "whole_name": "boost::optional<cc::gfx::BlendFactor>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::BlendFactor>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blendDst",
                "pretty_name": "blendDst",
                "signature_name": "js_assets_BlendTargetInfo",
                "type": {
                    "name": "optional<cc::gfx::BlendFactor>",
                    "script_ns": "boost.optional<cc::gfx::BlendFactor>",
                    "whole_name": "boost::optional<cc::gfx::BlendFactor>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::BlendFactor>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blendEq",
                "pretty_name": "blendEq",
                "signature_name": "js_assets_BlendTargetInfo",
                "type": {
                    "name": "optional<cc::gfx::BlendOp>",
                    "script_ns": "boost.optional<cc::gfx::BlendOp>",
                    "whole_name": "boost::optional<cc::gfx::BlendOp>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::BlendOp>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blendSrcAlpha",
                "pretty_name": "blendSrcAlpha",
                "signature_name": "js_assets_BlendTargetInfo",
                "type": {
                    "name": "optional<cc::gfx::BlendFactor>",
                    "script_ns": "boost.optional<cc::gfx::BlendFactor>",
                    "whole_name": "boost::optional<cc::gfx::BlendFactor>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::BlendFactor>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blendDstAlpha",
                "pretty_name": "blendDstAlpha",
                "signature_name": "js_assets_BlendTargetInfo",
                "type": {
                    "name": "optional<cc::gfx::BlendFactor>",
                    "script_ns": "boost.optional<cc::gfx::BlendFactor>",
                    "whole_name": "boost::optional<cc::gfx::BlendFactor>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::BlendFactor>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blendAlphaEq",
                "pretty_name": "blendAlphaEq",
                "signature_name": "js_assets_BlendTargetInfo",
                "type": {
                    "name": "optional<cc::gfx::BlendOp>",
                    "script_ns": "boost.optional<cc::gfx::BlendOp>",
                    "whole_name": "boost::optional<cc::gfx::BlendOp>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::BlendOp>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blendColorMask",
                "pretty_name": "blendColorMask",
                "signature_name": "js_assets_BlendTargetInfo",
                "type": {
                    "name": "optional<cc::gfx::ColorMask>",
                    "script_ns": "boost.optional<cc::gfx::ColorMask>",
                    "whole_name": "boost::optional<cc::gfx::ColorMask>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::ColorMask>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "fromGFXBlendTarget": {
                "name": "fromGFXBlendTarget",
                "signature_name": "fromGFXBlendTarget",
                "arguments": [
                    {
                        "name": "BlendTarget",
                        "script_ns": "gfx.BlendTarget",
                        "whole_name": "const cc::gfx::BlendTarget&",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::BlendTarget",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "target"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            },
            "assignToGFXBlendTarget": {
                "name": "assignToGFXBlendTarget",
                "signature_name": "assignToGFXBlendTarget",
                "arguments": [
                    {
                        "name": "BlendTarget",
                        "script_ns": "gfx.BlendTarget",
                        "whole_name": "cc::gfx::BlendTarget&",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::BlendTarget",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "target"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.BlendStateInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "BlendStateInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::BlendStateInfo",
        "underlined_class_name": "cc_BlendStateInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "isA2C",
                "pretty_name": "isA2C",
                "signature_name": "js_assets_BlendStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "isIndepend",
                "pretty_name": "isIndepend",
                "signature_name": "js_assets_BlendStateInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blendColor",
                "pretty_name": "blendColor",
                "signature_name": "js_assets_BlendStateInfo",
                "type": {
                    "name": "optional<cc::gfx::Color>",
                    "script_ns": "boost.optional<cc::gfx::Color>",
                    "whole_name": "boost::optional<cc::gfx::Color>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::Color>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "targets",
                "pretty_name": "targets",
                "signature_name": "js_assets_BlendStateInfo",
                "type": {
                    "name": "optional<std::vector<cc::BlendTargetInfo>>",
                    "script_ns": "boost.optional<std::vector<cc::BlendTargetInfo>>",
                    "whole_name": "boost::optional<std::vector<cc::BlendTargetInfo>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<cc::BlendTargetInfo>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "fromGFXBlendState": {
                "name": "fromGFXBlendState",
                "signature_name": "fromGFXBlendState",
                "arguments": [
                    {
                        "name": "BlendState",
                        "script_ns": "gfx.BlendState",
                        "whole_name": "const cc::gfx::BlendState&",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::BlendState",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "bs"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            },
            "assignToGFXBlendState": {
                "name": "assignToGFXBlendState",
                "signature_name": "assignToGFXBlendState",
                "arguments": [
                    {
                        "name": "BlendState",
                        "script_ns": "gfx.BlendState",
                        "whole_name": "cc::gfx::BlendState&",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::BlendState",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "bs"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IPassStates",
        "parents": [],
        "nested_classes": [],
        "class_name": "IPassStates",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IPassStates",
        "underlined_class_name": "cc_IPassStates",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [
            {
                "name": "priority",
                "pretty_name": "priority",
                "signature_name": "js_assets_IPassStates",
                "type": {
                    "name": "optional<int>",
                    "script_ns": "boost.optional<int>",
                    "whole_name": "boost::optional<int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "primitive",
                "pretty_name": "primitive",
                "signature_name": "js_assets_IPassStates",
                "type": {
                    "name": "optional<cc::gfx::PrimitiveMode>",
                    "script_ns": "boost.optional<cc::gfx::PrimitiveMode>",
                    "whole_name": "boost::optional<cc::gfx::PrimitiveMode>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::PrimitiveMode>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stage",
                "pretty_name": "stage",
                "signature_name": "js_assets_IPassStates",
                "type": {
                    "name": "optional<cc::pipeline::RenderPassStage>",
                    "script_ns": "boost.optional<cc::pipeline::RenderPassStage>",
                    "whole_name": "boost::optional<cc::pipeline::RenderPassStage>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::pipeline::RenderPassStage>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "rasterizerState",
                "pretty_name": "rasterizerState",
                "signature_name": "js_assets_IPassStates",
                "type": {
                    "name": "optional<cc::RasterizerStateInfo>",
                    "script_ns": "boost.optional<cc::RasterizerStateInfo>",
                    "whole_name": "boost::optional<cc::RasterizerStateInfo>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::RasterizerStateInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "depthStencilState",
                "pretty_name": "depthStencilState",
                "signature_name": "js_assets_IPassStates",
                "type": {
                    "name": "optional<cc::DepthStencilStateInfo>",
                    "script_ns": "boost.optional<cc::DepthStencilStateInfo>",
                    "whole_name": "boost::optional<cc::DepthStencilStateInfo>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::DepthStencilStateInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blendState",
                "pretty_name": "blendState",
                "signature_name": "js_assets_IPassStates",
                "type": {
                    "name": "optional<cc::BlendStateInfo>",
                    "script_ns": "boost.optional<cc::BlendStateInfo>",
                    "whole_name": "boost::optional<cc::BlendStateInfo>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::BlendStateInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "dynamicStates",
                "pretty_name": "dynamicStates",
                "signature_name": "js_assets_IPassStates",
                "type": {
                    "name": "optional<cc::gfx::DynamicStateFlagBit>",
                    "script_ns": "boost.optional<cc::gfx::DynamicStateFlagBit>",
                    "whole_name": "boost::optional<cc::gfx::DynamicStateFlagBit>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::DynamicStateFlagBit>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "phase",
                "pretty_name": "phase",
                "signature_name": "js_assets_IPassStates",
                "type": {
                    "name": "optional<std::string>",
                    "script_ns": "boost.optional<std::string>",
                    "whole_name": "boost::optional<std::string>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "constructor": {
                "name": "IPassStates",
                "signature_name": "IPassStates",
                "min_args": 0,
                "comment": "",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": null,
                "implementations": [
                    {
                        "name": "IPassStates",
                        "signature_name": "IPassStates",
                        "arguments": [
                            {
                                "name": "IPassInfoFull",
                                "script_ns": "jsb.IPassInfoFull",
                                "whole_name": "const cc::IPassInfoFull&",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::IPassInfoFull",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": true,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "o"
                        ],
                        "static": false,
                        "min_args": 1,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "IPassStates",
                        "signature_name": "IPassStates",
                        "arguments": [],
                        "argumentTips": [],
                        "static": false,
                        "min_args": 0,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    }
                ]
            },
            "operator=": {
                "name": "operator=",
                "signature_name": "operator=",
                "arguments": [
                    {
                        "name": "IPassInfoFull",
                        "script_ns": "jsb.IPassInfoFull",
                        "whole_name": "const cc::IPassInfoFull&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IPassInfoFull",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "o"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "IPassStates",
                    "script_ns": "jsb.IPassStates",
                    "whole_name": "cc::IPassStates&",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IPassStates",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            },
            "overrides": {
                "name": "overrides",
                "signature_name": "js_assets_IPassStates_overrides",
                "arguments": [
                    {
                        "name": "IPassInfoFull",
                        "script_ns": "jsb.IPassInfoFull",
                        "whole_name": "const cc::IPassInfoFull&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IPassInfoFull",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "o"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "IPassStates"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IPassInfoFull",
        "parents": [],
        "nested_classes": [],
        "class_name": "IPassInfoFull",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IPassInfoFull",
        "underlined_class_name": "cc_IPassInfoFull",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [
            {
                "name": "priority",
                "pretty_name": "priority",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<int>",
                    "script_ns": "boost.optional<int>",
                    "whole_name": "boost::optional<int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "primitive",
                "pretty_name": "primitive",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<cc::gfx::PrimitiveMode>",
                    "script_ns": "boost.optional<cc::gfx::PrimitiveMode>",
                    "whole_name": "boost::optional<cc::gfx::PrimitiveMode>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::PrimitiveMode>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stage",
                "pretty_name": "stage",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<cc::pipeline::RenderPassStage>",
                    "script_ns": "boost.optional<cc::pipeline::RenderPassStage>",
                    "whole_name": "boost::optional<cc::pipeline::RenderPassStage>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::pipeline::RenderPassStage>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "rasterizerState",
                "pretty_name": "rasterizerState",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<cc::RasterizerStateInfo>",
                    "script_ns": "boost.optional<cc::RasterizerStateInfo>",
                    "whole_name": "boost::optional<cc::RasterizerStateInfo>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::RasterizerStateInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "depthStencilState",
                "pretty_name": "depthStencilState",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<cc::DepthStencilStateInfo>",
                    "script_ns": "boost.optional<cc::DepthStencilStateInfo>",
                    "whole_name": "boost::optional<cc::DepthStencilStateInfo>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::DepthStencilStateInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blendState",
                "pretty_name": "blendState",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<cc::BlendStateInfo>",
                    "script_ns": "boost.optional<cc::BlendStateInfo>",
                    "whole_name": "boost::optional<cc::BlendStateInfo>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::BlendStateInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "dynamicStates",
                "pretty_name": "dynamicStates",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<cc::gfx::DynamicStateFlagBit>",
                    "script_ns": "boost.optional<cc::gfx::DynamicStateFlagBit>",
                    "whole_name": "boost::optional<cc::gfx::DynamicStateFlagBit>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::DynamicStateFlagBit>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "phase",
                "pretty_name": "phase",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<std::string>",
                    "script_ns": "boost.optional<std::string>",
                    "whole_name": "boost::optional<std::string>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "program",
                "pretty_name": "program",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "embeddedMacros",
                "pretty_name": "embeddedMacros",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>>",
                    "script_ns": "boost.optional<std::unordered_map<std::string, boost.variant2::variant<int, bool, std::string>>>",
                    "whole_name": "boost::optional<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "propertyIndex",
                "pretty_name": "propertyIndex",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "switch",
                "pretty_name": "switch_",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<std::string>",
                    "script_ns": "boost.optional<std::string>",
                    "whole_name": "boost::optional<std::string>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "properties",
                "pretty_name": "properties",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<std::unordered_map<std::string, cc::IPropertyInfo>>",
                    "script_ns": "boost.optional<std::unordered_map<std::string, cc::IPropertyInfo>>",
                    "whole_name": "boost::optional<std::unordered_map<std::string, cc::IPropertyInfo>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::unordered_map<std::string, cc::IPropertyInfo>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "passIndex",
                "pretty_name": "passIndex",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "defines",
                "pretty_name": "defines",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>",
                    "script_ns": "std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>",
                    "whole_name": "std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stateOverrides",
                "pretty_name": "stateOverrides",
                "signature_name": "js_assets_IPassInfoFull",
                "type": {
                    "name": "optional<cc::IPassStates>",
                    "script_ns": "boost.optional<cc::IPassStates>",
                    "whole_name": "boost::optional<cc::IPassStates>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::IPassStates>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "constructor": {
                "name": "IPassInfoFull",
                "signature_name": "IPassInfoFull",
                "min_args": 0,
                "comment": "",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": null,
                "implementations": [
                    {
                        "name": "IPassInfoFull",
                        "signature_name": "IPassInfoFull",
                        "arguments": [
                            {
                                "name": "IPassStates",
                                "script_ns": "jsb.IPassStates",
                                "whole_name": "const cc::IPassStates&",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::IPassStates",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": true,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "o"
                        ],
                        "static": false,
                        "min_args": 1,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "IPassInfoFull",
                        "signature_name": "IPassInfoFull",
                        "arguments": [],
                        "argumentTips": [],
                        "static": false,
                        "min_args": 0,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    }
                ]
            },
            "operator=": {
                "name": "operator=",
                "signature_name": "operator=",
                "arguments": [
                    {
                        "name": "IPassStates",
                        "script_ns": "jsb.IPassStates",
                        "whole_name": "const cc::IPassStates&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IPassStates",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "o"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "IPassInfoFull",
                    "script_ns": "jsb.IPassInfoFull",
                    "whole_name": "cc::IPassInfoFull&",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IPassInfoFull",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ITechniqueInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "ITechniqueInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ITechniqueInfo",
        "underlined_class_name": "cc_ITechniqueInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "passes",
                "pretty_name": "passes",
                "signature_name": "js_assets_ITechniqueInfo",
                "type": {
                    "name": "vector<cc::IPassInfoFull>",
                    "script_ns": "std::vector<cc::IPassInfoFull>",
                    "whole_name": "std::vector<cc::IPassInfoFull>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IPassInfoFull>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_ITechniqueInfo",
                "type": {
                    "name": "optional<std::string>",
                    "script_ns": "boost.optional<std::string>",
                    "whole_name": "boost::optional<std::string>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IBlockInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IBlockInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IBlockInfo",
        "underlined_class_name": "cc_IBlockInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "binding",
                "pretty_name": "binding",
                "signature_name": "js_assets_IBlockInfo",
                "type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_IBlockInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "members",
                "pretty_name": "members",
                "signature_name": "js_assets_IBlockInfo",
                "type": {
                    "name": "vector<cc::gfx::Uniform>",
                    "script_ns": "std::vector<cc::gfx::Uniform>",
                    "whole_name": "std::vector<cc::gfx::Uniform>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::gfx::Uniform>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stageFlags",
                "pretty_name": "stageFlags",
                "signature_name": "js_assets_IBlockInfo",
                "type": {
                    "name": "ShaderStageFlagBit",
                    "script_ns": "gfx.ShaderStageFlagBit",
                    "whole_name": "cc::gfx::ShaderStageFlagBit",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::ShaderStageFlagBit",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ISamplerTextureInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "ISamplerTextureInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ISamplerTextureInfo",
        "underlined_class_name": "cc_ISamplerTextureInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "binding",
                "pretty_name": "binding",
                "signature_name": "js_assets_ISamplerTextureInfo",
                "type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_ISamplerTextureInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "type",
                "pretty_name": "type",
                "signature_name": "js_assets_ISamplerTextureInfo",
                "type": {
                    "name": "Type",
                    "script_ns": "gfx.Type",
                    "whole_name": "cc::gfx::Type",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::Type",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "count",
                "pretty_name": "count",
                "signature_name": "js_assets_ISamplerTextureInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stageFlags",
                "pretty_name": "stageFlags",
                "signature_name": "js_assets_ISamplerTextureInfo",
                "type": {
                    "name": "ShaderStageFlagBit",
                    "script_ns": "gfx.ShaderStageFlagBit",
                    "whole_name": "cc::gfx::ShaderStageFlagBit",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::ShaderStageFlagBit",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ITextureInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "ITextureInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ITextureInfo",
        "underlined_class_name": "cc_ITextureInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "set",
                "pretty_name": "set",
                "signature_name": "js_assets_ITextureInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "binding",
                "pretty_name": "binding",
                "signature_name": "js_assets_ITextureInfo",
                "type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_ITextureInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "type",
                "pretty_name": "type",
                "signature_name": "js_assets_ITextureInfo",
                "type": {
                    "name": "Type",
                    "script_ns": "gfx.Type",
                    "whole_name": "cc::gfx::Type",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::Type",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "count",
                "pretty_name": "count",
                "signature_name": "js_assets_ITextureInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stageFlags",
                "pretty_name": "stageFlags",
                "signature_name": "js_assets_ITextureInfo",
                "type": {
                    "name": "ShaderStageFlagBit",
                    "script_ns": "gfx.ShaderStageFlagBit",
                    "whole_name": "cc::gfx::ShaderStageFlagBit",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::ShaderStageFlagBit",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ISamplerInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "ISamplerInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ISamplerInfo",
        "underlined_class_name": "cc_ISamplerInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "set",
                "pretty_name": "set",
                "signature_name": "js_assets_ISamplerInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "binding",
                "pretty_name": "binding",
                "signature_name": "js_assets_ISamplerInfo",
                "type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_ISamplerInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "count",
                "pretty_name": "count",
                "signature_name": "js_assets_ISamplerInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stageFlags",
                "pretty_name": "stageFlags",
                "signature_name": "js_assets_ISamplerInfo",
                "type": {
                    "name": "ShaderStageFlagBit",
                    "script_ns": "gfx.ShaderStageFlagBit",
                    "whole_name": "cc::gfx::ShaderStageFlagBit",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::ShaderStageFlagBit",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IBufferInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IBufferInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IBufferInfo",
        "underlined_class_name": "cc_IBufferInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "binding",
                "pretty_name": "binding",
                "signature_name": "js_assets_IBufferInfo",
                "type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_IBufferInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "memoryAccess",
                "pretty_name": "memoryAccess",
                "signature_name": "js_assets_IBufferInfo",
                "type": {
                    "name": "MemoryAccessBit",
                    "script_ns": "gfx.MemoryAccessBit",
                    "whole_name": "cc::gfx::MemoryAccessBit",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::MemoryAccessBit",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stageFlags",
                "pretty_name": "stageFlags",
                "signature_name": "js_assets_IBufferInfo",
                "type": {
                    "name": "ShaderStageFlagBit",
                    "script_ns": "gfx.ShaderStageFlagBit",
                    "whole_name": "cc::gfx::ShaderStageFlagBit",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::ShaderStageFlagBit",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IImageInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IImageInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IImageInfo",
        "underlined_class_name": "cc_IImageInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "binding",
                "pretty_name": "binding",
                "signature_name": "js_assets_IImageInfo",
                "type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_IImageInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "type",
                "pretty_name": "type",
                "signature_name": "js_assets_IImageInfo",
                "type": {
                    "name": "Type",
                    "script_ns": "gfx.Type",
                    "whole_name": "cc::gfx::Type",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::Type",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "count",
                "pretty_name": "count",
                "signature_name": "js_assets_IImageInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "memoryAccess",
                "pretty_name": "memoryAccess",
                "signature_name": "js_assets_IImageInfo",
                "type": {
                    "name": "MemoryAccessBit",
                    "script_ns": "gfx.MemoryAccessBit",
                    "whole_name": "cc::gfx::MemoryAccessBit",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::MemoryAccessBit",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stageFlags",
                "pretty_name": "stageFlags",
                "signature_name": "js_assets_IImageInfo",
                "type": {
                    "name": "ShaderStageFlagBit",
                    "script_ns": "gfx.ShaderStageFlagBit",
                    "whole_name": "cc::gfx::ShaderStageFlagBit",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::ShaderStageFlagBit",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IInputAttachmentInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IInputAttachmentInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IInputAttachmentInfo",
        "underlined_class_name": "cc_IInputAttachmentInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "set",
                "pretty_name": "set",
                "signature_name": "js_assets_IInputAttachmentInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "binding",
                "pretty_name": "binding",
                "signature_name": "js_assets_IInputAttachmentInfo",
                "type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_IInputAttachmentInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "count",
                "pretty_name": "count",
                "signature_name": "js_assets_IInputAttachmentInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stageFlags",
                "pretty_name": "stageFlags",
                "signature_name": "js_assets_IInputAttachmentInfo",
                "type": {
                    "name": "ShaderStageFlagBit",
                    "script_ns": "gfx.ShaderStageFlagBit",
                    "whole_name": "cc::gfx::ShaderStageFlagBit",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::ShaderStageFlagBit",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IAttributeInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IAttributeInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IAttributeInfo",
        "underlined_class_name": "cc_IAttributeInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_IAttributeInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "format",
                "pretty_name": "format",
                "signature_name": "js_assets_IAttributeInfo",
                "type": {
                    "name": "Format",
                    "script_ns": "gfx.Format",
                    "whole_name": "cc::gfx::Format",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::Format",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "isNormalized",
                "pretty_name": "isNormalized",
                "signature_name": "js_assets_IAttributeInfo",
                "type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stream",
                "pretty_name": "stream",
                "signature_name": "js_assets_IAttributeInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "isInstanced",
                "pretty_name": "isInstanced",
                "signature_name": "js_assets_IAttributeInfo",
                "type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "location",
                "pretty_name": "location",
                "signature_name": "js_assets_IAttributeInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "defines",
                "pretty_name": "defines",
                "signature_name": "js_assets_IAttributeInfo",
                "type": {
                    "name": "vector<std::string>",
                    "script_ns": "std::vector<std::string>",
                    "whole_name": "std::vector<std::string>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IDefineInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IDefineInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IDefineInfo",
        "underlined_class_name": "cc_IDefineInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_IDefineInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "type",
                "pretty_name": "type",
                "signature_name": "js_assets_IDefineInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "range",
                "pretty_name": "range",
                "signature_name": "js_assets_IDefineInfo",
                "type": {
                    "name": "optional<std::vector<int>>",
                    "script_ns": "boost.optional<std::vector<int>>",
                    "whole_name": "boost::optional<std::vector<int>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<int>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "options",
                "pretty_name": "options",
                "signature_name": "js_assets_IDefineInfo",
                "type": {
                    "name": "optional<std::vector<std::string>>",
                    "script_ns": "boost.optional<std::vector<std::string>>",
                    "whole_name": "boost::optional<std::vector<std::string>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<std::string>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "defaultVal",
                "pretty_name": "defaultVal",
                "signature_name": "js_assets_IDefineInfo",
                "type": {
                    "name": "optional<std::string>",
                    "script_ns": "boost.optional<std::string>",
                    "whole_name": "boost::optional<std::string>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IBuiltin",
        "parents": [],
        "nested_classes": [],
        "class_name": "IBuiltin",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IBuiltin",
        "underlined_class_name": "cc_IBuiltin",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_IBuiltin",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "defines",
                "pretty_name": "defines",
                "signature_name": "js_assets_IBuiltin",
                "type": {
                    "name": "vector<std::string>",
                    "script_ns": "std::vector<std::string>",
                    "whole_name": "std::vector<std::string>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IBuiltinInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IBuiltinInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IBuiltinInfo",
        "underlined_class_name": "cc_IBuiltinInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "buffers",
                "pretty_name": "buffers",
                "signature_name": "js_assets_IBuiltinInfo",
                "type": {
                    "name": "vector<cc::IBuiltin>",
                    "script_ns": "std::vector<cc::IBuiltin>",
                    "whole_name": "std::vector<cc::IBuiltin>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IBuiltin>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blocks",
                "pretty_name": "blocks",
                "signature_name": "js_assets_IBuiltinInfo",
                "type": {
                    "name": "vector<cc::IBuiltin>",
                    "script_ns": "std::vector<cc::IBuiltin>",
                    "whole_name": "std::vector<cc::IBuiltin>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IBuiltin>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "samplerTextures",
                "pretty_name": "samplerTextures",
                "signature_name": "js_assets_IBuiltinInfo",
                "type": {
                    "name": "vector<cc::IBuiltin>",
                    "script_ns": "std::vector<cc::IBuiltin>",
                    "whole_name": "std::vector<cc::IBuiltin>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IBuiltin>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "images",
                "pretty_name": "images",
                "signature_name": "js_assets_IBuiltinInfo",
                "type": {
                    "name": "vector<cc::IBuiltin>",
                    "script_ns": "std::vector<cc::IBuiltin>",
                    "whole_name": "std::vector<cc::IBuiltin>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IBuiltin>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IBuiltins",
        "parents": [],
        "nested_classes": [],
        "class_name": "IBuiltins",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IBuiltins",
        "underlined_class_name": "cc_IBuiltins",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "globals",
                "pretty_name": "globals",
                "signature_name": "js_assets_IBuiltins",
                "type": {
                    "name": "IBuiltinInfo",
                    "script_ns": "jsb.IBuiltinInfo",
                    "whole_name": "cc::IBuiltinInfo",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IBuiltinInfo",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "locals",
                "pretty_name": "locals",
                "signature_name": "js_assets_IBuiltins",
                "type": {
                    "name": "IBuiltinInfo",
                    "script_ns": "jsb.IBuiltinInfo",
                    "whole_name": "cc::IBuiltinInfo",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IBuiltinInfo",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "statistics",
                "pretty_name": "statistics",
                "signature_name": "js_assets_IBuiltins",
                "type": {
                    "name": "unordered_map<std::string, int>",
                    "script_ns": "std::unordered_map<std::string, int>",
                    "whole_name": "std::unordered_map<std::string, int>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::unordered_map<std::string, int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IShaderSource",
        "parents": [],
        "nested_classes": [],
        "class_name": "IShaderSource",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IShaderSource",
        "underlined_class_name": "cc_IShaderSource",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "vert",
                "pretty_name": "vert",
                "signature_name": "js_assets_IShaderSource",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "frag",
                "pretty_name": "frag",
                "signature_name": "js_assets_IShaderSource",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IShaderInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IShaderInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IShaderInfo",
        "underlined_class_name": "cc_IShaderInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "hash",
                "pretty_name": "hash",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "glsl4",
                "pretty_name": "glsl4",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "IShaderSource",
                    "script_ns": "jsb.IShaderSource",
                    "whole_name": "cc::IShaderSource",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IShaderSource",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "glsl3",
                "pretty_name": "glsl3",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "IShaderSource",
                    "script_ns": "jsb.IShaderSource",
                    "whole_name": "cc::IShaderSource",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IShaderSource",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "glsl1",
                "pretty_name": "glsl1",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "IShaderSource",
                    "script_ns": "jsb.IShaderSource",
                    "whole_name": "cc::IShaderSource",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IShaderSource",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "builtins",
                "pretty_name": "builtins",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "IBuiltins",
                    "script_ns": "jsb.IBuiltins",
                    "whole_name": "cc::IBuiltins",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IBuiltins",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "defines",
                "pretty_name": "defines",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "vector<cc::IDefineInfo>",
                    "script_ns": "std::vector<cc::IDefineInfo>",
                    "whole_name": "std::vector<cc::IDefineInfo>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IDefineInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "attributes",
                "pretty_name": "attributes",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "vector<cc::IAttributeInfo>",
                    "script_ns": "std::vector<cc::IAttributeInfo>",
                    "whole_name": "std::vector<cc::IAttributeInfo>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IAttributeInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "blocks",
                "pretty_name": "blocks",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "vector<cc::IBlockInfo>",
                    "script_ns": "std::vector<cc::IBlockInfo>",
                    "whole_name": "std::vector<cc::IBlockInfo>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IBlockInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "samplerTextures",
                "pretty_name": "samplerTextures",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "vector<cc::ISamplerTextureInfo>",
                    "script_ns": "std::vector<cc::ISamplerTextureInfo>",
                    "whole_name": "std::vector<cc::ISamplerTextureInfo>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::ISamplerTextureInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "samplers",
                "pretty_name": "samplers",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "vector<cc::ISamplerInfo>",
                    "script_ns": "std::vector<cc::ISamplerInfo>",
                    "whole_name": "std::vector<cc::ISamplerInfo>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::ISamplerInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "textures",
                "pretty_name": "textures",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "vector<cc::ITextureInfo>",
                    "script_ns": "std::vector<cc::ITextureInfo>",
                    "whole_name": "std::vector<cc::ITextureInfo>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::ITextureInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "buffers",
                "pretty_name": "buffers",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "vector<cc::IBufferInfo>",
                    "script_ns": "std::vector<cc::IBufferInfo>",
                    "whole_name": "std::vector<cc::IBufferInfo>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IBufferInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "images",
                "pretty_name": "images",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "vector<cc::IImageInfo>",
                    "script_ns": "std::vector<cc::IImageInfo>",
                    "whole_name": "std::vector<cc::IImageInfo>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IImageInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "subpassInputs",
                "pretty_name": "subpassInputs",
                "signature_name": "js_assets_IShaderInfo",
                "type": {
                    "name": "vector<cc::IInputAttachmentInfo>",
                    "script_ns": "std::vector<cc::IInputAttachmentInfo>",
                    "whole_name": "std::vector<cc::IInputAttachmentInfo>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IInputAttachmentInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "getSource": {
                "name": "getSource",
                "signature_name": "js_assets_IShaderInfo_getSource",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "version"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "IShaderSource*",
                    "script_ns": "jsb.IShaderSource",
                    "whole_name": "const cc::IShaderSource*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IShaderSource*",
                    "is_const": true,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "IShaderInfo"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.EffectAsset",
        "parents": [
            "cc::Asset"
        ],
        "nested_classes": [],
        "class_name": "EffectAsset",
        "is_ref_class": false,
        "namespaced_class_name": "cc::EffectAsset",
        "underlined_class_name": "cc_EffectAsset",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "techniques",
                "names": [
                    "techniques"
                ],
                "type": {
                    "name": "vector<cc::ITechniqueInfo>",
                    "script_ns": "std::vector<cc::ITechniqueInfo>",
                    "whole_name": "const std::vector<cc::ITechniqueInfo>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::ITechniqueInfo>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "shaders",
                "names": [
                    "shaders"
                ],
                "type": {
                    "name": "vector<cc::IShaderInfo>",
                    "script_ns": "std::vector<cc::IShaderInfo>",
                    "whole_name": "const std::vector<cc::IShaderInfo>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IShaderInfo>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "combinations",
                "names": [
                    "combinations"
                ],
                "type": {
                    "name": "vector<std::unordered_map<std::string, boost::variant2::variant<std::vector<bool>, std::vector<int>, std::vector<std::string>>>>",
                    "script_ns": "std::vector<std::unordered_map<std::string, boost::variant2::variant<std::vector<bool>, std::vector<int>, std::vector<std::string>>>>",
                    "whole_name": "const std::vector<std::unordered_map<std::string, boost::variant2::variant<std::vector<bool>, std::vector<int>, std::vector<std::string>>>>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::unordered_map<std::string, boost::variant2::variant<std::vector<bool>, std::vector<int>, std::vector<std::string>>>>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "constructor": {
                "name": "EffectAsset",
                "signature_name": "js_assets_EffectAsset_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EffectAsset"
            }
        },
        "static_methods": {
            "registerAsset": {
                "name": "registerAsset",
                "signature_name": "js_assets_EffectAsset_registerAsset_static",
                "arguments": [
                    {
                        "name": "EffectAsset*",
                        "script_ns": "jsb.EffectAsset",
                        "whole_name": "cc::EffectAsset*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::EffectAsset*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "asset"
                ],
                "static": true,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Register the effect asset to the static map<br>\n-- zh \u5c06\u6307\u5b9a effect \u6ce8\u518c\u5230\u5168\u5c40\u7ba1\u7406\u5668\u3002",
                "current_class_name": "EffectAsset"
            },
            "remove": {
                "name": "remove",
                "signature_name": "js_assets_EffectAsset_remove_static",
                "min_args": 1,
                "comment": "",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": "EffectAsset",
                "implementations": [
                    {
                        "name": "remove",
                        "signature_name": "remove",
                        "arguments": [
                            {
                                "name": "EffectAsset*",
                                "script_ns": "jsb.EffectAsset",
                                "whole_name": "cc::EffectAsset*",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::EffectAsset*",
                                "is_const": false,
                                "is_pointer": true,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "asset"
                        ],
                        "static": true,
                        "min_args": 1,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "remove",
                        "signature_name": "remove",
                        "arguments": [
                            {
                                "name": "basic_string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::string",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "name"
                        ],
                        "static": true,
                        "min_args": 1,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "en Unregister the effect asset from the static map<br>\n-- zh \u5c06\u6307\u5b9a effect \u4ece\u5168\u5c40\u7ba1\u7406\u5668\u79fb\u9664\u3002",
                        "current_class_name": null
                    }
                ]
            },
            "get": {
                "name": "get",
                "signature_name": "js_assets_EffectAsset_get_static",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name"
                ],
                "static": true,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "EffectAsset*",
                    "script_ns": "jsb.EffectAsset",
                    "whole_name": "cc::EffectAsset*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::EffectAsset*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Get the effect asset by the given name.<br>\n-- zh \u83b7\u53d6\u6307\u5b9a\u540d\u5b57\u7684 effect \u8d44\u6e90\u3002",
                "current_class_name": "EffectAsset"
            },
            "getAll": {
                "name": "getAll",
                "signature_name": "js_assets_EffectAsset_getAll_static",
                "arguments": [],
                "argumentTips": [],
                "static": true,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "unordered_map<std::string, cc::IntrusivePtr<cc::EffectAsset>>",
                    "script_ns": "std::unordered_map<std::string, cc::IntrusivePtr<cc::EffectAsset>>",
                    "whole_name": "std::unordered_map<std::string, cc::IntrusivePtr<cc::EffectAsset>>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::unordered_map<std::string, cc::IntrusivePtr<cc::EffectAsset>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Get all registered effect assets.<br>\n-- zh \u83b7\u53d6\u6240\u6709\u5df2\u6ce8\u518c\u7684 effect \u8d44\u6e90\u3002",
                "current_class_name": "EffectAsset"
            }
        },
        "dict_of_override_method_should_be_bound": {
            "onLoaded": [
                {
                    "name": "onLoaded",
                    "signature_name": "onLoaded",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "en The loaded callback which should be invoked by the [[Loader]], will automatically register the effect.<br>\n-- zh \u901a\u8fc7 [[Loader]] \u52a0\u8f7d\u5b8c\u6210\u65f6\u7684\u56de\u8c03\uff0c\u5c06\u81ea\u52a8\u6ce8\u518c effect \u8d44\u6e90\u3002",
                    "current_class_name": null
                }
            ],
            "destroy": [
                {
                    "name": "destroy",
                    "signature_name": "destroy",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "initDefault": [
                {
                    "name": "initDefault",
                    "signature_name": "initDefault",
                    "arguments": [
                        {
                            "name": "optional<std::string>",
                            "script_ns": "boost.optional<std::string>",
                            "whole_name": "const boost::optional<std::string>&",
                            "namespace_name": "boost::",
                            "namespaced_class_name": "boost::optional<std::string>",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "uuid"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "validate": [
                {
                    "name": "validate",
                    "signature_name": "validate",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IMemoryImageSource",
        "parents": [],
        "nested_classes": [],
        "class_name": "IMemoryImageSource",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IMemoryImageSource",
        "underlined_class_name": "cc_IMemoryImageSource",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "data",
                "pretty_name": "data",
                "signature_name": "js_assets_IMemoryImageSource",
                "type": {
                    "name": "IntrusivePtr<cc::ArrayBuffer>",
                    "script_ns": "jsb.IntrusivePtr<jsb.ArrayBuffer>",
                    "whole_name": "cc::IntrusivePtr<cc::ArrayBuffer>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IntrusivePtr<cc::ArrayBuffer>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "compressed",
                "pretty_name": "compressed",
                "signature_name": "js_assets_IMemoryImageSource",
                "type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "width",
                "pretty_name": "width",
                "signature_name": "js_assets_IMemoryImageSource",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "height",
                "pretty_name": "height",
                "signature_name": "js_assets_IMemoryImageSource",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "format",
                "pretty_name": "format",
                "signature_name": "js_assets_IMemoryImageSource",
                "type": {
                    "name": "PixelFormat",
                    "script_ns": "jsb.PixelFormat",
                    "whole_name": "cc::PixelFormat",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::PixelFormat",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ImageAsset",
        "parents": [
            "cc::Asset"
        ],
        "nested_classes": [],
        "class_name": "ImageAsset",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ImageAsset",
        "underlined_class_name": "cc_ImageAsset",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "format",
                "names": [
                    "format"
                ],
                "type": {
                    "name": "PixelFormat",
                    "script_ns": "jsb.PixelFormat",
                    "whole_name": "cc::PixelFormat",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::PixelFormat",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "url",
                "names": [
                    "url"
                ],
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "const std::string&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "constructor": {
                "name": "ImageAsset",
                "signature_name": "js_assets_ImageAsset_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "ImageAsset"
            },
            "getData": {
                "name": "getData",
                "signature_name": "js_assets_ImageAsset_getData",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "unsigned char*",
                    "script_ns": "unsigned char",
                    "whole_name": "const unsigned char*",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned char*",
                    "is_const": true,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Image data.<br>\n-- zh \u6b64\u56fe\u50cf\u8d44\u6e90\u7684\u56fe\u50cf\u6570\u636e\u3002",
                "current_class_name": "ImageAsset"
            },
            "getWidth": {
                "name": "getWidth",
                "signature_name": "js_assets_ImageAsset_getWidth",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en The pixel width of the image.<br>\n-- zh \u6b64\u56fe\u50cf\u8d44\u6e90\u7684\u50cf\u7d20\u5bbd\u5ea6\u3002",
                "current_class_name": "ImageAsset"
            },
            "getHeight": {
                "name": "getHeight",
                "signature_name": "js_assets_ImageAsset_getHeight",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en The pixel height of the image.<br>\n-- zh \u6b64\u56fe\u50cf\u8d44\u6e90\u7684\u50cf\u7d20\u9ad8\u5ea6\u3002",
                "current_class_name": "ImageAsset"
            },
            "isCompressed": {
                "name": "isCompressed",
                "signature_name": "js_assets_ImageAsset_isCompressed",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Whether the image is in compressed texture format.<br>\n-- zh \u6b64\u56fe\u50cf\u8d44\u6e90\u662f\u5426\u4e3a\u538b\u7f29\u50cf\u7d20\u683c\u5f0f\u3002",
                "current_class_name": "ImageAsset"
            },
            "getUrl": {
                "name": "getUrl",
                "signature_name": "js_assets_ImageAsset_getUrl",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "const std::string&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en The original source image URL, it could be empty.<br>\n-- zh \u6b64\u56fe\u50cf\u8d44\u6e90\u7684\u539f\u59cb\u56fe\u50cf\u6e90\u7684 URL\u3002\u5f53\u539f\u59cb\u56fe\u50cf\u5143\u4e0d\u662f HTML \u6587\u4ef6\u65f6\u53ef\u80fd\u4e3a\u7a7a\u3002<br>\n-- deprecated Please use [[nativeUrl]]",
                "current_class_name": "ImageAsset"
            },
            "setWidth": {
                "name": "setWidth",
                "signature_name": "js_assets_ImageAsset_setWidth",
                "arguments": [
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "width"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "ImageAsset"
            },
            "setHeight": {
                "name": "setHeight",
                "signature_name": "js_assets_ImageAsset_setHeight",
                "arguments": [
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "height"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "ImageAsset"
            },
            "setData": {
                "name": "setData",
                "signature_name": "setData",
                "arguments": [
                    {
                        "name": "unsigned char*",
                        "script_ns": "unsigned char",
                        "whole_name": "unsigned char*",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned char*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "data"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": null
            },
            "setUrl": {
                "name": "setUrl",
                "signature_name": "js_assets_ImageAsset_setUrl",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "url"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "ImageAsset"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "setNativeAsset": [
                {
                    "name": "setNativeAsset",
                    "signature_name": "setNativeAsset",
                    "arguments": [
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "obj"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IMaterialInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IMaterialInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IMaterialInfo",
        "underlined_class_name": "cc_IMaterialInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "effectAsset",
                "pretty_name": "effectAsset",
                "signature_name": "js_assets_IMaterialInfo",
                "type": {
                    "name": "EffectAsset*",
                    "script_ns": "jsb.EffectAsset",
                    "whole_name": "cc::EffectAsset*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::EffectAsset*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "effectName",
                "pretty_name": "effectName",
                "signature_name": "js_assets_IMaterialInfo",
                "type": {
                    "name": "optional<std::string>",
                    "script_ns": "boost.optional<std::string>",
                    "whole_name": "boost::optional<std::string>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "technique",
                "pretty_name": "technique",
                "signature_name": "js_assets_IMaterialInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "defines",
                "pretty_name": "defines",
                "signature_name": "js_assets_IMaterialInfo",
                "type": {
                    "name": "optional<boost::variant2::variant<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>, std::vector<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>>>>",
                    "script_ns": "boost.optional<boost.variant2::variant<std::unordered_map<std::string, boost.variant2::variant<int, bool, std::string>>, std::vector<std::unordered_map<std::string, boost.variant2::variant<int, bool, std::string>>>>>",
                    "whole_name": "boost::optional<boost::variant2::variant<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>, std::vector<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>>>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<boost::variant2::variant<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>, std::vector<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>>>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "states",
                "pretty_name": "states",
                "signature_name": "js_assets_IMaterialInfo",
                "type": {
                    "name": "optional<boost::variant2::variant<cc::IPassStates, std::vector<cc::IPassStates>>>",
                    "script_ns": "boost.optional<boost.variant2::variant<cc::IPassStates, std::vector<cc::IPassStates>>>",
                    "whole_name": "boost::optional<boost::variant2::variant<cc::IPassStates, std::vector<cc::IPassStates>>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<boost::variant2::variant<cc::IPassStates, std::vector<cc::IPassStates>>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Material",
        "parents": [
            "cc::Asset"
        ],
        "nested_classes": [],
        "class_name": "Material",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Material",
        "underlined_class_name": "cc_Material",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [
            {
                "name": "_effectAsset",
                "pretty_name": "_effectAsset",
                "signature_name": "js_assets_Material",
                "type": {
                    "name": "IntrusivePtr<cc::EffectAsset>",
                    "script_ns": "jsb.IntrusivePtr<jsb.EffectAsset>",
                    "whole_name": "cc::IntrusivePtr<cc::EffectAsset>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IntrusivePtr<cc::EffectAsset>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_techIdx",
                "pretty_name": "_techIdx",
                "signature_name": "js_assets_Material",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_defines",
                "pretty_name": "_defines",
                "signature_name": "js_assets_Material",
                "type": {
                    "name": "vector<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>>",
                    "script_ns": "std::vector<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>>",
                    "whole_name": "std::vector<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_states",
                "pretty_name": "_states",
                "signature_name": "js_assets_Material",
                "type": {
                    "name": "vector<cc::IPassStates>",
                    "script_ns": "std::vector<cc::IPassStates>",
                    "whole_name": "std::vector<cc::IPassStates>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IPassStates>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_propsInternal",
                "pretty_name": "_props",
                "signature_name": "js_assets_Material",
                "type": {
                    "name": "vector<std::unordered_map<std::string, boost::variant2::variant<boost::variant2::monostate, boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>>>",
                    "script_ns": "std::vector<std::unordered_map<std::string, boost::variant2::variant<boost::variant2::monostate, boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>>>",
                    "whole_name": "std::vector<std::unordered_map<std::string, boost::variant2::variant<boost::variant2::monostate, boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>>>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::unordered_map<std::string, boost::variant2::variant<boost::variant2::monostate, boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "effectAsset",
                "names": [
                    "effectAsset"
                ],
                "type": {
                    "name": "EffectAsset*",
                    "script_ns": "jsb.EffectAsset",
                    "whole_name": "cc::EffectAsset*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::EffectAsset*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "effectName",
                "names": [
                    "effectName"
                ],
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "technique",
                "names": [
                    "technique"
                ],
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "hash",
                "names": [
                    "hash"
                ],
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "parent",
                "names": [
                    "parent"
                ],
                "type": {
                    "name": "Material*",
                    "script_ns": "jsb.Material",
                    "whole_name": "cc::Material*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Material*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "constructor": {
                "name": "Material",
                "signature_name": "js_assets_Material_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "initialize": {
                "name": "initialize",
                "signature_name": "js_assets_Material_initialize",
                "arguments": [
                    {
                        "name": "IMaterialInfo",
                        "script_ns": "jsb.IMaterialInfo",
                        "whole_name": "const cc::IMaterialInfo&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IMaterialInfo",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "info"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Initialize this material with the given information.<br>\n-- zh \u6839\u636e\u6240\u7ed9\u4fe1\u606f\u521d\u59cb\u5316\u8fd9\u4e2a\u6750\u8d28\uff0c\u521d\u59cb\u5316\u6b63\u5e38\u7ed3\u675f\u540e\u6750\u8d28\u5373\u53ef\u7acb\u5373\u7528\u4e8e\u6e32\u67d3\u3002<br>\n-- param info Material description info.",
                "current_class_name": "Material"
            },
            "reset": {
                "name": "reset",
                "signature_name": "js_assets_Material_reset",
                "arguments": [
                    {
                        "name": "IMaterialInfo",
                        "script_ns": "jsb.IMaterialInfo",
                        "whole_name": "const cc::IMaterialInfo&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IMaterialInfo",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "info"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "recompileShaders": {
                "name": "recompileShaders",
                "signature_name": "js_assets_Material_recompileShaders",
                "min_args": 1,
                "comment": "",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": "Material",
                "implementations": [
                    {
                        "name": "recompileShaders",
                        "signature_name": "recompileShaders",
                        "arguments": [
                            {
                                "name": "unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>",
                                "script_ns": "std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>",
                                "whole_name": "const std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "int",
                                "script_ns": "int",
                                "whole_name": "int",
                                "namespace_name": "",
                                "namespaced_class_name": "int",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": true,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "overrides",
                            "passIdx"
                        ],
                        "static": false,
                        "min_args": 2,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "recompileShaders",
                        "signature_name": "recompileShaders",
                        "arguments": [
                            {
                                "name": "unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>",
                                "script_ns": "std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>",
                                "whole_name": "const std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::unordered_map<std::string, boost::variant2::variant<int, bool, std::string>>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "overrides"
                        ],
                        "static": false,
                        "min_args": 1,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "en Recompile the shader with the specified macro overrides. Allowed only on material instances.<br>\n-- zh \u4f7f\u7528\u6307\u5b9a\u9884\u5904\u7406\u5b8f\u91cd\u65b0\u7f16\u8bd1\u5f53\u524d pass\uff08\u6570\u7ec4\uff09\u4e2d\u7684 shader\u3002\u53ea\u5141\u8bb8\u5bf9\u6750\u8d28\u5b9e\u4f8b\u6267\u884c\u3002<br>\n-- param overrides The shader macro override values.<br>\n-- param passIdx The pass to apply to. Will apply to all passes if not specified.",
                        "current_class_name": null
                    }
                ]
            },
            "overridePipelineStates": {
                "name": "overridePipelineStates",
                "signature_name": "js_assets_Material_overridePipelineStates",
                "min_args": 1,
                "comment": "",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": "Material",
                "implementations": [
                    {
                        "name": "overridePipelineStates",
                        "signature_name": "overridePipelineStates",
                        "arguments": [
                            {
                                "name": "IPassStates",
                                "script_ns": "jsb.IPassStates",
                                "whole_name": "const cc::IPassStates&",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::IPassStates",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": true,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "int",
                                "script_ns": "int",
                                "whole_name": "int",
                                "namespace_name": "",
                                "namespaced_class_name": "int",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": true,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "overrides",
                            "passIdx"
                        ],
                        "static": false,
                        "min_args": 2,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "overridePipelineStates",
                        "signature_name": "overridePipelineStates",
                        "arguments": [
                            {
                                "name": "IPassStates",
                                "script_ns": "jsb.IPassStates",
                                "whole_name": "const cc::IPassStates&",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::IPassStates",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": true,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "overrides"
                        ],
                        "static": false,
                        "min_args": 1,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "en Override the passes with the specified pipeline states. Allowed only on material instances.<br>\n-- zh \u4f7f\u7528\u6307\u5b9a\u7ba1\u7ebf\u72b6\u6001\u91cd\u8f7d\u5f53\u524d\u7684 pass\uff08\u6570\u7ec4\uff09\u3002\u53ea\u5141\u8bb8\u5bf9\u6750\u8d28\u5b9e\u4f8b\u6267\u884c\u3002<br>\n-- param overrides The pipeline state override values.<br>\n-- param passIdx The pass to apply to. Will apply to all passes if not specified.",
                        "current_class_name": null
                    }
                ]
            },
            "resetUniforms": {
                "name": "resetUniforms",
                "signature_name": "js_assets_Material_resetUniforms",
                "arguments": [
                    {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "clearPasses"
                ],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Reset all the uniforms to the default value specified in [[EffectAsset]].<br>\n-- zh \u91cd\u7f6e\u6750\u8d28\u7684\u6240\u6709 uniform \u53c2\u6570\u6570\u636e\u4e3a [[EffectAsset]] \u4e2d\u7684\u9ed8\u8ba4\u521d\u59cb\u503c\u3002<br>\n-- param clearPasses Will the rendering data be cleared too?",
                "current_class_name": "Material"
            },
            "setProperty": {
                "name": "setProperty",
                "signature_name": "setProperty",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "variant<boost::variant2::monostate, boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>",
                        "script_ns": "boost.variant<boost.monostate, boost.variant<boost.monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost.variant<boost.monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>",
                        "whole_name": "const boost::variant2::variant<boost::variant2::monostate, boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>&",
                        "namespace_name": "boost::variant2::",
                        "namespaced_class_name": "boost::variant2::variant<boost::variant2::monostate, boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en<br>\n-- Convenient property setter provided for quick material setup.<br><br>\n-- [[Pass.setUniform]] should be used instead if you need to do per-frame uniform update.<br>\n-- zh<br>\n-- \u8bbe\u7f6e\u6750\u8d28 uniform \u53c2\u6570\u7684\u7edf\u4e00\u5165\u53e3\u3002<br><br>\n-- \u6ce8\u610f\u5982\u679c\u9700\u8981\u6bcf\u5e27\u66f4\u65b0 uniform\uff0c\u5efa\u8bae\u4f7f\u7528 [[Pass.setUniform]] \u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\u3002<br>\n-- param name The target uniform name.<br>\n-- param val The target value.<br>\n-- param passIdx The pass to apply to. Will apply to all passes if not specified.",
                "current_class_name": null
            },
            "setPropertyFloat32": {
                "name": "setPropertyFloat32",
                "signature_name": "js_assets_Material_setPropertyFloat32",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "float",
                        "script_ns": "float",
                        "whole_name": "float",
                        "namespace_name": "",
                        "namespaced_class_name": "float",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyInt32": {
                "name": "setPropertyInt32",
                "signature_name": "js_assets_Material_setPropertyInt32",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyVec2": {
                "name": "setPropertyVec2",
                "signature_name": "js_assets_Material_setPropertyVec2",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Vec2",
                        "script_ns": "jsb.Vec2",
                        "whole_name": "const cc::Vec2&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Vec2",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyVec3": {
                "name": "setPropertyVec3",
                "signature_name": "js_assets_Material_setPropertyVec3",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Vec3",
                        "script_ns": "jsb.Vec3",
                        "whole_name": "const cc::Vec3&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Vec3",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyVec4": {
                "name": "setPropertyVec4",
                "signature_name": "js_assets_Material_setPropertyVec4",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Vec4",
                        "script_ns": "jsb.Vec4",
                        "whole_name": "const cc::Vec4&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Vec4",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyColor": {
                "name": "setPropertyColor",
                "signature_name": "js_assets_Material_setPropertyColor",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Color",
                        "script_ns": "jsb.Color",
                        "whole_name": "const cc::Color&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Color",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyMat3": {
                "name": "setPropertyMat3",
                "signature_name": "js_assets_Material_setPropertyMat3",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Mat3",
                        "script_ns": "jsb.Mat3",
                        "whole_name": "const cc::Mat3&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mat3",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyMat4": {
                "name": "setPropertyMat4",
                "signature_name": "js_assets_Material_setPropertyMat4",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Mat4",
                        "script_ns": "jsb.Mat4",
                        "whole_name": "const cc::Mat4&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mat4",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyQuaternion": {
                "name": "setPropertyQuaternion",
                "signature_name": "js_assets_Material_setPropertyQuaternion",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Quaternion",
                        "script_ns": "jsb.Quaternion",
                        "whole_name": "const cc::Quaternion&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Quaternion",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyTextureBase": {
                "name": "setPropertyTextureBase",
                "signature_name": "js_assets_Material_setPropertyTextureBase",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "TextureBase*",
                        "script_ns": "jsb.TextureBase",
                        "whole_name": "cc::TextureBase*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::TextureBase*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyGFXTexture": {
                "name": "setPropertyGFXTexture",
                "signature_name": "js_assets_Material_setPropertyGFXTexture",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Texture*",
                        "script_ns": "gfx.Texture",
                        "whole_name": "cc::gfx::Texture*",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Texture*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyFloat32Array": {
                "name": "setPropertyFloat32Array",
                "signature_name": "js_assets_Material_setPropertyFloat32Array",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<float>",
                        "script_ns": "std::vector<float>",
                        "whole_name": "const std::vector<float>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<float>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyInt32Array": {
                "name": "setPropertyInt32Array",
                "signature_name": "js_assets_Material_setPropertyInt32Array",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<int>",
                        "script_ns": "std::vector<int>",
                        "whole_name": "const std::vector<int>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<int>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyVec2Array": {
                "name": "setPropertyVec2Array",
                "signature_name": "js_assets_Material_setPropertyVec2Array",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<cc::Vec2>",
                        "script_ns": "std::vector<cc::Vec2>",
                        "whole_name": "const std::vector<cc::Vec2>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::Vec2>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyVec3Array": {
                "name": "setPropertyVec3Array",
                "signature_name": "js_assets_Material_setPropertyVec3Array",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<cc::Vec3>",
                        "script_ns": "std::vector<cc::Vec3>",
                        "whole_name": "const std::vector<cc::Vec3>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::Vec3>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyVec4Array": {
                "name": "setPropertyVec4Array",
                "signature_name": "js_assets_Material_setPropertyVec4Array",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<cc::Vec4>",
                        "script_ns": "std::vector<cc::Vec4>",
                        "whole_name": "const std::vector<cc::Vec4>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::Vec4>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyColorArray": {
                "name": "setPropertyColorArray",
                "signature_name": "js_assets_Material_setPropertyColorArray",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<cc::Color>",
                        "script_ns": "std::vector<cc::Color>",
                        "whole_name": "const std::vector<cc::Color>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::Color>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyMat3Array": {
                "name": "setPropertyMat3Array",
                "signature_name": "js_assets_Material_setPropertyMat3Array",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<cc::Mat3>",
                        "script_ns": "std::vector<cc::Mat3>",
                        "whole_name": "const std::vector<cc::Mat3>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::Mat3>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyMat4Array": {
                "name": "setPropertyMat4Array",
                "signature_name": "js_assets_Material_setPropertyMat4Array",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<cc::Mat4>",
                        "script_ns": "std::vector<cc::Mat4>",
                        "whole_name": "const std::vector<cc::Mat4>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::Mat4>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyQuaternionArray": {
                "name": "setPropertyQuaternionArray",
                "signature_name": "js_assets_Material_setPropertyQuaternionArray",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<cc::Quaternion>",
                        "script_ns": "std::vector<cc::Quaternion>",
                        "whole_name": "const std::vector<cc::Quaternion>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::Quaternion>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyTextureBaseArray": {
                "name": "setPropertyTextureBaseArray",
                "signature_name": "js_assets_Material_setPropertyTextureBaseArray",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<cc::TextureBase *>",
                        "script_ns": "std::vector<cc::TextureBase *>",
                        "whole_name": "const std::vector<cc::TextureBase *>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::TextureBase *>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "setPropertyGFXTextureArray": {
                "name": "setPropertyGFXTextureArray",
                "signature_name": "js_assets_Material_setPropertyGFXTextureArray",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<cc::gfx::Texture *>",
                        "script_ns": "std::vector<cc::gfx::Texture *>",
                        "whole_name": "const std::vector<cc::gfx::Texture *>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::gfx::Texture *>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "val",
                    "passIdx"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "getProperty": {
                "name": "getProperty",
                "signature_name": "js_assets_Material_getProperty",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "name",
                    "passIdx"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "variant<boost::variant2::monostate, boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>*",
                    "script_ns": "boost.variant<boost.monostate, boost.variant<boost.monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost.variant<boost.monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>",
                    "whole_name": "const boost::variant2::variant<boost::variant2::monostate, boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>*",
                    "namespace_name": "boost::variant2::",
                    "namespaced_class_name": "boost::variant2::variant<boost::variant2::monostate, boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>, std::vector<boost::variant2::variant<boost::variant2::monostate, float, int, cc::Vec2, cc::Vec3, cc::Vec4, cc::Color, cc::Mat3, cc::Mat4, cc::Quaternion, cc::IntrusivePtr<cc::TextureBase>, cc::IntrusivePtr<cc::gfx::Texture>>>>*",
                    "is_const": true,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en<br>\n-- Get the specified uniform value for this material.<br><br>\n-- Note that only uniforms set through [[Material.setProperty]] can be acquired here.<br><br>\n-- For the complete rendering data, use [[Pass.getUniform]] instead.<br>\n-- zh<br>\n-- \u83b7\u53d6\u5f53\u524d\u6750\u8d28\u7684\u6307\u5b9a uniform \u53c2\u6570\u7684\u503c\u3002<br><br>\n-- \u6ce8\u610f\u53ea\u6709\u901a\u8fc7 [[Material.setProperty]] \u51fd\u6570\u8bbe\u7f6e\u7684\u53c2\u6570\u624d\u80fd\u4ece\u6b64\u51fd\u6570\u53d6\u51fa\uff0c<br><br>\n-- \u5982\u9700\u53d6\u51fa\u5b8c\u6574\u7684\u6e32\u67d3\u6570\u636e\uff0c\u8bf7\u4f7f\u7528 [[Pass.getUniform]]\u3002<br>\n-- param name The property or uniform name.<br>\n-- param passIdx The target pass index. If not specified, return the first found value in all passes.",
                "current_class_name": "Material"
            },
            "copy": {
                "name": "copy",
                "signature_name": "js_assets_Material_copy",
                "arguments": [
                    {
                        "name": "Material*",
                        "script_ns": "jsb.Material",
                        "whole_name": "const cc::Material*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Material*",
                        "is_const": true,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "IMaterialInfo*",
                        "script_ns": "jsb.IMaterialInfo",
                        "whole_name": "cc::IMaterialInfo*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IMaterialInfo*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "mat",
                    "overrides"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Copy the target material, with optional overrides.<br>\n-- zh \u590d\u5236\u76ee\u6807\u6750\u8d28\u5230\u5f53\u524d\u5b9e\u4f8b\uff0c\u5141\u8bb8\u63d0\u4f9b\u91cd\u8f7d\u4fe1\u606f\u3002\u3002<br>\n-- param mat The material to be copied.<br>\n-- param overrides The overriding states on top of the original material.",
                "current_class_name": "Material"
            },
            "fillInfo": {
                "name": "fillInfo",
                "signature_name": "js_assets_Material_fillInfo",
                "arguments": [
                    {
                        "name": "IMaterialInfo",
                        "script_ns": "jsb.IMaterialInfo",
                        "whole_name": "const cc::IMaterialInfo&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IMaterialInfo",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "info"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Material"
            },
            "getPasses": {
                "name": "getPasses",
                "signature_name": "js_assets_Material_getPasses",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "shared_ptr<std::vector<cc::IntrusivePtr<cc::scene::Pass>>>",
                    "script_ns": "std::shared_ptr<std::vector<cc::IntrusivePtr<cc::scene::Pass>>>",
                    "whole_name": "std::shared_ptr<std::vector<cc::IntrusivePtr<cc::scene::Pass>>>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::shared_ptr<std::vector<cc::IntrusivePtr<cc::scene::Pass>>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en The passes defined in this material.<br>\n-- zh \u5f53\u524d\u6b63\u5728\u4f7f\u7528\u7684 pass \u6570\u7ec4\u3002",
                "current_class_name": "Material"
            }
        },
        "static_methods": {
            "getHashForMaterial": {
                "name": "getHashForMaterial",
                "signature_name": "js_assets_Material_getHashForMaterial_static",
                "arguments": [
                    {
                        "name": "Material*",
                        "script_ns": "jsb.Material",
                        "whole_name": "cc::Material*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Material*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "material"
                ],
                "static": true,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Get hash for a material<br>\n-- zh \u83b7\u53d6\u4e00\u4e2a\u6750\u8d28\u7684\u54c8\u5e0c\u503c<br>\n-- param material",
                "current_class_name": "Material"
            }
        },
        "dict_of_override_method_should_be_bound": {
            "initDefault": [
                {
                    "name": "initDefault",
                    "signature_name": "initDefault",
                    "arguments": [
                        {
                            "name": "optional<std::string>",
                            "script_ns": "boost.optional<std::string>",
                            "whole_name": "const boost::optional<std::string>&",
                            "namespace_name": "boost::",
                            "namespaced_class_name": "boost::optional<std::string>",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "uuid"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "validate": [
                {
                    "name": "validate",
                    "signature_name": "validate",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "destroy": [
                {
                    "name": "destroy",
                    "signature_name": "destroy",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "en<br>\n-- Destroy the material definitively.<br><br>\n-- Cannot re-initialize after destroy.<br><br>\n-- Modifications on active materials can be acheived by<br><br>\n-- creating a new Material, invoke the `copy` function<br><br>\n-- with the desired overrides, and assigning it to the target components.<br>\n-- zh<br>\n-- \u5f7b\u5e95\u9500\u6bc1\u6750\u8d28\uff0c\u6ce8\u610f\u9500\u6bc1\u540e\u65e0\u6cd5\u91cd\u65b0\u521d\u59cb\u5316\u3002<br><br>\n-- \u5982\u9700\u4fee\u6539\u73b0\u6709\u6750\u8d28\uff0c\u8bf7\u521b\u5efa\u4e00\u4e2a\u65b0\u6750\u8d28\uff0c<br><br>\n-- \u8c03\u7528 copy \u51fd\u6570\u4f20\u5165\u9700\u8981\u7684 overrides \u5e76\u8d4b\u7ed9\u76ee\u6807\u7ec4\u4ef6\u3002",
                    "current_class_name": null
                }
            ],
            "onLoaded": [
                {
                    "name": "onLoaded",
                    "signature_name": "onLoaded",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "en Callback function after material is loaded in [[Loader]]. Initialize the resources automatically.<br>\n-- zh \u901a\u8fc7 [[Loader]] \u52a0\u8f7d\u5b8c\u6210\u65f6\u7684\u56de\u8c03\uff0c\u5c06\u81ea\u52a8\u521d\u59cb\u5316\u6750\u8d28\u8d44\u6e90\u3002",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.TextureBase",
        "parents": [
            "cc::Asset"
        ],
        "nested_classes": [],
        "class_name": "TextureBase",
        "is_ref_class": false,
        "namespaced_class_name": "cc::TextureBase",
        "underlined_class_name": "cc_TextureBase",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [
            {
                "name": "_format",
                "pretty_name": "_format",
                "signature_name": "js_assets_TextureBase",
                "type": {
                    "name": "PixelFormat",
                    "script_ns": "jsb.PixelFormat",
                    "whole_name": "cc::PixelFormat",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::PixelFormat",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_minFilter",
                "pretty_name": "_minFilter",
                "signature_name": "js_assets_TextureBase",
                "type": {
                    "name": "Filter",
                    "script_ns": "jsb.Filter",
                    "whole_name": "cc::Filter",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Filter",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_magFilter",
                "pretty_name": "_magFilter",
                "signature_name": "js_assets_TextureBase",
                "type": {
                    "name": "Filter",
                    "script_ns": "jsb.Filter",
                    "whole_name": "cc::Filter",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Filter",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_mipFilter",
                "pretty_name": "_mipFilter",
                "signature_name": "js_assets_TextureBase",
                "type": {
                    "name": "Filter",
                    "script_ns": "jsb.Filter",
                    "whole_name": "cc::Filter",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Filter",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_wrapS",
                "pretty_name": "_wrapS",
                "signature_name": "js_assets_TextureBase",
                "type": {
                    "name": "WrapMode",
                    "script_ns": "jsb.WrapMode",
                    "whole_name": "cc::WrapMode",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::WrapMode",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_wrapT",
                "pretty_name": "_wrapT",
                "signature_name": "js_assets_TextureBase",
                "type": {
                    "name": "WrapMode",
                    "script_ns": "jsb.WrapMode",
                    "whole_name": "cc::WrapMode",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::WrapMode",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_wrapR",
                "pretty_name": "_wrapR",
                "signature_name": "js_assets_TextureBase",
                "type": {
                    "name": "WrapMode",
                    "script_ns": "jsb.WrapMode",
                    "whole_name": "cc::WrapMode",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::WrapMode",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_anisotropy",
                "pretty_name": "_anisotropy",
                "signature_name": "js_assets_TextureBase",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_width",
                "pretty_name": "_width",
                "signature_name": "js_assets_TextureBase",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "_height",
                "pretty_name": "_height",
                "signature_name": "js_assets_TextureBase",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "isCompressed",
                "names": [
                    "isCompressed"
                ],
                "type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "_width",
                "names": [
                    "_width",
                    "width"
                ],
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "_height",
                "names": [
                    "_height",
                    "height"
                ],
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "constructor": {
                "name": "TextureBase",
                "signature_name": "js_assets_TextureBase_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "TextureBase"
            },
            "getId": {
                "name": "getId",
                "signature_name": "js_assets_TextureBase_getId",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "const std::string&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Gets the id of the texture<br>\n-- zh \u83b7\u53d6\u6807\u8bc6\u7b26\u3002<br>\n-- returns The id",
                "current_class_name": "TextureBase"
            },
            "getPixelFormat": {
                "name": "getPixelFormat",
                "signature_name": "js_assets_TextureBase_getPixelFormat",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "PixelFormat",
                    "script_ns": "jsb.PixelFormat",
                    "whole_name": "cc::PixelFormat",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::PixelFormat",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Gets the pixel format<br>\n-- zh \u83b7\u53d6\u50cf\u7d20\u683c\u5f0f\u3002<br>\n-- returns The pixel format",
                "current_class_name": "TextureBase"
            },
            "getAnisotropy": {
                "name": "getAnisotropy",
                "signature_name": "js_assets_TextureBase_getAnisotropy",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Gets the anisotropy<br>\n-- zh \u83b7\u53d6\u5404\u5411\u5f02\u6027\u3002<br>\n-- returns The anisotropy",
                "current_class_name": "TextureBase"
            },
            "setWrapMode": {
                "name": "setWrapMode",
                "signature_name": "js_assets_TextureBase_setWrapMode",
                "min_args": 2,
                "comment": "",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": "TextureBase",
                "implementations": [
                    {
                        "name": "setWrapMode",
                        "signature_name": "setWrapMode",
                        "arguments": [
                            {
                                "name": "WrapMode",
                                "script_ns": "jsb.WrapMode",
                                "whole_name": "cc::WrapMode",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::WrapMode",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": true,
                                "is_numeric": false,
                                "enum_declare_type": "int",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "WrapMode",
                                "script_ns": "jsb.WrapMode",
                                "whole_name": "cc::WrapMode",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::WrapMode",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": true,
                                "is_numeric": false,
                                "enum_declare_type": "int",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "wrapS",
                            "wrapT"
                        ],
                        "static": false,
                        "min_args": 2,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "setWrapMode",
                        "signature_name": "setWrapMode",
                        "arguments": [
                            {
                                "name": "WrapMode",
                                "script_ns": "jsb.WrapMode",
                                "whole_name": "cc::WrapMode",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::WrapMode",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": true,
                                "is_numeric": false,
                                "enum_declare_type": "int",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "WrapMode",
                                "script_ns": "jsb.WrapMode",
                                "whole_name": "cc::WrapMode",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::WrapMode",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": true,
                                "is_numeric": false,
                                "enum_declare_type": "int",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "WrapMode",
                                "script_ns": "jsb.WrapMode",
                                "whole_name": "cc::WrapMode",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::WrapMode",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": true,
                                "is_numeric": false,
                                "enum_declare_type": "int",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "wrapS",
                            "wrapT",
                            "wrapR"
                        ],
                        "static": false,
                        "min_args": 3,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "en Sets the wrap mode of the texture.<br>\n-- Be noted, if the size of the texture is not power of two, only [[WrapMode.CLAMP_TO_EDGE]] is allowed.<br>\n-- zh \u8bbe\u7f6e\u6b64\u8d34\u56fe\u7684\u7f20\u7ed5\u6a21\u5f0f\u3002<br>\n-- \u6ce8\u610f\uff0c\u82e5\u8d34\u56fe\u5c3a\u5bf8\u4e0d\u662f 2 \u7684\u6574\u6570\u5e42\uff0c\u7f20\u7ed5\u6a21\u5f0f\u4ec5\u5141\u8bb8 [[WrapMode.CLAMP_TO_EDGE]]\u3002<br>\n-- param wrapS S(U) coordinate wrap mode<br>\n-- param wrapT T(V) coordinate wrap mode<br>\n-- param wrapR R(W) coordinate wrap mode",
                        "current_class_name": null
                    }
                ]
            },
            "setFilters": {
                "name": "setFilters",
                "signature_name": "js_assets_TextureBase_setFilters",
                "arguments": [
                    {
                        "name": "Filter",
                        "script_ns": "jsb.Filter",
                        "whole_name": "cc::Filter",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Filter",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Filter",
                        "script_ns": "jsb.Filter",
                        "whole_name": "cc::Filter",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Filter",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "minFilter",
                    "magFilter"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Sets the texture's filter mode<br>\n-- zh \u8bbe\u7f6e\u6b64\u8d34\u56fe\u7684\u8fc7\u6ee4\u7b97\u6cd5\u3002<br>\n-- param minFilter Filter mode for scale down<br>\n-- param magFilter Filter mode for scale up",
                "current_class_name": "TextureBase"
            },
            "setMipFilter": {
                "name": "setMipFilter",
                "signature_name": "js_assets_TextureBase_setMipFilter",
                "arguments": [
                    {
                        "name": "Filter",
                        "script_ns": "jsb.Filter",
                        "whole_name": "cc::Filter",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Filter",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "mipFilter"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Sets the texture's mip filter<br>\n-- zh \u8bbe\u7f6e\u6b64\u8d34\u56fe\u7684\u7f29\u5c0f\u8fc7\u6ee4\u7b97\u6cd5\u3002<br>\n-- param mipFilter Filter mode for scale down",
                "current_class_name": "TextureBase"
            },
            "setAnisotropy": {
                "name": "setAnisotropy",
                "signature_name": "js_assets_TextureBase_setAnisotropy",
                "arguments": [
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "anisotropy"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Sets the texture's anisotropy<br>\n-- zh \u8bbe\u7f6e\u6b64\u8d34\u56fe\u7684\u5404\u5411\u5f02\u6027\u3002<br>\n-- param anisotropy",
                "current_class_name": "TextureBase"
            },
            "getHash": {
                "name": "getHash",
                "signature_name": "js_assets_TextureBase_getHash",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Gets the texture hash.<br>\n-- zh \u83b7\u53d6\u6b64\u8d34\u56fe\u7684\u54c8\u5e0c\u503c\u3002",
                "current_class_name": "TextureBase"
            },
            "getGFXTexture": {
                "name": "getGFXTexture",
                "signature_name": "js_assets_TextureBase_getGFXTexture",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "Texture*",
                    "script_ns": "gfx.Texture",
                    "whole_name": "cc::gfx::Texture*",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::Texture*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Gets the GFX Texture resource<br>\n-- zh \u83b7\u53d6\u6b64\u8d34\u56fe\u5e95\u5c42\u7684 GFX \u8d34\u56fe\u5bf9\u8c61\u3002",
                "current_class_name": "TextureBase"
            },
            "getSamplerInfo": {
                "name": "getSamplerInfo",
                "signature_name": "js_assets_TextureBase_getSamplerInfo",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "SamplerInfo",
                    "script_ns": "gfx.SamplerInfo",
                    "whole_name": "const cc::gfx::SamplerInfo&",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::SamplerInfo",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Gets the internal GFX sampler information.<br>\n-- zh \u83b7\u53d6\u6b64\u8d34\u56fe\u5185\u90e8\u4f7f\u7528\u7684 GFX \u91c7\u6837\u5668\u4fe1\u606f\u3002<br>\n-- private",
                "current_class_name": "TextureBase"
            },
            "getGFXSampler": {
                "name": "getGFXSampler",
                "signature_name": "js_assets_TextureBase_getGFXSampler",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "Sampler*",
                    "script_ns": "gfx.Sampler",
                    "whole_name": "cc::gfx::Sampler*",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::Sampler*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Gets the sampler resource for the texture<br>\n-- zh \u83b7\u53d6\u6b64\u8d34\u56fe\u5e95\u5c42\u7684 GFX \u91c7\u6837\u4fe1\u606f\u3002",
                "current_class_name": "TextureBase"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "destroy": [
                {
                    "name": "destroy",
                    "signature_name": "destroy",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "en Destroy the current texture, clear up the related GPU resources.<br>\n-- zh \u9500\u6bc1\u6b64\u8d34\u56fe\uff0c\u5e76\u91ca\u653e\u5360\u7528\u7684 GPU \u8d44\u6e90\u3002",
                    "current_class_name": null
                }
            ],
            "serialize": [
                {
                    "name": "serialize",
                    "signature_name": "serialize",
                    "arguments": [
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "ctxForExporting"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "any",
                        "script_ns": "nowhere",
                        "whole_name": "ccstd::any",
                        "namespace_name": "ccstd::",
                        "namespaced_class_name": "ccstd::any",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "return",
                    "current_class_name": null
                }
            ],
            "deserialize": [
                {
                    "name": "deserialize",
                    "signature_name": "deserialize",
                    "arguments": [
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "serializedData",
                        "handle"
                    ],
                    "static": false,
                    "min_args": 2,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "param data",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IRenderTextureCreateInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IRenderTextureCreateInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IRenderTextureCreateInfo",
        "underlined_class_name": "cc_IRenderTextureCreateInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "name",
                "pretty_name": "name",
                "signature_name": "js_assets_IRenderTextureCreateInfo",
                "type": {
                    "name": "optional<std::string>",
                    "script_ns": "boost.optional<std::string>",
                    "whole_name": "boost::optional<std::string>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "width",
                "pretty_name": "width",
                "signature_name": "js_assets_IRenderTextureCreateInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "height",
                "pretty_name": "height",
                "signature_name": "js_assets_IRenderTextureCreateInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "passInfo",
                "pretty_name": "passInfo",
                "signature_name": "js_assets_IRenderTextureCreateInfo",
                "type": {
                    "name": "optional<cc::gfx::RenderPassInfo>",
                    "script_ns": "boost.optional<cc::gfx::RenderPassInfo>",
                    "whole_name": "boost::optional<cc::gfx::RenderPassInfo>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::RenderPassInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.RenderTexture",
        "parents": [
            "cc::TextureBase"
        ],
        "nested_classes": [],
        "class_name": "RenderTexture",
        "is_ref_class": false,
        "namespaced_class_name": "cc::RenderTexture",
        "underlined_class_name": "cc_RenderTexture",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "window",
                "names": [
                    "window"
                ],
                "type": {
                    "name": "RenderWindow*",
                    "script_ns": "jsb.RenderWindow",
                    "whole_name": "cc::scene::RenderWindow*",
                    "namespace_name": "cc::scene::",
                    "namespaced_class_name": "cc::scene::RenderWindow*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "constructor": {
                "name": "RenderTexture",
                "signature_name": "js_assets_RenderTexture_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "RenderTexture"
            },
            "initialize": {
                "name": "initialize",
                "signature_name": "js_assets_RenderTexture_initialize",
                "arguments": [
                    {
                        "name": "IRenderTextureCreateInfo",
                        "script_ns": "jsb.IRenderTextureCreateInfo",
                        "whole_name": "const cc::IRenderTextureCreateInfo&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IRenderTextureCreateInfo",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "info"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "RenderTexture"
            },
            "reset": {
                "name": "reset",
                "signature_name": "js_assets_RenderTexture_reset",
                "arguments": [
                    {
                        "name": "IRenderTextureCreateInfo",
                        "script_ns": "jsb.IRenderTextureCreateInfo",
                        "whole_name": "const cc::IRenderTextureCreateInfo&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IRenderTextureCreateInfo",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "info"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "RenderTexture"
            },
            "resize": {
                "name": "resize",
                "signature_name": "js_assets_RenderTexture_resize",
                "arguments": [
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "width",
                    "height"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Resize the render texture<br>\n-- zh \u4fee\u6539\u6e32\u67d3\u8d34\u56fe\u7684\u5c3a\u5bf8<br>\n-- param width The pixel width, the range is from 1 to 2048<br>\n-- param height The pixel height, the range is from 1 to 2048",
                "current_class_name": "RenderTexture"
            },
            "initWindow": {
                "name": "initWindow",
                "signature_name": "js_assets_RenderTexture_initWindow",
                "min_args": 0,
                "comment": "",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": "RenderTexture",
                "implementations": [
                    {
                        "name": "initWindow",
                        "signature_name": "initWindow",
                        "arguments": [
                            {
                                "name": "IRenderTextureCreateInfo",
                                "script_ns": "jsb.IRenderTextureCreateInfo",
                                "whole_name": "const cc::IRenderTextureCreateInfo&",
                                "namespace_name": "cc::",
                                "namespaced_class_name": "cc::IRenderTextureCreateInfo",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": true,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "info"
                        ],
                        "static": false,
                        "min_args": 1,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "initWindow",
                        "signature_name": "initWindow",
                        "arguments": [],
                        "argumentTips": [],
                        "static": false,
                        "min_args": 0,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    }
                ]
            },
            "readPixels": {
                "name": "readPixels",
                "signature_name": "js_assets_RenderTexture_readPixels",
                "arguments": [
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "x",
                    "y",
                    "width",
                    "height"
                ],
                "static": false,
                "min_args": 4,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<unsigned char>",
                    "script_ns": "std::vector<unsigned char>",
                    "whole_name": "std::vector<unsigned char>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<unsigned char>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Read pixel buffer from render texture<br>\n-- param x The location on x axis<br>\n-- param y The location on y axis<br>\n-- param width The pixel width<br>\n-- param height The pixel height<br>\n-- zh \u4ece render texture \u8bfb\u53d6\u50cf\u7d20\u6570\u636e<br>\n-- param x \u8d77\u59cb\u4f4d\u7f6eX\u8f74\u5750\u6807<br>\n-- param y \u8d77\u59cb\u4f4d\u7f6eY\u8f74\u5750\u6807<br>\n-- param width \u50cf\u7d20\u5bbd\u5ea6<br>\n-- param height \u50cf\u7d20\u9ad8\u5ea6",
                "current_class_name": "RenderTexture"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "destroy": [
                {
                    "name": "destroy",
                    "signature_name": "destroy",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "getGFXTexture": [
                {
                    "name": "getGFXTexture",
                    "signature_name": "getGFXTexture",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "Texture*",
                        "script_ns": "gfx.Texture",
                        "whole_name": "cc::gfx::Texture*",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Texture*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "en Gets the related [[Texture]] resource, it's also the color attachment for the render window<br>\n-- zh \u83b7\u53d6\u6e32\u67d3\u8d34\u56fe\u7684 GFX \u8d44\u6e90\uff0c\u540c\u65f6\u4e5f\u662f\u6e32\u67d3\u7a97\u53e3\u6240\u6307\u5411\u7684\u989c\u8272\u7f13\u51b2\u8d34\u56fe\u8d44\u6e90",
                    "current_class_name": null
                }
            ],
            "onLoaded": [
                {
                    "name": "onLoaded",
                    "signature_name": "onLoaded",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "initDefault": [
                {
                    "name": "initDefault",
                    "signature_name": "initDefault",
                    "arguments": [
                        {
                            "name": "optional<std::string>",
                            "script_ns": "boost.optional<std::string>",
                            "whole_name": "const boost::optional<std::string>&",
                            "namespace_name": "boost::",
                            "namespaced_class_name": "boost::optional<std::string>",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "uuid"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "validate": [
                {
                    "name": "validate",
                    "signature_name": "validate",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IGeometricInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "IGeometricInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IGeometricInfo",
        "underlined_class_name": "cc_IGeometricInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "positions",
                "pretty_name": "positions",
                "signature_name": "js_assets_IGeometricInfo",
                "type": {
                    "name": "TypedArrayTemp<float>",
                    "script_ns": "jsb.TypedArrayTemp<float>",
                    "whole_name": "cc::TypedArrayTemp<float>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::TypedArrayTemp<float>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "indices",
                "pretty_name": "indices",
                "signature_name": "js_assets_IGeometricInfo",
                "type": {
                    "name": "optional<boost::variant2::variant<cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>>>",
                    "script_ns": "boost.optional<boost.variant2::variant<cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>>>",
                    "whole_name": "boost::optional<boost::variant2::variant<cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<boost::variant2::variant<cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "doubleSided",
                "pretty_name": "doubleSided",
                "signature_name": "js_assets_IGeometricInfo",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "boundingBox",
                "pretty_name": "boundingBox",
                "signature_name": "js_assets_IGeometricInfo",
                "type": {
                    "name": "BoundingBox",
                    "script_ns": "jsb.BoundingBox",
                    "whole_name": "cc::BoundingBox",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::BoundingBox",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IFlatBuffer",
        "parents": [],
        "nested_classes": [],
        "class_name": "IFlatBuffer",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IFlatBuffer",
        "underlined_class_name": "cc_IFlatBuffer",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "stride",
                "pretty_name": "stride",
                "signature_name": "js_assets_IFlatBuffer",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "count",
                "pretty_name": "count",
                "signature_name": "js_assets_IFlatBuffer",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "buffer",
                "pretty_name": "buffer",
                "signature_name": "js_assets_IFlatBuffer",
                "type": {
                    "name": "TypedArrayTemp<unsigned char>",
                    "script_ns": "jsb.TypedArrayTemp<unsigned char>",
                    "whole_name": "cc::TypedArrayTemp<unsigned char>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::TypedArrayTemp<unsigned char>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.RenderingSubMesh",
        "parents": [],
        "nested_classes": [],
        "class_name": "RenderingSubMesh",
        "is_ref_class": false,
        "namespaced_class_name": "cc::RenderingSubMesh",
        "underlined_class_name": "cc_RenderingSubMesh",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "mesh",
                "names": [
                    "mesh"
                ],
                "type": {
                    "name": "Mesh*",
                    "script_ns": "jsb.Mesh",
                    "whole_name": "cc::Mesh*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Mesh*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "subMeshIdx",
                "names": [
                    "subMeshIdx"
                ],
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "const boost::optional<unsigned int>&",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "flatBuffers",
                "names": [
                    "flatBuffers",
                    "_flatBuffers"
                ],
                "type": {
                    "name": "vector<cc::IFlatBuffer>",
                    "script_ns": "std::vector<cc::IFlatBuffer>",
                    "whole_name": "const std::vector<cc::IFlatBuffer>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IFlatBuffer>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "jointMappedBuffers",
                "names": [
                    "jointMappedBuffers"
                ],
                "type": {
                    "name": "vector<cc::gfx::Buffer *>",
                    "script_ns": "std::vector<cc::gfx::Buffer *>",
                    "whole_name": "const std::vector<cc::gfx::Buffer *>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::gfx::Buffer *>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "iaInfo",
                "names": [
                    "iaInfo",
                    "_iaInfo"
                ],
                "type": {
                    "name": "InputAssemblerInfo",
                    "script_ns": "gfx.InputAssemblerInfo",
                    "whole_name": "const cc::gfx::InputAssemblerInfo&",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::InputAssemblerInfo",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "primitiveMode",
                "names": [
                    "primitiveMode"
                ],
                "type": {
                    "name": "PrimitiveMode",
                    "script_ns": "gfx.PrimitiveMode",
                    "whole_name": "cc::gfx::PrimitiveMode",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::PrimitiveMode",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "constructor": {
                "name": "RenderingSubMesh",
                "signature_name": "js_assets_RenderingSubMesh_constructor",
                "min_args": 3,
                "comment": "",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": "RenderingSubMesh",
                "implementations": [
                    {
                        "name": "RenderingSubMesh",
                        "signature_name": "RenderingSubMesh",
                        "arguments": [
                            {
                                "name": "vector<cc::gfx::Buffer *>",
                                "script_ns": "std::vector<cc::gfx::Buffer *>",
                                "whole_name": "const std::vector<cc::gfx::Buffer *>&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::vector<cc::gfx::Buffer *>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "vector<cc::gfx::Attribute>",
                                "script_ns": "std::vector<cc::gfx::Attribute>",
                                "whole_name": "const std::vector<cc::gfx::Attribute>&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::vector<cc::gfx::Attribute>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "PrimitiveMode",
                                "script_ns": "gfx.PrimitiveMode",
                                "whole_name": "cc::gfx::PrimitiveMode",
                                "namespace_name": "cc::gfx::",
                                "namespaced_class_name": "cc::gfx::PrimitiveMode",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": true,
                                "is_numeric": false,
                                "enum_declare_type": "int",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "Buffer*",
                                "script_ns": "gfx.Buffer",
                                "whole_name": "cc::gfx::Buffer*",
                                "namespace_name": "cc::gfx::",
                                "namespaced_class_name": "cc::gfx::Buffer*",
                                "is_const": false,
                                "is_pointer": true,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "vertexBuffers",
                            "attributes",
                            "primitiveMode",
                            "indexBuffer"
                        ],
                        "static": false,
                        "min_args": 4,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "RenderingSubMesh",
                        "signature_name": "RenderingSubMesh",
                        "arguments": [
                            {
                                "name": "vector<cc::gfx::Buffer *>",
                                "script_ns": "std::vector<cc::gfx::Buffer *>",
                                "whole_name": "const std::vector<cc::gfx::Buffer *>&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::vector<cc::gfx::Buffer *>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "vector<cc::gfx::Attribute>",
                                "script_ns": "std::vector<cc::gfx::Attribute>",
                                "whole_name": "const std::vector<cc::gfx::Attribute>&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::vector<cc::gfx::Attribute>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "PrimitiveMode",
                                "script_ns": "gfx.PrimitiveMode",
                                "whole_name": "cc::gfx::PrimitiveMode",
                                "namespace_name": "cc::gfx::",
                                "namespaced_class_name": "cc::gfx::PrimitiveMode",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": true,
                                "is_numeric": false,
                                "enum_declare_type": "int",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "vertexBuffers",
                            "attributes",
                            "primitiveMode"
                        ],
                        "static": false,
                        "min_args": 3,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "RenderingSubMesh",
                        "signature_name": "RenderingSubMesh",
                        "arguments": [
                            {
                                "name": "vector<cc::gfx::Buffer *>",
                                "script_ns": "std::vector<cc::gfx::Buffer *>",
                                "whole_name": "const std::vector<cc::gfx::Buffer *>&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::vector<cc::gfx::Buffer *>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "vector<cc::gfx::Attribute>",
                                "script_ns": "std::vector<cc::gfx::Attribute>",
                                "whole_name": "const std::vector<cc::gfx::Attribute>&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::vector<cc::gfx::Attribute>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "PrimitiveMode",
                                "script_ns": "gfx.PrimitiveMode",
                                "whole_name": "cc::gfx::PrimitiveMode",
                                "namespace_name": "cc::gfx::",
                                "namespaced_class_name": "cc::gfx::PrimitiveMode",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": true,
                                "is_numeric": false,
                                "enum_declare_type": "int",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "Buffer*",
                                "script_ns": "gfx.Buffer",
                                "whole_name": "cc::gfx::Buffer*",
                                "namespace_name": "cc::gfx::",
                                "namespaced_class_name": "cc::gfx::Buffer*",
                                "is_const": false,
                                "is_pointer": true,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "Buffer*",
                                "script_ns": "gfx.Buffer",
                                "whole_name": "cc::gfx::Buffer*",
                                "namespace_name": "cc::gfx::",
                                "namespaced_class_name": "cc::gfx::Buffer*",
                                "is_const": false,
                                "is_pointer": true,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "vertexBuffers",
                            "attributes",
                            "primitiveMode",
                            "indexBuffer",
                            "indirectBuffer"
                        ],
                        "static": false,
                        "min_args": 5,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "RenderingSubMesh",
                        "signature_name": "RenderingSubMesh",
                        "arguments": [
                            {
                                "name": "vector<cc::gfx::Buffer *>",
                                "script_ns": "std::vector<cc::gfx::Buffer *>",
                                "whole_name": "const std::vector<cc::gfx::Buffer *>&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::vector<cc::gfx::Buffer *>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "vector<cc::gfx::Attribute>",
                                "script_ns": "std::vector<cc::gfx::Attribute>",
                                "whole_name": "const std::vector<cc::gfx::Attribute>&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::vector<cc::gfx::Attribute>",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "PrimitiveMode",
                                "script_ns": "gfx.PrimitiveMode",
                                "whole_name": "cc::gfx::PrimitiveMode",
                                "namespace_name": "cc::gfx::",
                                "namespaced_class_name": "cc::gfx::PrimitiveMode",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": true,
                                "is_numeric": false,
                                "enum_declare_type": "int",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "Buffer*",
                                "script_ns": "gfx.Buffer",
                                "whole_name": "cc::gfx::Buffer*",
                                "namespace_name": "cc::gfx::",
                                "namespaced_class_name": "cc::gfx::Buffer*",
                                "is_const": false,
                                "is_pointer": true,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "Buffer*",
                                "script_ns": "gfx.Buffer",
                                "whole_name": "cc::gfx::Buffer*",
                                "namespace_name": "cc::gfx::",
                                "namespaced_class_name": "cc::gfx::Buffer*",
                                "is_const": false,
                                "is_pointer": true,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "bool",
                                "script_ns": "bool",
                                "whole_name": "bool",
                                "namespace_name": "",
                                "namespaced_class_name": "bool",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "vertexBuffers",
                            "attributes",
                            "primitiveMode",
                            "indexBuffer",
                            "indirectBuffer",
                            "isOwnerOfIndexBuffer"
                        ],
                        "static": false,
                        "min_args": 6,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    }
                ]
            },
            "getAttributes": {
                "name": "getAttributes",
                "signature_name": "js_assets_RenderingSubMesh_getAttributes",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<cc::gfx::Attribute>",
                    "script_ns": "std::vector<cc::gfx::Attribute>",
                    "whole_name": "const std::vector<cc::gfx::Attribute>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::gfx::Attribute>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en All vertex attributes used by the sub mesh<br>\n-- zh \u6240\u6709\u9876\u70b9\u5c5e\u6027\u3002",
                "current_class_name": "RenderingSubMesh"
            },
            "getVertexBuffers": {
                "name": "getVertexBuffers",
                "signature_name": "js_assets_RenderingSubMesh_getVertexBuffers",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<cc::gfx::Buffer *>",
                    "script_ns": "std::vector<cc::gfx::Buffer *>",
                    "whole_name": "const std::vector<cc::gfx::Buffer *>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::gfx::Buffer *>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en All vertex buffers used by the sub mesh<br>\n-- zh \u4f7f\u7528\u7684\u6240\u6709\u9876\u70b9\u7f13\u51b2\u533a\u3002",
                "current_class_name": "RenderingSubMesh"
            },
            "getIndexBuffer": {
                "name": "getIndexBuffer",
                "signature_name": "js_assets_RenderingSubMesh_getIndexBuffer",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "Buffer*",
                    "script_ns": "gfx.Buffer",
                    "whole_name": "cc::gfx::Buffer*",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::Buffer*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Index buffer used by the sub mesh<br>\n-- zh \u4f7f\u7528\u7684\u7d22\u5f15\u7f13\u51b2\u533a\uff0c\u82e5\u672a\u4f7f\u7528\u5219\u65e0\u9700\u6307\u5b9a\u3002",
                "current_class_name": "RenderingSubMesh"
            },
            "indirectBuffer": {
                "name": "indirectBuffer",
                "signature_name": "js_assets_RenderingSubMesh_indirectBuffer",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "Buffer*",
                    "script_ns": "gfx.Buffer",
                    "whole_name": "cc::gfx::Buffer*",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::Buffer*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Indirect buffer used by the sub mesh<br>\n-- zh \u95f4\u63a5\u7ed8\u5236\u7f13\u51b2\u533a\u3002",
                "current_class_name": "RenderingSubMesh"
            },
            "getGeometricInfo": {
                "name": "getGeometricInfo",
                "signature_name": "js_assets_RenderingSubMesh_getGeometricInfo",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "IGeometricInfo",
                    "script_ns": "jsb.IGeometricInfo",
                    "whole_name": "const cc::IGeometricInfo&",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IGeometricInfo",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en The geometric info of the sub mesh, used for raycast.<br>\n-- zh \uff08\u7528\u4e8e\u5c04\u7ebf\u68c0\u6d4b\u7684\uff09\u51e0\u4f55\u4fe1\u606f\u3002",
                "current_class_name": "RenderingSubMesh"
            },
            "invalidateGeometricInfo": {
                "name": "invalidateGeometricInfo",
                "signature_name": "js_assets_RenderingSubMesh_invalidateGeometricInfo",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Invalidate the geometric info of the sub mesh after geometry changed.<br>\n-- zh \u7f51\u683c\u66f4\u65b0\u540e\uff0c\u8bbe\u7f6e\uff08\u7528\u4e8e\u5c04\u7ebf\u68c0\u6d4b\u7684\uff09\u51e0\u4f55\u4fe1\u606f\u4e3a\u65e0\u6548\uff0c\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u3002",
                "current_class_name": "RenderingSubMesh"
            },
            "genFlatBuffers": {
                "name": "genFlatBuffers",
                "signature_name": "js_assets_RenderingSubMesh_genFlatBuffers",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "RenderingSubMesh"
            },
            "setDrawInfo": {
                "name": "setDrawInfo",
                "signature_name": "js_assets_RenderingSubMesh_setDrawInfo",
                "arguments": [
                    {
                        "name": "DrawInfo",
                        "script_ns": "gfx.DrawInfo",
                        "whole_name": "const cc::gfx::DrawInfo&",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::DrawInfo",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "info"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "RenderingSubMesh"
            },
            "getDrawInfo": {
                "name": "getDrawInfo",
                "signature_name": "js_assets_RenderingSubMesh_getDrawInfo",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "optional<cc::gfx::DrawInfo>",
                    "script_ns": "boost.optional<cc::gfx::DrawInfo>",
                    "whole_name": "boost::optional<cc::gfx::DrawInfo>&",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::DrawInfo>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "RenderingSubMesh"
            },
            "destroy": {
                "name": "destroy",
                "signature_name": "js_assets_RenderingSubMesh_destroy",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "RenderingSubMesh"
            },
            "enableVertexIdChannel": {
                "name": "enableVertexIdChannel",
                "signature_name": "js_assets_RenderingSubMesh_enableVertexIdChannel",
                "arguments": [
                    {
                        "name": "Device*",
                        "script_ns": "gfx.Device",
                        "whole_name": "cc::gfx::Device*",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Device*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "device"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Adds a vertex attribute input called 'a_vertexId' into this sub-mesh.<br>\n-- This is useful if you want to simulate `gl_VertexId` in WebGL context prior to 2.0.<br>\n-- Once you call this function, the vertex attribute is permanently added.<br>\n-- Subsequent calls to this function take no effect.<br>\n-- param device Device used to create related rendering resources.",
                "current_class_name": "RenderingSubMesh"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.SceneAsset",
        "parents": [
            "cc::Asset"
        ],
        "nested_classes": [],
        "class_name": "SceneAsset",
        "is_ref_class": false,
        "namespaced_class_name": "cc::SceneAsset",
        "underlined_class_name": "cc_SceneAsset",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "constructor": {
                "name": "SceneAsset",
                "signature_name": "js_assets_SceneAsset_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "SceneAsset"
            },
            "getScene": {
                "name": "getScene",
                "signature_name": "js_assets_SceneAsset_getScene",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "Scene*",
                    "script_ns": "jsb.Scene",
                    "whole_name": "cc::Scene*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Scene*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "SceneAsset"
            },
            "setScene": {
                "name": "setScene",
                "signature_name": "js_assets_SceneAsset_setScene",
                "arguments": [
                    {
                        "name": "Scene*",
                        "script_ns": "jsb.Scene",
                        "whole_name": "cc::Scene*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Scene*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "scene"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "SceneAsset"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "initDefault": [
                {
                    "name": "initDefault",
                    "signature_name": "initDefault",
                    "arguments": [
                        {
                            "name": "optional<std::string>",
                            "script_ns": "boost.optional<std::string>",
                            "whole_name": "const boost::optional<std::string>&",
                            "namespace_name": "boost::",
                            "namespaced_class_name": "boost::optional<std::string>",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "uuid"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "validate": [
                {
                    "name": "validate",
                    "signature_name": "validate",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.TextAsset",
        "parents": [
            "cc::Asset"
        ],
        "nested_classes": [],
        "class_name": "TextAsset",
        "is_ref_class": false,
        "namespaced_class_name": "cc::TextAsset",
        "underlined_class_name": "cc_TextAsset",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [
            {
                "name": "text",
                "pretty_name": "text",
                "signature_name": "js_assets_TextAsset",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "constructor": {
                "name": "TextAsset",
                "signature_name": "js_assets_TextAsset_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "TextAsset"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "toString": [
                {
                    "name": "toString",
                    "signature_name": "toString",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "std::string",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.SimpleTexture",
        "parents": [
            "cc::TextureBase"
        ],
        "nested_classes": [],
        "class_name": "SimpleTexture",
        "is_ref_class": false,
        "namespaced_class_name": "cc::SimpleTexture",
        "underlined_class_name": "cc_SimpleTexture",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "mipmapLevel",
                "names": [
                    "mipmapLevel"
                ],
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "updateImage": {
                "name": "updateImage",
                "signature_name": "js_assets_SimpleTexture_updateImage",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Update the level 0 mipmap image.<br>\n-- zh \u66f4\u65b0 0 \u7ea7 Mipmap\u3002",
                "current_class_name": "SimpleTexture"
            },
            "updateMipmaps": {
                "name": "updateMipmaps",
                "signature_name": "js_assets_SimpleTexture_updateMipmaps",
                "arguments": [
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "firstLevel",
                    "count"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Update the given level mipmap image.<br>\n-- zh \u66f4\u65b0\u6307\u5b9a\u5c42\u7ea7\u8303\u56f4\u5185\u7684 Mipmap\u3002\u5f53 Mipmap \u6570\u636e\u53d1\u751f\u4e86\u6539\u53d8\u65f6\u5e94\u8c03\u7528\u6b64\u65b9\u6cd5\u63d0\u4ea4\u66f4\u6539\u3002<br>\n-- \u82e5\u6307\u5b9a\u7684\u5c42\u7ea7\u8303\u56f4\u8d85\u51fa\u4e86\u5b9e\u9645\u5df2\u6709\u7684\u5c42\u7ea7\u8303\u56f4\uff0c\u53ea\u6709\u8986\u76d6\u7684\u90a3\u4e9b\u5c42\u7ea7\u8303\u56f4\u4f1a\u88ab\u66f4\u65b0\u3002<br>\n-- param firstLevel First level to be updated<br>\n-- param count Mipmap level count to be updated",
                "current_class_name": "SimpleTexture"
            },
            "uploadDataWithArrayBuffer": {
                "name": "uploadDataWithArrayBuffer",
                "signature_name": "uploadDataWithArrayBuffer",
                "arguments": [
                    {
                        "name": "ArrayBuffer",
                        "script_ns": "jsb.ArrayBuffer",
                        "whole_name": "const cc::ArrayBuffer&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ArrayBuffer",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "source",
                    "level",
                    "arrayIndex"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Upload data to the given mipmap level.<br>\n-- The size of the image will affect how the mipmap is updated.<br>\n-- - When the image is an ArrayBuffer, the size of the image must match the mipmap size.<br>\n-- - If the image size matches the mipmap size, the mipmap data will be updated entirely.<br>\n-- - If the image size is smaller than the mipmap size, the mipmap will be updated from top left corner.<br>\n-- - If the image size is larger, an error will be raised<br>\n-- zh \u4e0a\u4f20\u56fe\u50cf\u6570\u636e\u5230\u6307\u5b9a\u5c42\u7ea7\u7684 Mipmap \u4e2d\u3002<br>\n-- \u56fe\u50cf\u7684\u5c3a\u5bf8\u5f71\u54cd Mipmap \u7684\u66f4\u65b0\u8303\u56f4\uff1a<br>\n-- - \u5f53\u56fe\u50cf\u662f `ArrayBuffer` \u65f6\uff0c\u56fe\u50cf\u7684\u5c3a\u5bf8\u5fc5\u987b\u548c Mipmap \u7684\u5c3a\u5bf8\u4e00\u81f4\uff1b\u5426\u5219\uff0c<br>\n-- - \u82e5\u56fe\u50cf\u7684\u5c3a\u5bf8\u4e0e Mipmap \u7684\u5c3a\u5bf8\u76f8\u540c\uff0c\u4e0a\u4f20\u540e\u6574\u4e2a Mipmap \u7684\u6570\u636e\u5c06\u4e0e\u56fe\u50cf\u6570\u636e\u4e00\u81f4\uff1b<br>\n-- - \u82e5\u56fe\u50cf\u7684\u5c3a\u5bf8\u5c0f\u4e8e\u6307\u5b9a\u5c42\u7ea7 Mipmap \u7684\u5c3a\u5bf8\uff08\u4e0d\u7ba1\u662f\u957f\u6216\u5bbd\uff09\uff0c\u5219\u4ece\u8d34\u56fe\u5de6\u4e0a\u89d2\u5f00\u59cb\uff0c\u56fe\u50cf\u5c3a\u5bf8\u8303\u56f4\u5185\u7684 Mipmap \u4f1a\u88ab\u66f4\u65b0\uff1b<br>\n-- - \u82e5\u56fe\u50cf\u7684\u5c3a\u5bf8\u8d85\u51fa\u4e86\u6307\u5b9a\u5c42\u7ea7 Mipmap \u7684\u5c3a\u5bf8\uff08\u4e0d\u7ba1\u662f\u957f\u6216\u5bbd\uff09\uff0c\u90fd\u5c06\u5f15\u8d77\u9519\u8bef\u3002<br>\n-- param source The source image or image data<br>\n-- param level Mipmap level to upload the image to<br>\n-- param arrayIndex The array index",
                "current_class_name": null
            },
            "uploadData": {
                "name": "uploadData",
                "signature_name": "js_assets_SimpleTexture_uploadData",
                "arguments": [
                    {
                        "name": "unsigned char*",
                        "script_ns": "unsigned char",
                        "whole_name": "const unsigned char*",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned char*",
                        "is_const": true,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "source",
                    "level",
                    "arrayIndex"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "SimpleTexture"
            },
            "assignImage": {
                "name": "assignImage",
                "signature_name": "js_assets_SimpleTexture_assignImage",
                "arguments": [
                    {
                        "name": "ImageAsset*",
                        "script_ns": "jsb.ImageAsset",
                        "whole_name": "cc::ImageAsset*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ImageAsset*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "image",
                    "level",
                    "arrayIndex"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "SimpleTexture"
            },
            "checkTextureLoaded": {
                "name": "checkTextureLoaded",
                "signature_name": "js_assets_SimpleTexture_checkTextureLoaded",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "SimpleTexture"
            },
            "setMipRange": {
                "name": "setMipRange",
                "signature_name": "js_assets_SimpleTexture_setMipRange",
                "arguments": [
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "baseLevel",
                    "maxLevel"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "Set mipmap level range for this texture.<br>\n-- param baseLevel The base mipmap level.<br>\n-- param maxLevel The maximum mipmap level.",
                "current_class_name": "SimpleTexture"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "getGFXTexture": [
                {
                    "name": "getGFXTexture",
                    "signature_name": "getGFXTexture",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "Texture*",
                        "script_ns": "gfx.Texture",
                        "whole_name": "cc::gfx::Texture*",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Texture*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "en The GFX Texture resource<br>\n-- zh \u83b7\u53d6\u6b64\u8d34\u56fe\u5e95\u5c42\u7684 GFX \u8d34\u56fe\u5bf9\u8c61\u3002",
                    "current_class_name": null
                }
            ],
            "destroy": [
                {
                    "name": "destroy",
                    "signature_name": "destroy",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ITexture2DSerializeData",
        "parents": [],
        "nested_classes": [],
        "class_name": "ITexture2DSerializeData",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ITexture2DSerializeData",
        "underlined_class_name": "cc_ITexture2DSerializeData",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "base",
                "pretty_name": "base",
                "signature_name": "js_assets_ITexture2DSerializeData",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "mipmaps",
                "pretty_name": "mipmaps",
                "signature_name": "js_assets_ITexture2DSerializeData",
                "type": {
                    "name": "vector<std::string>",
                    "script_ns": "std::vector<std::string>",
                    "whole_name": "std::vector<std::string>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ITexture2DCreateInfo",
        "parents": [],
        "nested_classes": [],
        "class_name": "ITexture2DCreateInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ITexture2DCreateInfo",
        "underlined_class_name": "cc_ITexture2DCreateInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "width",
                "pretty_name": "width",
                "signature_name": "js_assets_ITexture2DCreateInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "height",
                "pretty_name": "height",
                "signature_name": "js_assets_ITexture2DCreateInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "format",
                "pretty_name": "format",
                "signature_name": "js_assets_ITexture2DCreateInfo",
                "type": {
                    "name": "optional<cc::PixelFormat>",
                    "script_ns": "boost.optional<cc::PixelFormat>",
                    "whole_name": "boost::optional<cc::PixelFormat>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::PixelFormat>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "mipmapLevel",
                "pretty_name": "mipmapLevel",
                "signature_name": "js_assets_ITexture2DCreateInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "baseLevel",
                "pretty_name": "baseLevel",
                "signature_name": "js_assets_ITexture2DCreateInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "maxLevel",
                "pretty_name": "maxLevel",
                "signature_name": "js_assets_ITexture2DCreateInfo",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Texture2D",
        "parents": [
            "cc::SimpleTexture"
        ],
        "nested_classes": [],
        "class_name": "Texture2D",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Texture2D",
        "underlined_class_name": "cc_Texture2D",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "constructor": {
                "name": "Texture2D",
                "signature_name": "js_assets_Texture2D_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Texture2D"
            },
            "getMipmaps": {
                "name": "getMipmaps",
                "signature_name": "js_assets_Texture2D_getMipmaps",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<cc::IntrusivePtr<cc::ImageAsset>>",
                    "script_ns": "std::vector<cc::IntrusivePtr<cc::ImageAsset>>",
                    "whole_name": "const std::vector<cc::IntrusivePtr<cc::ImageAsset>>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IntrusivePtr<cc::ImageAsset>>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en All levels of mipmap images, be noted, automatically generated mipmaps are not included.<br>\n-- When setup mipmap, the size of the texture and pixel format could be modified.<br>\n-- zh \u6240\u6709\u5c42\u7ea7 Mipmap\uff0c\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u5305\u542b\u81ea\u52a8\u751f\u6210\u7684 Mipmap\u3002<br>\n-- \u5f53\u8bbe\u7f6e Mipmap \u65f6\uff0c\u8d34\u56fe\u7684\u5c3a\u5bf8\u4ee5\u53ca\u50cf\u7d20\u683c\u5f0f\u53ef\u80fd\u4f1a\u6539\u53d8\u3002",
                "current_class_name": "Texture2D"
            },
            "getMipmapsUuids": {
                "name": "getMipmapsUuids",
                "signature_name": "js_assets_Texture2D_getMipmapsUuids",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<std::string>",
                    "script_ns": "std::vector<std::string>",
                    "whole_name": "const std::vector<std::string>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::string>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Texture2D"
            },
            "syncMipmapsForJS": {
                "name": "syncMipmapsForJS",
                "signature_name": "js_assets_Texture2D_syncMipmapsForJS",
                "arguments": [
                    {
                        "name": "vector<cc::IntrusivePtr<cc::ImageAsset>>",
                        "script_ns": "std::vector<cc::IntrusivePtr<cc::ImageAsset>>",
                        "whole_name": "const std::vector<cc::IntrusivePtr<cc::ImageAsset>>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::IntrusivePtr<cc::ImageAsset>>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "value"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Texture2D"
            },
            "setMipmaps": {
                "name": "setMipmaps",
                "signature_name": "js_assets_Texture2D_setMipmaps",
                "arguments": [
                    {
                        "name": "vector<cc::IntrusivePtr<cc::ImageAsset>>",
                        "script_ns": "std::vector<cc::IntrusivePtr<cc::ImageAsset>>",
                        "whole_name": "const std::vector<cc::IntrusivePtr<cc::ImageAsset>>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::IntrusivePtr<cc::ImageAsset>>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "value"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Texture2D"
            },
            "getImage": {
                "name": "getImage",
                "signature_name": "js_assets_Texture2D_getImage",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "ImageAsset*",
                    "script_ns": "jsb.ImageAsset",
                    "whole_name": "cc::ImageAsset*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::ImageAsset*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Level 0 mipmap image.<br>\n-- Be noted, `this.image = img` equals `this.mipmaps = [img]`,<br>\n-- sets image will clear all previous mipmaps.<br>\n-- zh 0 \u7ea7 Mipmap\u3002<br>\n-- \u6ce8\u610f\uff0c`this.image = img` \u7b49\u4ef7\u4e8e `this.mipmaps = [img]`\uff0c<br>\n-- \u4e5f\u5c31\u662f\u8bf4\uff0c\u901a\u8fc7 `this.image` \u8bbe\u7f6e 0 \u7ea7 Mipmap \u65f6\u5c06\u9690\u5f0f\u5730\u6e05\u9664\u4e4b\u524d\u7684\u6240\u6709 Mipmap\u3002",
                "current_class_name": "Texture2D"
            },
            "setImage": {
                "name": "setImage",
                "signature_name": "js_assets_Texture2D_setImage",
                "arguments": [
                    {
                        "name": "ImageAsset*",
                        "script_ns": "jsb.ImageAsset",
                        "whole_name": "cc::ImageAsset*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ImageAsset*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "value"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Texture2D"
            },
            "initialize": {
                "name": "initialize",
                "signature_name": "js_assets_Texture2D_initialize",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Texture2D"
            },
            "reset": {
                "name": "reset",
                "signature_name": "js_assets_Texture2D_reset",
                "arguments": [
                    {
                        "name": "ITexture2DCreateInfo",
                        "script_ns": "jsb.ITexture2DCreateInfo",
                        "whole_name": "const cc::ITexture2DCreateInfo&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ITexture2DCreateInfo",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "info"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Reset the current texture with given size, pixel format and mipmap images.<br>\n-- After reset, the gfx resource will become invalid, you must use [[uploadData]] explicitly to upload the new mipmaps to GPU resources.<br>\n-- zh \u5c06\u5f53\u524d\u8d34\u56fe\u91cd\u7f6e\u4e3a\u6307\u5b9a\u5c3a\u5bf8\u3001\u50cf\u7d20\u683c\u5f0f\u4ee5\u53ca\u6307\u5b9a mipmap \u5c42\u7ea7\u3002\u91cd\u7f6e\u540e\uff0c\u8d34\u56fe\u7684\u50cf\u7d20\u6570\u636e\u5c06\u53d8\u4e3a\u672a\u5b9a\u4e49\u3002<br>\n-- mipmap \u56fe\u50cf\u7684\u6570\u636e\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u5230\u8d34\u56fe\u4e2d\uff0c\u4f60\u5fc5\u987b\u663e\u5f0f\u8c03\u7528 [[uploadData]] \u6765\u4e0a\u4f20\u8d34\u56fe\u6570\u636e\u3002<br>\n-- param info The create information",
                "current_class_name": "Texture2D"
            },
            "create": {
                "name": "create",
                "signature_name": "js_assets_Texture2D_create",
                "arguments": [
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "PixelFormat",
                        "script_ns": "jsb.PixelFormat",
                        "whole_name": "cc::PixelFormat",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::PixelFormat",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "width",
                    "height",
                    "format",
                    "mipmapLevel",
                    "baseLevel",
                    "maxLevel"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Reset the current texture with given size, pixel format and mipmap images.<br>\n-- After reset, the gfx resource will become invalid, you must use [[uploadData]] explicitly to upload the new mipmaps to GPU resources.<br>\n-- zh \u5c06\u5f53\u524d\u8d34\u56fe\u91cd\u7f6e\u4e3a\u6307\u5b9a\u5c3a\u5bf8\u3001\u50cf\u7d20\u683c\u5f0f\u4ee5\u53ca\u6307\u5b9a mipmap \u5c42\u7ea7\u3002\u91cd\u7f6e\u540e\uff0c\u8d34\u56fe\u7684\u50cf\u7d20\u6570\u636e\u5c06\u53d8\u4e3a\u672a\u5b9a\u4e49\u3002<br>\n-- mipmap \u56fe\u50cf\u7684\u6570\u636e\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u5230\u8d34\u56fe\u4e2d\uff0c\u4f60\u5fc5\u987b\u663e\u5f0f\u8c03\u7528 [[uploadData]] \u6765\u4e0a\u4f20\u8d34\u56fe\u6570\u636e\u3002<br>\n-- param width Pixel width<br>\n-- param height Pixel height<br>\n-- param format Pixel format<br>\n-- param mipmapLevel Mipmap level count<br>\n-- param baseLevel Mipmap base level<br>\n-- param maxLevel Mipmap maximum level<br>\n-- deprecated since v1.0 please use [[reset]] instead",
                "current_class_name": "Texture2D"
            },
            "description": {
                "name": "description",
                "signature_name": "js_assets_Texture2D_description",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Gets the description of the 2d texture<br>\n-- zh \u8fd4\u56de\u6b64\u8d34\u56fe\u7684\u63cf\u8ff0\u3002<br>\n-- returns The description",
                "current_class_name": "Texture2D"
            },
            "releaseTexture": {
                "name": "releaseTexture",
                "signature_name": "js_assets_Texture2D_releaseTexture",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Release used GPU resources.<br>\n-- zh \u91ca\u653e\u5360\u7528\u7684 GPU \u8d44\u6e90\u3002<br>\n-- deprecated please use [[destroy]] instead",
                "current_class_name": "Texture2D"
            },
            "getGfxTextureCreateInfo": {
                "name": "getGfxTextureCreateInfo",
                "signature_name": "js_assets_Texture2D_getGfxTextureCreateInfo",
                "arguments": [
                    {
                        "name": "TextureUsageBit",
                        "script_ns": "gfx.TextureUsageBit",
                        "whole_name": "cc::gfx::TextureUsageBit",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::TextureUsageBit",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Format",
                        "script_ns": "gfx.Format",
                        "whole_name": "cc::gfx::Format",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Format",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "TextureFlagBit",
                        "script_ns": "gfx.TextureFlagBit",
                        "whole_name": "cc::gfx::TextureFlagBit",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::TextureFlagBit",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "usage",
                    "format",
                    "levelCount",
                    "flags"
                ],
                "static": false,
                "min_args": 4,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "TextureInfo",
                    "script_ns": "gfx.TextureInfo",
                    "whole_name": "cc::gfx::TextureInfo",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::TextureInfo",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Texture2D"
            },
            "getGfxTextureViewCreateInfo": {
                "name": "getGfxTextureViewCreateInfo",
                "signature_name": "js_assets_Texture2D_getGfxTextureViewCreateInfo",
                "arguments": [
                    {
                        "name": "Texture*",
                        "script_ns": "gfx.Texture",
                        "whole_name": "cc::gfx::Texture*",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Texture*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Format",
                        "script_ns": "gfx.Format",
                        "whole_name": "cc::gfx::Format",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Format",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "texture",
                    "format",
                    "baseLevel",
                    "levelCount"
                ],
                "static": false,
                "min_args": 4,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "TextureViewInfo",
                    "script_ns": "gfx.TextureViewInfo",
                    "whole_name": "cc::gfx::TextureViewInfo",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::TextureViewInfo",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Texture2D"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "onLoaded": [
                {
                    "name": "onLoaded",
                    "signature_name": "onLoaded",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "toString": [
                {
                    "name": "toString",
                    "signature_name": "toString",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "std::string",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "updateMipmaps": [
                {
                    "name": "updateMipmaps",
                    "signature_name": "updateMipmaps",
                    "arguments": [
                        {
                            "name": "unsigned int",
                            "script_ns": "unsigned int",
                            "whole_name": "unsigned int",
                            "namespace_name": "",
                            "namespaced_class_name": "unsigned int",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": true,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        {
                            "name": "unsigned int",
                            "script_ns": "unsigned int",
                            "whole_name": "unsigned int",
                            "namespace_name": "",
                            "namespaced_class_name": "unsigned int",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": true,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "firstLevel",
                        "count"
                    ],
                    "static": false,
                    "min_args": 2,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "destroy": [
                {
                    "name": "destroy",
                    "signature_name": "destroy",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "en Destroy the current 2d texture, clear up all mipmap levels and the related GPU resources.<br>\n-- zh \u9500\u6bc1\u6b64\u8d34\u56fe\uff0c\u6e05\u7a7a\u6240\u6709 Mipmap \u5e76\u91ca\u653e\u5360\u7528\u7684 GPU \u8d44\u6e90\u3002",
                    "current_class_name": null
                }
            ],
            "serialize": [
                {
                    "name": "serialize",
                    "signature_name": "serialize",
                    "arguments": [
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "ctxForExporting"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "any",
                        "script_ns": "nowhere",
                        "whole_name": "ccstd::any",
                        "namespace_name": "ccstd::",
                        "namespaced_class_name": "ccstd::any",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "return",
                    "current_class_name": null
                }
            ],
            "deserialize": [
                {
                    "name": "deserialize",
                    "signature_name": "deserialize",
                    "arguments": [
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "serializedData",
                        "handle"
                    ],
                    "static": false,
                    "min_args": 2,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "param data",
                    "current_class_name": null
                }
            ],
            "initDefault": [
                {
                    "name": "initDefault",
                    "signature_name": "initDefault",
                    "arguments": [
                        {
                            "name": "optional<std::string>",
                            "script_ns": "boost.optional<std::string>",
                            "whole_name": "const boost::optional<std::string>&",
                            "namespace_name": "boost::",
                            "namespaced_class_name": "boost::optional<std::string>",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "uuid"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "validate": [
                {
                    "name": "validate",
                    "signature_name": "validate",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ITextureCubeMipmap",
        "parents": [],
        "nested_classes": [],
        "class_name": "ITextureCubeMipmap",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ITextureCubeMipmap",
        "underlined_class_name": "cc_ITextureCubeMipmap",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "front",
                "pretty_name": "front",
                "signature_name": "js_assets_ITextureCubeMipmap",
                "type": {
                    "name": "IntrusivePtr<cc::ImageAsset>",
                    "script_ns": "jsb.IntrusivePtr<jsb.ImageAsset>",
                    "whole_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "back",
                "pretty_name": "back",
                "signature_name": "js_assets_ITextureCubeMipmap",
                "type": {
                    "name": "IntrusivePtr<cc::ImageAsset>",
                    "script_ns": "jsb.IntrusivePtr<jsb.ImageAsset>",
                    "whole_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "left",
                "pretty_name": "left",
                "signature_name": "js_assets_ITextureCubeMipmap",
                "type": {
                    "name": "IntrusivePtr<cc::ImageAsset>",
                    "script_ns": "jsb.IntrusivePtr<jsb.ImageAsset>",
                    "whole_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "right",
                "pretty_name": "right",
                "signature_name": "js_assets_ITextureCubeMipmap",
                "type": {
                    "name": "IntrusivePtr<cc::ImageAsset>",
                    "script_ns": "jsb.IntrusivePtr<jsb.ImageAsset>",
                    "whole_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "top",
                "pretty_name": "top",
                "signature_name": "js_assets_ITextureCubeMipmap",
                "type": {
                    "name": "IntrusivePtr<cc::ImageAsset>",
                    "script_ns": "jsb.IntrusivePtr<jsb.ImageAsset>",
                    "whole_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "bottom",
                "pretty_name": "bottom",
                "signature_name": "js_assets_ITextureCubeMipmap",
                "type": {
                    "name": "IntrusivePtr<cc::ImageAsset>",
                    "script_ns": "jsb.IntrusivePtr<jsb.ImageAsset>",
                    "whole_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IntrusivePtr<cc::ImageAsset>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ITextureCubeSerializeMipmapData",
        "parents": [],
        "nested_classes": [],
        "class_name": "ITextureCubeSerializeMipmapData",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ITextureCubeSerializeMipmapData",
        "underlined_class_name": "cc_ITextureCubeSerializeMipmapData",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "front",
                "pretty_name": "front",
                "signature_name": "js_assets_ITextureCubeSerializeMipmapData",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "back",
                "pretty_name": "back",
                "signature_name": "js_assets_ITextureCubeSerializeMipmapData",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "left",
                "pretty_name": "left",
                "signature_name": "js_assets_ITextureCubeSerializeMipmapData",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "right",
                "pretty_name": "right",
                "signature_name": "js_assets_ITextureCubeSerializeMipmapData",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "top",
                "pretty_name": "top",
                "signature_name": "js_assets_ITextureCubeSerializeMipmapData",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "bottom",
                "pretty_name": "bottom",
                "signature_name": "js_assets_ITextureCubeSerializeMipmapData",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ITextureCubeSerializeData",
        "parents": [],
        "nested_classes": [],
        "class_name": "ITextureCubeSerializeData",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ITextureCubeSerializeData",
        "underlined_class_name": "cc_ITextureCubeSerializeData",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "base",
                "pretty_name": "base",
                "signature_name": "js_assets_ITextureCubeSerializeData",
                "type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "rgbe",
                "pretty_name": "rgbe",
                "signature_name": "js_assets_ITextureCubeSerializeData",
                "type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "mipmaps",
                "pretty_name": "mipmaps",
                "signature_name": "js_assets_ITextureCubeSerializeData",
                "type": {
                    "name": "vector<cc::ITextureCubeSerializeMipmapData>",
                    "script_ns": "std::vector<cc::ITextureCubeSerializeMipmapData>",
                    "whole_name": "std::vector<cc::ITextureCubeSerializeMipmapData>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::ITextureCubeSerializeMipmapData>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.TextureCube",
        "parents": [
            "cc::SimpleTexture"
        ],
        "nested_classes": [],
        "class_name": "TextureCube",
        "is_ref_class": false,
        "namespaced_class_name": "cc::TextureCube",
        "underlined_class_name": "cc_TextureCube",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [
            {
                "name": "isRGBE",
                "pretty_name": "isRGBE",
                "signature_name": "js_assets_TextureCube",
                "type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "constructor": {
                "name": "TextureCube",
                "signature_name": "js_assets_TextureCube_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "TextureCube"
            },
            "getMipmaps": {
                "name": "getMipmaps",
                "signature_name": "js_assets_TextureCube_getMipmaps",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<cc::ITextureCubeMipmap>",
                    "script_ns": "std::vector<cc::ITextureCubeMipmap>",
                    "whole_name": "const std::vector<cc::ITextureCubeMipmap>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::ITextureCubeMipmap>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en All levels of mipmap images, be noted, automatically generated mipmaps are not included.<br>\n-- When setup mipmap, the size of the texture and pixel format could be modified.<br>\n-- zh \u6240\u6709\u5c42\u7ea7 Mipmap\uff0c\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u5305\u542b\u81ea\u52a8\u751f\u6210\u7684 Mipmap\u3002<br>\n-- \u5f53\u8bbe\u7f6e Mipmap \u65f6\uff0c\u8d34\u56fe\u7684\u5c3a\u5bf8\u4ee5\u53ca\u50cf\u7d20\u683c\u5f0f\u53ef\u80fd\u4f1a\u6539\u53d8\u3002",
                "current_class_name": "TextureCube"
            },
            "setMipmaps": {
                "name": "setMipmaps",
                "signature_name": "js_assets_TextureCube_setMipmaps",
                "arguments": [
                    {
                        "name": "vector<cc::ITextureCubeMipmap>",
                        "script_ns": "std::vector<cc::ITextureCubeMipmap>",
                        "whole_name": "const std::vector<cc::ITextureCubeMipmap>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::ITextureCubeMipmap>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "value"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "TextureCube"
            },
            "setMipmapsForJS": {
                "name": "setMipmapsForJS",
                "signature_name": "js_assets_TextureCube_setMipmapsForJS",
                "arguments": [
                    {
                        "name": "vector<cc::ITextureCubeMipmap>",
                        "script_ns": "std::vector<cc::ITextureCubeMipmap>",
                        "whole_name": "const std::vector<cc::ITextureCubeMipmap>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::ITextureCubeMipmap>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "value"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "TextureCube"
            },
            "getImage": {
                "name": "getImage",
                "signature_name": "js_assets_TextureCube_getImage",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "ITextureCubeMipmap*",
                    "script_ns": "jsb.ITextureCubeMipmap",
                    "whole_name": "const cc::ITextureCubeMipmap*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::ITextureCubeMipmap*",
                    "is_const": true,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Level 0 mipmap image.<br>\n-- Be noted, `this.image = img` equals `this.mipmaps = [img]`,<br>\n-- sets image will clear all previous mipmaps.<br>\n-- zh 0 \u7ea7 Mipmap\u3002<br>\n-- \u6ce8\u610f\uff0c`this.image = img` \u7b49\u4ef7\u4e8e `this.mipmaps = [img]`\uff0c<br>\n-- \u4e5f\u5c31\u662f\u8bf4\uff0c\u901a\u8fc7 `this.image` \u8bbe\u7f6e 0 \u7ea7 Mipmap \u65f6\u5c06\u9690\u5f0f\u5730\u6e05\u9664\u4e4b\u524d\u7684\u6240\u6709 Mipmap\u3002",
                "current_class_name": "TextureCube"
            },
            "setImage": {
                "name": "setImage",
                "signature_name": "js_assets_TextureCube_setImage",
                "arguments": [
                    {
                        "name": "ITextureCubeMipmap",
                        "script_ns": "jsb.ITextureCubeMipmap",
                        "whole_name": "const cc::ITextureCubeMipmap&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ITextureCubeMipmap",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "value"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "TextureCube"
            },
            "reset": {
                "name": "reset",
                "signature_name": "js_assets_TextureCube_reset",
                "arguments": [
                    {
                        "name": "ITexture2DCreateInfo",
                        "script_ns": "jsb.ITexture2DCreateInfo",
                        "whole_name": "const cc::ITexture2DCreateInfo&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ITexture2DCreateInfo",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "info"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Reset the current texture with given size, pixel format and mipmap images.<br>\n-- After reset, the gfx resource will become invalid, you must use [[uploadData]] explicitly to upload the new mipmaps to GPU resources.<br>\n-- zh \u5c06\u5f53\u524d\u8d34\u56fe\u91cd\u7f6e\u4e3a\u6307\u5b9a\u5c3a\u5bf8\u3001\u50cf\u7d20\u683c\u5f0f\u4ee5\u53ca\u6307\u5b9a mipmap \u5c42\u7ea7\u3002\u91cd\u7f6e\u540e\uff0c\u8d34\u56fe\u7684\u50cf\u7d20\u6570\u636e\u5c06\u53d8\u4e3a\u672a\u5b9a\u4e49\u3002<br>\n-- mipmap \u56fe\u50cf\u7684\u6570\u636e\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u5230\u8d34\u56fe\u4e2d\uff0c\u4f60\u5fc5\u987b\u663e\u5f0f\u8c03\u7528 [[uploadData]] \u6765\u4e0a\u4f20\u8d34\u56fe\u6570\u636e\u3002<br>\n-- param info The create information",
                "current_class_name": "TextureCube"
            },
            "releaseTexture": {
                "name": "releaseTexture",
                "signature_name": "js_assets_TextureCube_releaseTexture",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Release used GPU resources.<br>\n-- zh \u91ca\u653e\u5360\u7528\u7684 GPU \u8d44\u6e90\u3002<br>\n-- deprecated please use [[destroy]] instead",
                "current_class_name": "TextureCube"
            },
            "initialize": {
                "name": "initialize",
                "signature_name": "js_assets_TextureCube_initialize",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "TextureCube"
            },
            "getGfxTextureCreateInfo": {
                "name": "getGfxTextureCreateInfo",
                "signature_name": "js_assets_TextureCube_getGfxTextureCreateInfo",
                "arguments": [
                    {
                        "name": "TextureUsageBit",
                        "script_ns": "gfx.TextureUsageBit",
                        "whole_name": "cc::gfx::TextureUsageBit",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::TextureUsageBit",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Format",
                        "script_ns": "gfx.Format",
                        "whole_name": "cc::gfx::Format",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Format",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "TextureFlagBit",
                        "script_ns": "gfx.TextureFlagBit",
                        "whole_name": "cc::gfx::TextureFlagBit",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::TextureFlagBit",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "usage",
                    "format",
                    "levelCount",
                    "flags"
                ],
                "static": false,
                "min_args": 4,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "TextureInfo",
                    "script_ns": "gfx.TextureInfo",
                    "whole_name": "cc::gfx::TextureInfo",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::TextureInfo",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "TextureCube"
            },
            "getGfxTextureViewCreateInfo": {
                "name": "getGfxTextureViewCreateInfo",
                "signature_name": "js_assets_TextureCube_getGfxTextureViewCreateInfo",
                "arguments": [
                    {
                        "name": "Texture*",
                        "script_ns": "gfx.Texture",
                        "whole_name": "cc::gfx::Texture*",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Texture*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Format",
                        "script_ns": "gfx.Format",
                        "whole_name": "cc::gfx::Format",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Format",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "texture",
                    "format",
                    "baseLevel",
                    "levelCount"
                ],
                "static": false,
                "min_args": 4,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "TextureViewInfo",
                    "script_ns": "gfx.TextureViewInfo",
                    "whole_name": "cc::gfx::TextureViewInfo",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::TextureViewInfo",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "TextureCube"
            }
        },
        "static_methods": {
            "fromTexture2DArray": {
                "name": "fromTexture2DArray",
                "signature_name": "js_assets_TextureCube_fromTexture2DArray_static",
                "arguments": [
                    {
                        "name": "vector<cc::Texture2D *>",
                        "script_ns": "std::vector<cc::Texture2D *>",
                        "whole_name": "const std::vector<cc::Texture2D *>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::Texture2D *>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "textures"
                ],
                "static": true,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "TextureCube*",
                    "script_ns": "jsb.TextureCube",
                    "whole_name": "cc::TextureCube*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::TextureCube*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Create a texture cube with an array of [[Texture2D]] which represents 6 faces of the texture cube.<br>\n-- zh \u901a\u8fc7\u4e8c\u7ef4\u8d34\u56fe\u6570\u7ec4\u6307\u5b9a\u6bcf\u4e2a Mipmap \u7684\u6bcf\u4e2a\u9762\u521b\u5efa\u7acb\u65b9\u4f53\u8d34\u56fe\u3002<br>\n-- param textures Texture array, the texture count must be multiple of 6. Every 6 textures are 6 faces of a mipmap level.<br>\n-- The order should obey [[FaceIndex]] order.<br>\n-- param out Output texture cube, if not given, will create a new texture cube.<br>\n-- returns The created texture cube.<br>\n-- example<br>\n-- ```ts<br>\n-- const textures = new Array<Texture2D>(6);<br>\n-- textures[TextureCube.FaceIndex.front] = frontImage;<br>\n-- textures[TextureCube.FaceIndex.back] = backImage;<br>\n-- textures[TextureCube.FaceIndex.left] = leftImage;<br>\n-- textures[TextureCube.FaceIndex.right] = rightImage;<br>\n-- textures[TextureCube.FaceIndex.top] = topImage;<br>\n-- textures[TextureCube.FaceIndex.bottom] = bottomImage;<br>\n-- const textureCube = TextureCube.fromTexture2DArray(textures);<br>\n-- ```",
                "current_class_name": "TextureCube"
            }
        },
        "dict_of_override_method_should_be_bound": {
            "updateMipmaps": [
                {
                    "name": "updateMipmaps",
                    "signature_name": "updateMipmaps",
                    "arguments": [
                        {
                            "name": "unsigned int",
                            "script_ns": "unsigned int",
                            "whole_name": "unsigned int",
                            "namespace_name": "",
                            "namespaced_class_name": "unsigned int",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": true,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        {
                            "name": "unsigned int",
                            "script_ns": "unsigned int",
                            "whole_name": "unsigned int",
                            "namespace_name": "",
                            "namespaced_class_name": "unsigned int",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": true,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "firstLevel",
                        "count"
                    ],
                    "static": false,
                    "min_args": 2,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "onLoaded": [
                {
                    "name": "onLoaded",
                    "signature_name": "onLoaded",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "destroy": [
                {
                    "name": "destroy",
                    "signature_name": "destroy",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "\u9500\u6bc1\u6b64\u8d34\u56fe\uff0c\u6e05\u7a7a\u6240\u6709 Mipmap \u5e76\u91ca\u653e\u5360\u7528\u7684 GPU \u8d44\u6e90\u3002",
                    "current_class_name": null
                }
            ],
            "serialize": [
                {
                    "name": "serialize",
                    "signature_name": "serialize",
                    "arguments": [
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "ctxForExporting"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "any",
                        "script_ns": "nowhere",
                        "whole_name": "ccstd::any",
                        "namespace_name": "ccstd::",
                        "namespaced_class_name": "ccstd::any",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "deserialize": [
                {
                    "name": "deserialize",
                    "signature_name": "deserialize",
                    "arguments": [
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "serializedData",
                        "handle"
                    ],
                    "static": false,
                    "min_args": 2,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "initDefault": [
                {
                    "name": "initDefault",
                    "signature_name": "initDefault",
                    "arguments": [
                        {
                            "name": "optional<std::string>",
                            "script_ns": "boost.optional<std::string>",
                            "whole_name": "const boost::optional<std::string>&",
                            "namespace_name": "boost::",
                            "namespaced_class_name": "boost::optional<std::string>",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "uuid"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "validate": [
                {
                    "name": "validate",
                    "signature_name": "validate",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.BuiltinResMgr",
        "parents": [],
        "nested_classes": [],
        "class_name": "BuiltinResMgr",
        "is_ref_class": false,
        "namespaced_class_name": "cc::BuiltinResMgr",
        "underlined_class_name": "cc_BuiltinResMgr",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "constructor": {
                "name": "BuiltinResMgr",
                "signature_name": "js_assets_BuiltinResMgr_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "BuiltinResMgr"
            },
            "initBuiltinRes": {
                "name": "initBuiltinRes",
                "signature_name": "js_assets_BuiltinResMgr_initBuiltinRes",
                "arguments": [
                    {
                        "name": "Device*",
                        "script_ns": "gfx.Device",
                        "whole_name": "cc::gfx::Device*",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Device*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "device"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "BuiltinResMgr"
            },
            "isInitialized": {
                "name": "isInitialized",
                "signature_name": "js_assets_BuiltinResMgr_isInitialized",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "BuiltinResMgr"
            },
            "addAsset": {
                "name": "addAsset",
                "signature_name": "js_assets_BuiltinResMgr_addAsset",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Asset*",
                        "script_ns": "jsb.Asset",
                        "whole_name": "cc::Asset*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Asset*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "uuid",
                    "asset"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "BuiltinResMgr"
            },
            "getAsset": {
                "name": "getAsset",
                "signature_name": "js_assets_BuiltinResMgr_getAsset",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "uuid"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "Asset*",
                    "script_ns": "jsb.Asset",
                    "whole_name": "cc::Asset*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Asset*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "BuiltinResMgr"
            },
            "tryCompileAllPasses": {
                "name": "tryCompileAllPasses",
                "signature_name": "js_assets_BuiltinResMgr_tryCompileAllPasses",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "BuiltinResMgr"
            }
        },
        "static_methods": {
            "getInstance": {
                "name": "getInstance",
                "signature_name": "js_assets_BuiltinResMgr_getInstance_static",
                "arguments": [],
                "argumentTips": [],
                "static": true,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "BuiltinResMgr*",
                    "script_ns": "jsb.BuiltinResMgr",
                    "whole_name": "cc::BuiltinResMgr*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::BuiltinResMgr*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "BuiltinResMgr"
            }
        },
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IMeshBufferView",
        "parents": [],
        "nested_classes": [],
        "class_name": "IMeshBufferView",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IMeshBufferView",
        "underlined_class_name": "cc_IMeshBufferView",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "offset",
                "pretty_name": "offset",
                "signature_name": "js_assets_IMeshBufferView",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "length",
                "pretty_name": "length",
                "signature_name": "js_assets_IMeshBufferView",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "count",
                "pretty_name": "count",
                "signature_name": "js_assets_IMeshBufferView",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "stride",
                "pretty_name": "stride",
                "signature_name": "js_assets_IMeshBufferView",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.MorphTarget",
        "parents": [],
        "nested_classes": [],
        "class_name": "MorphTarget",
        "is_ref_class": false,
        "namespaced_class_name": "cc::MorphTarget",
        "underlined_class_name": "cc_MorphTarget",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "displacements",
                "pretty_name": "displacements",
                "signature_name": "js_assets_MorphTarget",
                "type": {
                    "name": "vector<cc::IMeshBufferView>",
                    "script_ns": "std::vector<cc::IMeshBufferView>",
                    "whole_name": "std::vector<cc::IMeshBufferView>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IMeshBufferView>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.SubMeshMorph",
        "parents": [],
        "nested_classes": [],
        "class_name": "SubMeshMorph",
        "is_ref_class": false,
        "namespaced_class_name": "cc::SubMeshMorph",
        "underlined_class_name": "cc_SubMeshMorph",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "attributes",
                "pretty_name": "attributes",
                "signature_name": "js_assets_SubMeshMorph",
                "type": {
                    "name": "vector<std::string>",
                    "script_ns": "std::vector<std::string>",
                    "whole_name": "std::vector<std::string>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "targets",
                "pretty_name": "targets",
                "signature_name": "js_assets_SubMeshMorph",
                "type": {
                    "name": "vector<cc::MorphTarget>",
                    "script_ns": "std::vector<cc::MorphTarget>",
                    "whole_name": "std::vector<cc::MorphTarget>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::MorphTarget>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "weights",
                "pretty_name": "weights",
                "signature_name": "js_assets_SubMeshMorph",
                "type": {
                    "name": "optional<std::vector<float>>",
                    "script_ns": "boost.optional<std::vector<float>>",
                    "whole_name": "boost::optional<std::vector<float>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<float>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Morph",
        "parents": [],
        "nested_classes": [],
        "class_name": "Morph",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Morph",
        "underlined_class_name": "cc_Morph",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "subMeshMorphs",
                "pretty_name": "subMeshMorphs",
                "signature_name": "js_assets_Morph",
                "type": {
                    "name": "vector<boost::optional<cc::SubMeshMorph>>",
                    "script_ns": "std::vector<boost::optional<cc::SubMeshMorph>>",
                    "whole_name": "std::vector<boost::optional<cc::SubMeshMorph>>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<boost::optional<cc::SubMeshMorph>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "weights",
                "pretty_name": "weights",
                "signature_name": "js_assets_Morph",
                "type": {
                    "name": "optional<std::vector<float>>",
                    "script_ns": "boost.optional<std::vector<float>>",
                    "whole_name": "boost::optional<std::vector<float>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<float>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "targetNames",
                "pretty_name": "targetNames",
                "signature_name": "js_assets_Morph",
                "type": {
                    "name": "optional<std::vector<std::string>>",
                    "script_ns": "boost.optional<std::vector<std::string>>",
                    "whole_name": "boost::optional<std::vector<std::string>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<std::string>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.MorphRenderingInstance",
        "parents": [],
        "nested_classes": [],
        "class_name": "MorphRenderingInstance",
        "is_ref_class": false,
        "namespaced_class_name": "cc::MorphRenderingInstance",
        "underlined_class_name": "cc_MorphRenderingInstance",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "setWeights": {
                "name": "setWeights",
                "signature_name": "js_assets_MorphRenderingInstance_setWeights",
                "arguments": [
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "vector<float>",
                        "script_ns": "std::vector<float>",
                        "whole_name": "const std::vector<float>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<float>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "subMeshIndex",
                    "weights"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "Sets weights of targets of specified sub mesh.<br>\n-- param subMeshIndex<br>\n-- param weights",
                "current_class_name": "MorphRenderingInstance"
            },
            "adaptPipelineState": {
                "name": "adaptPipelineState",
                "signature_name": "js_assets_MorphRenderingInstance_adaptPipelineState",
                "arguments": [
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "DescriptorSet*",
                        "script_ns": "gfx.DescriptorSet",
                        "whole_name": "cc::gfx::DescriptorSet*",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::DescriptorSet*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "subMeshIndex",
                    "descriptorSet"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "Adapts pipeline state to do the rendering.<br>\n-- param subMeshIndex<br>\n-- param pipelineState",
                "current_class_name": "MorphRenderingInstance"
            },
            "requiredPatches": {
                "name": "requiredPatches",
                "signature_name": "js_assets_MorphRenderingInstance_requiredPatches",
                "arguments": [
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "subMeshIndex"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<cc::scene::IMacroPatch>",
                    "script_ns": "std::vector<cc::scene::IMacroPatch>",
                    "whole_name": "std::vector<cc::scene::IMacroPatch>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::scene::IMacroPatch>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "MorphRenderingInstance"
            },
            "destroy": {
                "name": "destroy",
                "signature_name": "js_assets_MorphRenderingInstance_destroy",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "Destroy the rendering instance.",
                "current_class_name": "MorphRenderingInstance"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.MorphRendering",
        "parents": [],
        "nested_classes": [],
        "class_name": "MorphRendering",
        "is_ref_class": false,
        "namespaced_class_name": "cc::MorphRendering",
        "underlined_class_name": "cc_MorphRendering",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "createInstance": {
                "name": "createInstance",
                "signature_name": "js_assets_MorphRendering_createInstance",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "MorphRenderingInstance*",
                    "script_ns": "jsb.MorphRenderingInstance",
                    "whole_name": "cc::MorphRenderingInstance*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::MorphRenderingInstance*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "MorphRendering"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.StdMorphRendering",
        "parents": [
            "cc::MorphRendering"
        ],
        "nested_classes": [],
        "class_name": "StdMorphRendering",
        "is_ref_class": false,
        "namespaced_class_name": "cc::StdMorphRendering",
        "underlined_class_name": "cc_StdMorphRendering",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "constructor": {
                "name": "StdMorphRendering",
                "signature_name": "js_assets_StdMorphRendering_constructor",
                "arguments": [
                    {
                        "name": "Mesh*",
                        "script_ns": "jsb.Mesh",
                        "whole_name": "cc::Mesh*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mesh*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Device*",
                        "script_ns": "gfx.Device",
                        "whole_name": "cc::gfx::Device*",
                        "namespace_name": "cc::gfx::",
                        "namespaced_class_name": "cc::gfx::Device*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "mesh",
                    "gfxDevice"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "StdMorphRendering"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "createInstance": [
                {
                    "name": "createInstance",
                    "signature_name": "createInstance",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "MorphRenderingInstance*",
                        "script_ns": "jsb.MorphRenderingInstance",
                        "whole_name": "cc::MorphRenderingInstance*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::MorphRenderingInstance*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.CustomAttribute",
        "parents": [],
        "nested_classes": [],
        "class_name": "CustomAttribute",
        "is_ref_class": false,
        "namespaced_class_name": "cc::CustomAttribute",
        "underlined_class_name": "cc_CustomAttribute",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "attr",
                "pretty_name": "attr",
                "signature_name": "js_assets_CustomAttribute",
                "type": {
                    "name": "Attribute",
                    "script_ns": "gfx.Attribute",
                    "whole_name": "cc::gfx::Attribute",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::Attribute",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "values",
                "pretty_name": "values",
                "signature_name": "js_assets_CustomAttribute",
                "type": {
                    "name": "vector<float>",
                    "script_ns": "std::vector<float>",
                    "whole_name": "std::vector<float>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<float>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IGeometry",
        "parents": [],
        "nested_classes": [],
        "class_name": "IGeometry",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IGeometry",
        "underlined_class_name": "cc_IGeometry",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "positions",
                "pretty_name": "positions",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "vector<float>",
                    "script_ns": "std::vector<float>",
                    "whole_name": "std::vector<float>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<float>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "normals",
                "pretty_name": "normals",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<std::vector<float>>",
                    "script_ns": "boost.optional<std::vector<float>>",
                    "whole_name": "boost::optional<std::vector<float>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<float>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "uvs",
                "pretty_name": "uvs",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<std::vector<float>>",
                    "script_ns": "boost.optional<std::vector<float>>",
                    "whole_name": "boost::optional<std::vector<float>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<float>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "tangents",
                "pretty_name": "tangents",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<std::vector<float>>",
                    "script_ns": "boost.optional<std::vector<float>>",
                    "whole_name": "boost::optional<std::vector<float>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<float>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "colors",
                "pretty_name": "colors",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<std::vector<float>>",
                    "script_ns": "boost.optional<std::vector<float>>",
                    "whole_name": "boost::optional<std::vector<float>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<float>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "attributes",
                "pretty_name": "attributes",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<std::vector<cc::gfx::Attribute>>",
                    "script_ns": "boost.optional<std::vector<cc::gfx::Attribute>>",
                    "whole_name": "boost::optional<std::vector<cc::gfx::Attribute>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<cc::gfx::Attribute>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "customAttributes",
                "pretty_name": "customAttributes",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<std::vector<cc::CustomAttribute>>",
                    "script_ns": "boost.optional<std::vector<cc::CustomAttribute>>",
                    "whole_name": "boost::optional<std::vector<cc::CustomAttribute>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<cc::CustomAttribute>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "boundingRadius",
                "pretty_name": "boundingRadius",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<float>",
                    "script_ns": "boost.optional<float>",
                    "whole_name": "boost::optional<float>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<float>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "minPos",
                "pretty_name": "minPos",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<cc::Vec3>",
                    "script_ns": "boost.optional<cc::Vec3>",
                    "whole_name": "boost::optional<cc::Vec3>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::Vec3>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "maxPos",
                "pretty_name": "maxPos",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<cc::Vec3>",
                    "script_ns": "boost.optional<cc::Vec3>",
                    "whole_name": "boost::optional<cc::Vec3>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::Vec3>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "indices",
                "pretty_name": "indices",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<std::vector<unsigned int>>",
                    "script_ns": "boost.optional<std::vector<unsigned int>>",
                    "whole_name": "boost::optional<std::vector<unsigned int>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<unsigned int>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "primitiveMode",
                "pretty_name": "primitiveMode",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<cc::gfx::PrimitiveMode>",
                    "script_ns": "boost.optional<cc::gfx::PrimitiveMode>",
                    "whole_name": "boost::optional<cc::gfx::PrimitiveMode>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::PrimitiveMode>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "doubleSided",
                "pretty_name": "doubleSided",
                "signature_name": "js_assets_IGeometry",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.DynamicCustomAttribute",
        "parents": [],
        "nested_classes": [],
        "class_name": "DynamicCustomAttribute",
        "is_ref_class": false,
        "namespaced_class_name": "cc::DynamicCustomAttribute",
        "underlined_class_name": "cc_DynamicCustomAttribute",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "attr",
                "pretty_name": "attr",
                "signature_name": "js_assets_DynamicCustomAttribute",
                "type": {
                    "name": "Attribute",
                    "script_ns": "gfx.Attribute",
                    "whole_name": "cc::gfx::Attribute",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::Attribute",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "values",
                "pretty_name": "values",
                "signature_name": "js_assets_DynamicCustomAttribute",
                "type": {
                    "name": "TypedArrayTemp<float>",
                    "script_ns": "jsb.TypedArrayTemp<float>",
                    "whole_name": "cc::TypedArrayTemp<float>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::TypedArrayTemp<float>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.IDynamicGeometry",
        "parents": [],
        "nested_classes": [],
        "class_name": "IDynamicGeometry",
        "is_ref_class": false,
        "namespaced_class_name": "cc::IDynamicGeometry",
        "underlined_class_name": "cc_IDynamicGeometry",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "positions",
                "pretty_name": "positions",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "TypedArrayTemp<float>",
                    "script_ns": "jsb.TypedArrayTemp<float>",
                    "whole_name": "cc::TypedArrayTemp<float>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::TypedArrayTemp<float>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "normals",
                "pretty_name": "normals",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<cc::TypedArrayTemp<float>>",
                    "script_ns": "boost.optional<cc::TypedArrayTemp<float>>",
                    "whole_name": "boost::optional<cc::TypedArrayTemp<float>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::TypedArrayTemp<float>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "uvs",
                "pretty_name": "uvs",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<cc::TypedArrayTemp<float>>",
                    "script_ns": "boost.optional<cc::TypedArrayTemp<float>>",
                    "whole_name": "boost::optional<cc::TypedArrayTemp<float>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::TypedArrayTemp<float>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "tangents",
                "pretty_name": "tangents",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<cc::TypedArrayTemp<float>>",
                    "script_ns": "boost.optional<cc::TypedArrayTemp<float>>",
                    "whole_name": "boost::optional<cc::TypedArrayTemp<float>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::TypedArrayTemp<float>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "colors",
                "pretty_name": "colors",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<cc::TypedArrayTemp<float>>",
                    "script_ns": "boost.optional<cc::TypedArrayTemp<float>>",
                    "whole_name": "boost::optional<cc::TypedArrayTemp<float>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::TypedArrayTemp<float>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "customAttributes",
                "pretty_name": "customAttributes",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<std::vector<cc::DynamicCustomAttribute>>",
                    "script_ns": "boost.optional<std::vector<cc::DynamicCustomAttribute>>",
                    "whole_name": "boost::optional<std::vector<cc::DynamicCustomAttribute>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<cc::DynamicCustomAttribute>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "minPos",
                "pretty_name": "minPos",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<cc::Vec3>",
                    "script_ns": "boost.optional<cc::Vec3>",
                    "whole_name": "boost::optional<cc::Vec3>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::Vec3>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "maxPos",
                "pretty_name": "maxPos",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<cc::Vec3>",
                    "script_ns": "boost.optional<cc::Vec3>",
                    "whole_name": "boost::optional<cc::Vec3>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::Vec3>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "indices16",
                "pretty_name": "indices16",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<cc::TypedArrayTemp<unsigned short>>",
                    "script_ns": "boost.optional<cc::TypedArrayTemp<unsigned short>>",
                    "whole_name": "boost::optional<cc::TypedArrayTemp<unsigned short>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::TypedArrayTemp<unsigned short>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "indices32",
                "pretty_name": "indices32",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<cc::TypedArrayTemp<unsigned int>>",
                    "script_ns": "boost.optional<cc::TypedArrayTemp<unsigned int>>",
                    "whole_name": "boost::optional<cc::TypedArrayTemp<unsigned int>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::TypedArrayTemp<unsigned int>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "primitiveMode",
                "pretty_name": "primitiveMode",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<cc::gfx::PrimitiveMode>",
                    "script_ns": "boost.optional<cc::gfx::PrimitiveMode>",
                    "whole_name": "boost::optional<cc::gfx::PrimitiveMode>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::gfx::PrimitiveMode>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "doubleSided",
                "pretty_name": "doubleSided",
                "signature_name": "js_assets_IDynamicGeometry",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Mesh::IVertexBundle",
        "parents": [],
        "nested_classes": [
            "Mesh"
        ],
        "class_name": "IVertexBundle",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Mesh::IVertexBundle",
        "underlined_class_name": "cc_Mesh_IVertexBundle",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "_padding",
                "pretty_name": "_padding",
                "signature_name": "js_assets_IVertexBundle",
                "type": {
                    "name": "optional<unsigned char>",
                    "script_ns": "boost.optional<unsigned char>",
                    "whole_name": "boost::optional<unsigned char>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned char>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "view",
                "pretty_name": "view",
                "signature_name": "js_assets_IVertexBundle",
                "type": {
                    "name": "IMeshBufferView",
                    "script_ns": "jsb.IMeshBufferView",
                    "whole_name": "cc::IMeshBufferView",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IMeshBufferView",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "attributes",
                "pretty_name": "attributes",
                "signature_name": "js_assets_IVertexBundle",
                "type": {
                    "name": "vector<cc::gfx::Attribute>",
                    "script_ns": "std::vector<cc::gfx::Attribute>",
                    "whole_name": "std::vector<cc::gfx::Attribute>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::gfx::Attribute>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Mesh::ISubMesh",
        "parents": [],
        "nested_classes": [
            "Mesh"
        ],
        "class_name": "ISubMesh",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Mesh::ISubMesh",
        "underlined_class_name": "cc_Mesh_ISubMesh",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "vertexBundelIndices",
                "pretty_name": "vertexBundelIndices",
                "signature_name": "js_assets_ISubMesh",
                "type": {
                    "name": "vector<unsigned int>",
                    "script_ns": "std::vector<unsigned int>",
                    "whole_name": "std::vector<unsigned int>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "primitiveMode",
                "pretty_name": "primitiveMode",
                "signature_name": "js_assets_ISubMesh",
                "type": {
                    "name": "PrimitiveMode",
                    "script_ns": "gfx.PrimitiveMode",
                    "whole_name": "cc::gfx::PrimitiveMode",
                    "namespace_name": "cc::gfx::",
                    "namespaced_class_name": "cc::gfx::PrimitiveMode",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "indexView",
                "pretty_name": "indexView",
                "signature_name": "js_assets_ISubMesh",
                "type": {
                    "name": "optional<cc::IMeshBufferView>",
                    "script_ns": "boost.optional<cc::IMeshBufferView>",
                    "whole_name": "boost::optional<cc::IMeshBufferView>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::IMeshBufferView>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "jointMapIndex",
                "pretty_name": "jointMapIndex",
                "signature_name": "js_assets_ISubMesh",
                "type": {
                    "name": "optional<unsigned int>",
                    "script_ns": "boost.optional<unsigned int>",
                    "whole_name": "boost::optional<unsigned int>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<unsigned int>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Mesh::IDynamicInfo",
        "parents": [],
        "nested_classes": [
            "Mesh"
        ],
        "class_name": "IDynamicInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Mesh::IDynamicInfo",
        "underlined_class_name": "cc_Mesh_IDynamicInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "maxSubMeshes",
                "pretty_name": "maxSubMeshes",
                "signature_name": "js_assets_IDynamicInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "maxSubMeshVertices",
                "pretty_name": "maxSubMeshVertices",
                "signature_name": "js_assets_IDynamicInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "maxSubMeshIndices",
                "pretty_name": "maxSubMeshIndices",
                "signature_name": "js_assets_IDynamicInfo",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Mesh::IDynamicStruct",
        "parents": [],
        "nested_classes": [
            "Mesh"
        ],
        "class_name": "IDynamicStruct",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Mesh::IDynamicStruct",
        "underlined_class_name": "cc_Mesh_IDynamicStruct",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "info",
                "pretty_name": "info",
                "signature_name": "js_assets_IDynamicStruct",
                "type": {
                    "name": "IDynamicInfo",
                    "script_ns": "jsb.Mesh::IDynamicInfo",
                    "whole_name": "cc::Mesh::IDynamicInfo",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Mesh::IDynamicInfo",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "bounds",
                "pretty_name": "bounds",
                "signature_name": "js_assets_IDynamicStruct",
                "type": {
                    "name": "vector<cc::geometry::AABB>",
                    "script_ns": "std::vector<cc::geometry::AABB>",
                    "whole_name": "std::vector<cc::geometry::AABB>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::geometry::AABB>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Mesh::IStruct",
        "parents": [],
        "nested_classes": [
            "Mesh"
        ],
        "class_name": "IStruct",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Mesh::IStruct",
        "underlined_class_name": "cc_Mesh_IStruct",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "vertexBundles",
                "pretty_name": "vertexBundles",
                "signature_name": "js_assets_IStruct",
                "type": {
                    "name": "vector<cc::Mesh::IVertexBundle>",
                    "script_ns": "std::vector<cc::Mesh::IVertexBundle>",
                    "whole_name": "std::vector<cc::Mesh::IVertexBundle>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::Mesh::IVertexBundle>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "primitives",
                "pretty_name": "primitives",
                "signature_name": "js_assets_IStruct",
                "type": {
                    "name": "vector<cc::Mesh::ISubMesh>",
                    "script_ns": "std::vector<cc::Mesh::ISubMesh>",
                    "whole_name": "std::vector<cc::Mesh::ISubMesh>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::Mesh::ISubMesh>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "minPosition",
                "pretty_name": "minPosition",
                "signature_name": "js_assets_IStruct",
                "type": {
                    "name": "optional<cc::Vec3>",
                    "script_ns": "boost.optional<cc::Vec3>",
                    "whole_name": "boost::optional<cc::Vec3>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::Vec3>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "maxPosition",
                "pretty_name": "maxPosition",
                "signature_name": "js_assets_IStruct",
                "type": {
                    "name": "optional<cc::Vec3>",
                    "script_ns": "boost.optional<cc::Vec3>",
                    "whole_name": "boost::optional<cc::Vec3>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::Vec3>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "jointMaps",
                "pretty_name": "jointMaps",
                "signature_name": "js_assets_IStruct",
                "type": {
                    "name": "optional<std::vector<std::vector<int>>>",
                    "script_ns": "boost.optional<std::vector<std::vector<int>>>",
                    "whole_name": "boost::optional<std::vector<std::vector<int>>>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<std::vector<std::vector<int>>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "morph",
                "pretty_name": "morph",
                "signature_name": "js_assets_IStruct",
                "type": {
                    "name": "optional<cc::Morph>",
                    "script_ns": "boost.optional<cc::Morph>",
                    "whole_name": "boost::optional<cc::Morph>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::Morph>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "dynamic",
                "pretty_name": "dynamic",
                "signature_name": "js_assets_IStruct",
                "type": {
                    "name": "optional<cc::Mesh::IDynamicStruct>",
                    "script_ns": "boost.optional<cc::Mesh::IDynamicStruct>",
                    "whole_name": "boost::optional<cc::Mesh::IDynamicStruct>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<cc::Mesh::IDynamicStruct>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Mesh::ICreateInfo",
        "parents": [],
        "nested_classes": [
            "Mesh"
        ],
        "class_name": "ICreateInfo",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Mesh::ICreateInfo",
        "underlined_class_name": "cc_Mesh_ICreateInfo",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "struct",
                "pretty_name": "structInfo",
                "signature_name": "js_assets_ICreateInfo",
                "type": {
                    "name": "IStruct",
                    "script_ns": "jsb.Mesh::IStruct",
                    "whole_name": "cc::Mesh::IStruct",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Mesh::IStruct",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "data",
                "pretty_name": "data",
                "signature_name": "js_assets_ICreateInfo",
                "type": {
                    "name": "TypedArrayTemp<unsigned char>",
                    "script_ns": "jsb.TypedArrayTemp<unsigned char>",
                    "whole_name": "cc::TypedArrayTemp<unsigned char>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::TypedArrayTemp<unsigned char>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Mesh",
        "parents": [
            "cc::Asset"
        ],
        "nested_classes": [],
        "class_name": "Mesh",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Mesh",
        "underlined_class_name": "cc_Mesh",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [
            {
                "name": "morphRendering",
                "pretty_name": "morphRendering",
                "signature_name": "js_assets_Mesh",
                "type": {
                    "name": "IntrusivePtr<cc::MorphRendering>",
                    "script_ns": "jsb.IntrusivePtr<jsb.MorphRendering>",
                    "whole_name": "cc::IntrusivePtr<cc::MorphRendering>",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::IntrusivePtr<cc::MorphRendering>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "_hash",
                "names": [
                    "_hash",
                    "hash"
                ],
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "data",
                "names": [
                    "data",
                    "_data"
                ],
                "type": {
                    "name": "TypedArrayTemp<unsigned char>",
                    "script_ns": "jsb.TypedArrayTemp<unsigned char>",
                    "whole_name": "cc::TypedArrayTemp<unsigned char>&",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::TypedArrayTemp<unsigned char>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "jointBufferIndices",
                "names": [
                    "jointBufferIndices"
                ],
                "type": {
                    "name": "vector<int>",
                    "script_ns": "std::vector<int>",
                    "whole_name": "const std::vector<int>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<int>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "maxPosition",
                "names": [
                    "maxPosition"
                ],
                "type": {
                    "name": "Vec3",
                    "script_ns": "jsb.Vec3",
                    "whole_name": "const cc::Vec3&",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Vec3",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "minPosition",
                "names": [
                    "minPosition"
                ],
                "type": {
                    "name": "Vec3",
                    "script_ns": "jsb.Vec3",
                    "whole_name": "const cc::Vec3&",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Vec3",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "renderingSubMeshes",
                "names": [
                    "renderingSubMeshes"
                ],
                "type": {
                    "name": "vector<cc::IntrusivePtr<cc::RenderingSubMesh>>",
                    "script_ns": "std::vector<cc::IntrusivePtr<cc::RenderingSubMesh>>",
                    "whole_name": "const std::vector<cc::IntrusivePtr<cc::RenderingSubMesh>>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IntrusivePtr<cc::RenderingSubMesh>>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "subMeshCount",
                "names": [
                    "subMeshCount"
                ],
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "_nativeAsset",
                "names": [
                    "_nativeAsset"
                ],
                "type": {
                    "name": "ArrayBuffer*",
                    "script_ns": "jsb.ArrayBuffer",
                    "whole_name": "cc::ArrayBuffer*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::ArrayBuffer*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "constructor": {
                "name": "Mesh",
                "signature_name": "js_assets_Mesh_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Mesh"
            },
            "getStruct": {
                "name": "getStruct",
                "signature_name": "js_assets_Mesh_getStruct",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "IStruct",
                    "script_ns": "jsb.Mesh::IStruct",
                    "whole_name": "const cc::Mesh::IStruct&",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Mesh::IStruct",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en The struct of the mesh<br>\n-- zh \u6b64\u7f51\u683c\u7684\u7ed3\u6784\u3002",
                "current_class_name": "Mesh"
            },
            "setStruct": {
                "name": "setStruct",
                "signature_name": "js_assets_Mesh_setStruct",
                "arguments": [
                    {
                        "name": "IStruct",
                        "script_ns": "jsb.Mesh::IStruct",
                        "whole_name": "const cc::Mesh::IStruct&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mesh::IStruct",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "input"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Mesh"
            },
            "initialize": {
                "name": "initialize",
                "signature_name": "js_assets_Mesh_initialize",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Mesh"
            },
            "destroyRenderingMesh": {
                "name": "destroyRenderingMesh",
                "signature_name": "js_assets_Mesh_destroyRenderingMesh",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Release all related GPU resources<br>\n-- zh \u91ca\u653e\u6b64\u7f51\u683c\u5360\u6709\u7684\u6240\u6709 GPU \u8d44\u6e90\u3002",
                "current_class_name": "Mesh"
            },
            "assign": {
                "name": "assign",
                "signature_name": "js_assets_Mesh_assign",
                "arguments": [
                    {
                        "name": "IStruct",
                        "script_ns": "jsb.Mesh::IStruct",
                        "whole_name": "const cc::Mesh::IStruct&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mesh::IStruct",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "TypedArrayTemp<unsigned char>",
                        "script_ns": "jsb.TypedArrayTemp<unsigned char>",
                        "whole_name": "const cc::TypedArrayTemp<unsigned char>&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::TypedArrayTemp<unsigned char>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "structInfo",
                    "data"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Reset the struct and data of the mesh<br>\n-- zh \u91cd\u7f6e\u6b64\u7f51\u683c\u7684\u7ed3\u6784\u548c\u6570\u636e\u3002<br>\n-- param struct The new struct<br>\n-- param data The new data<br>\n-- deprecated Will be removed in v3.0.0, please use [[reset]] instead",
                "current_class_name": "Mesh"
            },
            "reset": {
                "name": "reset",
                "signature_name": "js_assets_Mesh_reset",
                "arguments": [
                    {
                        "name": "ICreateInfo",
                        "script_ns": "jsb.Mesh::ICreateInfo",
                        "whole_name": "cc::Mesh::ICreateInfo&&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mesh::ICreateInfo",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": true,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "info"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Reset the mesh with mesh creation information<br>\n-- zh \u91cd\u7f6e\u6b64\u7f51\u683c\u3002<br>\n-- param info Mesh creation information including struct and data",
                "current_class_name": "Mesh"
            },
            "getBoneSpaceBounds": {
                "name": "getBoneSpaceBounds",
                "signature_name": "js_assets_Mesh_getBoneSpaceBounds",
                "arguments": [
                    {
                        "name": "Skeleton*",
                        "script_ns": "jsb.Skeleton",
                        "whole_name": "cc::Skeleton*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Skeleton*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "skeleton"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<cc::IntrusivePtr<cc::geometry::AABB>>",
                    "script_ns": "std::vector<cc::IntrusivePtr<cc::geometry::AABB>>",
                    "whole_name": "std::vector<cc::IntrusivePtr<cc::geometry::AABB>>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::IntrusivePtr<cc::geometry::AABB>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Get [[AABB]] bounds in the skeleton's bone space<br>\n-- zh \u83b7\u53d6\u9aa8\u9abc\u53d8\u6362\u7a7a\u95f4\u5185\u4e0b\u7684 [[AABB]] \u5305\u56f4\u76d2<br>\n-- param skeleton",
                "current_class_name": "Mesh"
            },
            "merge": {
                "name": "merge",
                "signature_name": "js_assets_Mesh_merge",
                "arguments": [
                    {
                        "name": "Mesh*",
                        "script_ns": "jsb.Mesh",
                        "whole_name": "cc::Mesh*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mesh*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Mat4*",
                        "script_ns": "jsb.Mat4",
                        "whole_name": "const cc::Mat4*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mat4*",
                        "is_const": true,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "mesh",
                    "worldMatrix",
                    "validate"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Merge the given mesh into the current mesh<br>\n-- zh \u5408\u5e76\u6307\u5b9a\u7684\u7f51\u683c\u5230\u6b64\u7f51\u683c\u4e2d\u3002<br>\n-- param mesh The mesh to be merged<br>\n-- param worldMatrix The world matrix of the given mesh<br>\n-- param [validate=false] Whether to validate the mesh<br>\n-- returns Check the mesh state and return the validation result.",
                "current_class_name": "Mesh"
            },
            "validateMergingMesh": {
                "name": "validateMergingMesh",
                "signature_name": "js_assets_Mesh_validateMergingMesh",
                "arguments": [
                    {
                        "name": "Mesh*",
                        "script_ns": "jsb.Mesh",
                        "whole_name": "cc::Mesh*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mesh*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "mesh"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Validation for whether the given mesh can be merged into the current mesh.<br>\n-- To pass the validation, it must satisfy either of these two requirements:<br>\n-- - When the current mesh have no data<br>\n-- - When the two mesh have the same vertex bundle count, the same sub meshes count, and the same sub mesh layout.<br>\n-- Same mesh layout means:<br>\n-- - They have the same primitive type and reference to the same amount vertex bundle with the same indices.<br>\n-- - And they all have or don't have index view<br>\n-- zh \u9a8c\u8bc1\u6307\u5b9a\u7f51\u683c\u662f\u5426\u53ef\u4ee5\u5408\u5e76\u81f3\u5f53\u524d\u7f51\u683c\u3002<br>\n-- \u5f53\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u4e4b\u4e00\u65f6\uff0c\u6307\u5b9a\u7f51\u683c\u53ef\u4ee5\u5408\u5e76\u81f3\u5f53\u524d\u7f51\u683c\uff1a<br>\n-- - \u5f53\u524d\u7f51\u683c\u65e0\u6570\u636e\u800c\u5f85\u5408\u5e76\u7f51\u683c\u6709\u6570\u636e\uff1b<br>\n-- - \u5b83\u4eec\u7684\u9876\u70b9\u5757\u6570\u76ee\u76f8\u540c\u4e14\u5bf9\u5e94\u9876\u70b9\u5757\u7684\u5e03\u5c40\u4e00\u81f4\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u5b50\u7f51\u683c\u6570\u76ee\u76f8\u540c\u4e14\u5bf9\u5e94\u5b50\u7f51\u683c\u7684\u5e03\u5c40\u4e00\u81f4\u3002<br>\n-- \u4e24\u4e2a\u9876\u70b9\u5757\u5e03\u5c40\u4e00\u81f4\u5f53\u4e14\u4ec5\u5f53\uff1a<br>\n-- - \u5b83\u4eec\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u9876\u70b9\u5c5e\u6027\u4e14\u5bf9\u5e94\u7684\u9876\u70b9\u5c5e\u6027\u5177\u6709\u76f8\u540c\u7684\u5c5e\u6027\u683c\u5f0f\u3002<br>\n-- \u4e24\u4e2a\u5b50\u7f51\u683c\u5e03\u5c40\u4e00\u81f4\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a<br>\n-- - \u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u56fe\u5143\u7c7b\u578b\u5e76\u4e14\u5f15\u7528\u76f8\u540c\u6570\u91cf\u3001\u76f8\u540c\u7d22\u5f15\u7684\u9876\u70b9\u5757\uff1b\u5e76\u4e14\uff0c<br>\n-- - \u8981\u4e48\u90fd\u9700\u8981\u7d22\u5f15\u7ed8\u5236\uff0c\u8981\u4e48\u90fd\u4e0d\u9700\u8981\u7d22\u5f15\u7ed8\u5236\u3002<br>\n-- param mesh The other mesh to be validated",
                "current_class_name": "Mesh"
            },
            "readAttribute": {
                "name": "readAttribute",
                "signature_name": "js_assets_Mesh_readAttribute",
                "arguments": [
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "char*",
                        "script_ns": "char",
                        "whole_name": "const char*",
                        "namespace_name": "",
                        "namespaced_class_name": "char*",
                        "is_const": true,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "primitiveIndex",
                    "attributeName"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "variant<boost::variant2::monostate, cc::TypedArrayTemp<signed char>, cc::TypedArrayTemp<short>, cc::TypedArrayTemp<int>, cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>, cc::TypedArrayTemp<float>, cc::TypedArrayTemp<double>>",
                    "script_ns": "boost.variant<boost.monostate, cc::TypedArrayTemp<signed char>, cc::TypedArrayTemp<short>, cc::TypedArrayTemp<int>, cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>, cc::TypedArrayTemp<float>, cc::TypedArrayTemp<double>>",
                    "whole_name": "boost::variant2::variant<boost::variant2::monostate, cc::TypedArrayTemp<signed char>, cc::TypedArrayTemp<short>, cc::TypedArrayTemp<int>, cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>, cc::TypedArrayTemp<float>, cc::TypedArrayTemp<double>>",
                    "namespace_name": "boost::variant2::",
                    "namespaced_class_name": "boost::variant2::variant<boost::variant2::monostate, cc::TypedArrayTemp<signed char>, cc::TypedArrayTemp<short>, cc::TypedArrayTemp<int>, cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>, cc::TypedArrayTemp<float>, cc::TypedArrayTemp<double>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Read the requested attribute of the given sub mesh<br>\n-- zh \u8bfb\u53d6\u5b50\u7f51\u683c\u7684\u6307\u5b9a\u5c5e\u6027\u3002<br>\n-- param primitiveIndex Sub mesh index<br>\n-- param attributeName Attribute name<br>\n-- returns Return null if not found or can't read, otherwise, will create a large enough typed array to contain all data of the attribute,<br>\n-- the array type will match the data type of the attribute.",
                "current_class_name": "Mesh"
            },
            "copyAttribute": {
                "name": "copyAttribute",
                "signature_name": "js_assets_Mesh_copyAttribute",
                "arguments": [
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "char*",
                        "script_ns": "char",
                        "whole_name": "const char*",
                        "namespace_name": "",
                        "namespaced_class_name": "char*",
                        "is_const": true,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "ArrayBuffer*",
                        "script_ns": "jsb.ArrayBuffer",
                        "whole_name": "cc::ArrayBuffer*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ArrayBuffer*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "primitiveIndex",
                    "attributeName",
                    "buffer",
                    "stride",
                    "offset"
                ],
                "static": false,
                "min_args": 5,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Read the requested attribute of the given sub mesh and fill into the given buffer.<br>\n-- zh \u8bfb\u53d6\u5b50\u7f51\u683c\u7684\u6307\u5b9a\u5c5e\u6027\u5230\u76ee\u6807\u7f13\u51b2\u533a\u4e2d\u3002<br>\n-- param primitiveIndex Sub mesh index<br>\n-- param attributeName Attribute name<br>\n-- param buffer The target array buffer<br>\n-- param stride Byte distance between two attributes in the target buffer<br>\n-- param offset The offset of the first attribute in the target buffer<br>\n-- returns Return false if failed to access attribute, return true otherwise.",
                "current_class_name": "Mesh"
            },
            "readIndices": {
                "name": "readIndices",
                "signature_name": "js_assets_Mesh_readIndices",
                "arguments": [
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "primitiveIndex"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "variant<cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>>",
                    "script_ns": "boost.variant<cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>>",
                    "whole_name": "boost::variant2::variant<cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>>",
                    "namespace_name": "boost::variant2::",
                    "namespaced_class_name": "boost::variant2::variant<cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Read the indices data of the given sub mesh<br>\n-- zh \u8bfb\u53d6\u5b50\u7f51\u683c\u7684\u7d22\u5f15\u6570\u636e\u3002<br>\n-- param primitiveIndex Sub mesh index<br>\n-- returns Return null if not found or can't read, otherwise, will create a large enough typed array to contain all indices data,<br>\n-- the array type will use the corresponding stride size.",
                "current_class_name": "Mesh"
            },
            "copyIndices": {
                "name": "copyIndices",
                "signature_name": "js_assets_Mesh_copyIndices",
                "arguments": [
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "variant<boost::variant2::monostate, cc::TypedArrayTemp<signed char>, cc::TypedArrayTemp<short>, cc::TypedArrayTemp<int>, cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>, cc::TypedArrayTemp<float>, cc::TypedArrayTemp<double>>",
                        "script_ns": "boost.variant<boost.monostate, cc::TypedArrayTemp<signed char>, cc::TypedArrayTemp<short>, cc::TypedArrayTemp<int>, cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>, cc::TypedArrayTemp<float>, cc::TypedArrayTemp<double>>",
                        "whole_name": "boost::variant2::variant<boost::variant2::monostate, cc::TypedArrayTemp<signed char>, cc::TypedArrayTemp<short>, cc::TypedArrayTemp<int>, cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>, cc::TypedArrayTemp<float>, cc::TypedArrayTemp<double>>&",
                        "namespace_name": "boost::variant2::",
                        "namespaced_class_name": "boost::variant2::variant<boost::variant2::monostate, cc::TypedArrayTemp<signed char>, cc::TypedArrayTemp<short>, cc::TypedArrayTemp<int>, cc::TypedArrayTemp<unsigned char>, cc::TypedArrayTemp<unsigned short>, cc::TypedArrayTemp<unsigned int>, cc::TypedArrayTemp<float>, cc::TypedArrayTemp<double>>",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "primitiveIndex",
                    "outputArray"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Read the indices data of the given sub mesh and fill into the given array<br>\n-- zh \u8bfb\u53d6\u5b50\u7f51\u683c\u7684\u7d22\u5f15\u6570\u636e\u5230\u76ee\u6807\u6570\u7ec4\u4e2d\u3002<br>\n-- param primitiveIndex Sub mesh index<br>\n-- param outputArray The target output array<br>\n-- returns Return false if failed to access the indices data, return true otherwise.",
                "current_class_name": "Mesh"
            },
            "updateSubMesh": {
                "name": "updateSubMesh",
                "signature_name": "js_assets_Mesh_updateSubMesh",
                "arguments": [
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "IDynamicGeometry",
                        "script_ns": "jsb.IDynamicGeometry",
                        "whole_name": "const cc::IDynamicGeometry&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IDynamicGeometry",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "primitiveIndex",
                    "geometry"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en update dynamic sub mesh geometry<br>\n-- zh \u66f4\u65b0\u52a8\u6001\u5b50\u7f51\u683c\u7684\u51e0\u4f55\u6570\u636e<br>\n-- param primitiveIndex: sub mesh index<br>\n-- param geometry: sub mesh geometry data",
                "current_class_name": "Mesh"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "getNativeAsset": [
                {
                    "name": "getNativeAsset",
                    "signature_name": "getNativeAsset",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "any",
                        "script_ns": "nowhere",
                        "whole_name": "ccstd::any",
                        "namespace_name": "ccstd::",
                        "namespaced_class_name": "ccstd::any",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "setNativeAsset": [
                {
                    "name": "setNativeAsset",
                    "signature_name": "setNativeAsset",
                    "arguments": [
                        {
                            "name": "any",
                            "script_ns": "nowhere",
                            "whole_name": "const ccstd::any&",
                            "namespace_name": "ccstd::",
                            "namespaced_class_name": "ccstd::any",
                            "is_const": true,
                            "is_pointer": false,
                            "is_reference": true,
                            "is_rreference": false,
                            "is_object": true,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        }
                    ],
                    "argumentTips": [
                        "obj"
                    ],
                    "static": false,
                    "min_args": 1,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "onLoaded": [
                {
                    "name": "onLoaded",
                    "signature_name": "onLoaded",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "void",
                        "script_ns": "void",
                        "whole_name": "void",
                        "namespace_name": "",
                        "namespaced_class_name": "void",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "destroy": [
                {
                    "name": "destroy",
                    "signature_name": "destroy",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "en Destroy the mesh and release all related GPU resources<br>\n-- zh \u9500\u6bc1\u6b64\u7f51\u683c\uff0c\u5e76\u91ca\u653e\u5b83\u5360\u6709\u7684\u6240\u6709 GPU \u8d44\u6e90\u3002",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.Skeleton",
        "parents": [
            "cc::Asset"
        ],
        "nested_classes": [],
        "class_name": "Skeleton",
        "is_ref_class": false,
        "namespaced_class_name": "cc::Skeleton",
        "underlined_class_name": "cc_Skeleton",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [
            {
                "name": "_joints",
                "names": [
                    "_joints",
                    "joints"
                ],
                "type": {
                    "name": "vector<std::string>",
                    "script_ns": "std::vector<std::string>",
                    "whole_name": "const std::vector<std::string>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::string>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            },
            {
                "name": "_hash",
                "names": [
                    "_hash",
                    "hash"
                ],
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                }
            }
        ],
        "methods": {
            "constructor": {
                "name": "Skeleton",
                "signature_name": "js_assets_Skeleton_constructor",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Skeleton"
            },
            "getJoints": {
                "name": "getJoints",
                "signature_name": "js_assets_Skeleton_getJoints",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<std::string>",
                    "script_ns": "std::vector<std::string>",
                    "whole_name": "const std::vector<std::string>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::string>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en The path of all bones, the length always equals the length of [[bindposes]]<br>\n-- zh \u6240\u6709\u5173\u8282\u7684\u8def\u5f84\u3002\u8be5\u6570\u7ec4\u7684\u957f\u5ea6\u59cb\u7ec8\u4e0e [[bindposes]] \u7684\u957f\u5ea6\u76f8\u540c\u3002",
                "current_class_name": "Skeleton"
            },
            "setJoints": {
                "name": "setJoints",
                "signature_name": "js_assets_Skeleton_setJoints",
                "arguments": [
                    {
                        "name": "vector<std::string>",
                        "script_ns": "std::vector<std::string>",
                        "whole_name": "const std::vector<std::string>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<std::string>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "value"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Skeleton"
            },
            "getBindposes": {
                "name": "getBindposes",
                "signature_name": "js_assets_Skeleton_getBindposes",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<cc::Mat4>",
                    "script_ns": "std::vector<cc::Mat4>",
                    "whole_name": "const std::vector<cc::Mat4>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::Mat4>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en The bind poses matrix of all bones, the length always equals the length of [[joints]]<br>\n-- zh \u6240\u6709\u5173\u8282\u7684\u7ed1\u5b9a\u59ff\u52bf\u77e9\u9635\u3002\u8be5\u6570\u7ec4\u7684\u957f\u5ea6\u59cb\u7ec8\u4e0e [[joints]] \u7684\u957f\u5ea6\u76f8\u540c\u3002",
                "current_class_name": "Skeleton"
            },
            "setBindposes": {
                "name": "setBindposes",
                "signature_name": "js_assets_Skeleton_setBindposes",
                "arguments": [
                    {
                        "name": "vector<cc::Mat4>",
                        "script_ns": "std::vector<cc::Mat4>",
                        "whole_name": "const std::vector<cc::Mat4>&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::vector<cc::Mat4>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "value"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Skeleton"
            },
            "getInverseBindposes": {
                "name": "getInverseBindposes",
                "signature_name": "js_assets_Skeleton_getInverseBindposes",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<cc::Mat4>",
                    "script_ns": "std::vector<cc::Mat4>",
                    "whole_name": "const std::vector<cc::Mat4>&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<cc::Mat4>",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Gets the inverse bind poses matrix<br>\n-- zh \u83b7\u53d6\u53cd\u5411\u7ed1\u5b9a\u59ff\u52bf\u77e9\u9635",
                "current_class_name": "Skeleton"
            },
            "getHash": {
                "name": "getHash",
                "signature_name": "js_assets_Skeleton_getHash",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en Gets the hash of the skeleton asset<br>\n-- zh \u83b7\u53d6\u9aa8\u9abc\u8d44\u6e90\u7684\u54c8\u5e0c\u503c",
                "current_class_name": "Skeleton"
            },
            "setHash": {
                "name": "setHash",
                "signature_name": "js_assets_Skeleton_setHash",
                "arguments": [
                    {
                        "name": "unsigned int",
                        "script_ns": "unsigned int",
                        "whole_name": "unsigned int",
                        "namespace_name": "",
                        "namespaced_class_name": "unsigned int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "hash"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "Skeleton"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {
            "destroy": [
                {
                    "name": "destroy",
                    "signature_name": "destroy",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ],
            "validate": [
                {
                    "name": "validate",
                    "signature_name": "validate",
                    "arguments": [],
                    "argumentTips": [],
                    "static": false,
                    "min_args": 0,
                    "is_overloaded": false,
                    "is_constructor": false,
                    "not_supported": false,
                    "ret_type": {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    "comment": "",
                    "current_class_name": null
                }
            ]
        }
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ICreateMeshOptions",
        "parents": [],
        "nested_classes": [],
        "class_name": "ICreateMeshOptions",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ICreateMeshOptions",
        "underlined_class_name": "cc_ICreateMeshOptions",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "calculateBounds",
                "pretty_name": "calculateBounds",
                "signature_name": "js_assets_ICreateMeshOptions",
                "type": {
                    "name": "optional<bool>",
                    "script_ns": "boost.optional<bool>",
                    "whole_name": "boost::optional<bool>",
                    "namespace_name": "boost::",
                    "namespaced_class_name": "boost::optional<bool>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.ICreateDynamicMeshOptions",
        "parents": [],
        "nested_classes": [],
        "class_name": "ICreateDynamicMeshOptions",
        "is_ref_class": false,
        "namespaced_class_name": "cc::ICreateDynamicMeshOptions",
        "underlined_class_name": "cc_ICreateDynamicMeshOptions",
        "is_struct": true,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [
            {
                "name": "maxSubMeshes",
                "pretty_name": "maxSubMeshes",
                "signature_name": "js_assets_ICreateDynamicMeshOptions",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "maxSubMeshVertices",
                "pretty_name": "maxSubMeshVertices",
                "signature_name": "js_assets_ICreateDynamicMeshOptions",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            },
            {
                "name": "maxSubMeshIndices",
                "pretty_name": "maxSubMeshIndices",
                "signature_name": "js_assets_ICreateDynamicMeshOptions",
                "type": {
                    "name": "unsigned int",
                    "script_ns": "unsigned int",
                    "whole_name": "unsigned int",
                    "namespace_name": "",
                    "namespaced_class_name": "unsigned int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "is_static": false,
                "is_static_const": false
            }
        ],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::",
        "script_ns": "jsb.MeshUtils",
        "parents": [],
        "nested_classes": [],
        "class_name": "MeshUtils",
        "is_ref_class": false,
        "namespaced_class_name": "cc::MeshUtils",
        "underlined_class_name": "cc_MeshUtils",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": false,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [],
        "methods": {},
        "static_methods": {
            "createMesh": {
                "name": "createMesh",
                "signature_name": "js_assets_MeshUtils_createMesh_static",
                "arguments": [
                    {
                        "name": "IGeometry",
                        "script_ns": "jsb.IGeometry",
                        "whole_name": "const cc::IGeometry&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IGeometry",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Mesh*",
                        "script_ns": "jsb.Mesh",
                        "whole_name": "cc::Mesh*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mesh*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "ICreateMeshOptions",
                        "script_ns": "jsb.ICreateMeshOptions",
                        "whole_name": "const cc::ICreateMeshOptions&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ICreateMeshOptions",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "geometry",
                    "out",
                    "options"
                ],
                "static": true,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "Mesh*",
                    "script_ns": "jsb.Mesh",
                    "whole_name": "cc::Mesh*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Mesh*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en create a static mesh.<br>\n-- zh \u521b\u5efa\u4e00\u4e2a\u9759\u6001\u7f51\u683c\u3002",
                "current_class_name": "MeshUtils"
            },
            "createMeshInfo": {
                "name": "createMeshInfo",
                "signature_name": "js_assets_MeshUtils_createMeshInfo_static",
                "arguments": [
                    {
                        "name": "IGeometry",
                        "script_ns": "jsb.IGeometry",
                        "whole_name": "const cc::IGeometry&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IGeometry",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "ICreateMeshOptions",
                        "script_ns": "jsb.ICreateMeshOptions",
                        "whole_name": "const cc::ICreateMeshOptions&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ICreateMeshOptions",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "geometry",
                    "options"
                ],
                "static": true,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "ICreateInfo",
                    "script_ns": "jsb.Mesh::ICreateInfo",
                    "whole_name": "cc::Mesh::ICreateInfo",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Mesh::ICreateInfo",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en create a static mesh ICreateInfo.<br>\n-- zh \u521b\u5efa\u4e00\u4e2a\u9759\u6001\u7f51\u683cICreateInfo\u3002",
                "current_class_name": "MeshUtils"
            },
            "createDynamicMesh": {
                "name": "createDynamicMesh",
                "signature_name": "js_assets_MeshUtils_createDynamicMesh_static",
                "arguments": [
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "IDynamicGeometry",
                        "script_ns": "jsb.IDynamicGeometry",
                        "whole_name": "const cc::IDynamicGeometry&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IDynamicGeometry",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "Mesh*",
                        "script_ns": "jsb.Mesh",
                        "whole_name": "cc::Mesh*",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::Mesh*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "ICreateDynamicMeshOptions",
                        "script_ns": "jsb.ICreateDynamicMeshOptions",
                        "whole_name": "const cc::ICreateDynamicMeshOptions&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ICreateDynamicMeshOptions",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "primitiveIndex",
                    "geometry",
                    "out",
                    "options"
                ],
                "static": true,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "Mesh*",
                    "script_ns": "jsb.Mesh",
                    "whole_name": "cc::Mesh*",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Mesh*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en create a dynamic mesh.<br>\n-- zh \u521b\u5efa\u4e00\u4e2a\u52a8\u6001\u7f51\u683c\u3002",
                "current_class_name": "MeshUtils"
            },
            "createDynamicMeshInfo": {
                "name": "createDynamicMeshInfo",
                "signature_name": "js_assets_MeshUtils_createDynamicMeshInfo_static",
                "arguments": [
                    {
                        "name": "IDynamicGeometry",
                        "script_ns": "jsb.IDynamicGeometry",
                        "whole_name": "const cc::IDynamicGeometry&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::IDynamicGeometry",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "ICreateDynamicMeshOptions",
                        "script_ns": "jsb.ICreateDynamicMeshOptions",
                        "whole_name": "const cc::ICreateDynamicMeshOptions&",
                        "namespace_name": "cc::",
                        "namespaced_class_name": "cc::ICreateDynamicMeshOptions",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": true,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "geometry",
                    "options"
                ],
                "static": true,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "ICreateInfo",
                    "script_ns": "jsb.Mesh::ICreateInfo",
                    "whole_name": "cc::Mesh::ICreateInfo",
                    "namespace_name": "cc::",
                    "namespaced_class_name": "cc::Mesh::ICreateInfo",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": true,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "en create a dynamic mesh ICreateInfo.<br>\n-- zh \u521b\u5efa\u4e00\u4e2a\u52a8\u6001\u7f51\u683cICreateInfo\u3002",
                "current_class_name": "MeshUtils"
            }
        },
        "dict_of_override_method_should_be_bound": {}
    }
]