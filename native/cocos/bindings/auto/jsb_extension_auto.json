[
    {
        "namespace_name": "cc::extension::",
        "script_ns": "cc.EventAssetsManagerEx",
        "parents": [],
        "nested_classes": [],
        "class_name": "EventAssetsManagerEx",
        "is_ref_class": false,
        "namespaced_class_name": "cc::extension::EventAssetsManagerEx",
        "underlined_class_name": "cc_extension_EventAssetsManagerEx",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "getEventCode": {
                "name": "getEventCode",
                "signature_name": "js_extension_EventAssetsManagerEx_getEventCode",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "EventCode",
                    "script_ns": "cc.EventAssetsManagerEx::EventCode",
                    "whole_name": "cc::extension::EventAssetsManagerEx::EventCode",
                    "namespace_name": "cc::extension::",
                    "namespaced_class_name": "cc::extension::EventAssetsManagerEx::EventCode",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getCURLECode": {
                "name": "getCURLECode",
                "signature_name": "js_extension_EventAssetsManagerEx_getCURLECode",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getCURLMCode": {
                "name": "getCURLMCode",
                "signature_name": "js_extension_EventAssetsManagerEx_getCURLMCode",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getMessage": {
                "name": "getMessage",
                "signature_name": "js_extension_EventAssetsManagerEx_getMessage",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getAssetId": {
                "name": "getAssetId",
                "signature_name": "js_extension_EventAssetsManagerEx_getAssetId",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "std::string",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getAssetsManagerEx": {
                "name": "getAssetsManagerEx",
                "signature_name": "js_extension_EventAssetsManagerEx_getAssetsManagerEx",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "AssetsManagerEx*",
                    "script_ns": "cc.AssetsManagerEx",
                    "whole_name": "cc::extension::AssetsManagerEx*",
                    "namespace_name": "cc::extension::",
                    "namespaced_class_name": "cc::extension::AssetsManagerEx*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "isResuming": {
                "name": "isResuming",
                "signature_name": "js_extension_EventAssetsManagerEx_isResuming",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getPercent": {
                "name": "getPercent",
                "signature_name": "js_extension_EventAssetsManagerEx_getPercent",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "float",
                    "script_ns": "float",
                    "whole_name": "float",
                    "namespace_name": "",
                    "namespaced_class_name": "float",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getPercentByFile": {
                "name": "getPercentByFile",
                "signature_name": "js_extension_EventAssetsManagerEx_getPercentByFile",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "float",
                    "script_ns": "float",
                    "whole_name": "float",
                    "namespace_name": "",
                    "namespaced_class_name": "float",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getDownloadedBytes": {
                "name": "getDownloadedBytes",
                "signature_name": "js_extension_EventAssetsManagerEx_getDownloadedBytes",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "double",
                    "script_ns": "double",
                    "whole_name": "double",
                    "namespace_name": "",
                    "namespaced_class_name": "double",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getTotalBytes": {
                "name": "getTotalBytes",
                "signature_name": "js_extension_EventAssetsManagerEx_getTotalBytes",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "double",
                    "script_ns": "double",
                    "whole_name": "double",
                    "namespace_name": "",
                    "namespaced_class_name": "double",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getDownloadedFiles": {
                "name": "getDownloadedFiles",
                "signature_name": "js_extension_EventAssetsManagerEx_getDownloadedFiles",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "getTotalFiles": {
                "name": "getTotalFiles",
                "signature_name": "js_extension_EventAssetsManagerEx_getTotalFiles",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": "",
                "current_class_name": "EventAssetsManagerEx"
            },
            "constructor": {
                "name": "EventAssetsManagerEx",
                "signature_name": "js_extension_EventAssetsManagerEx_constructor",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "AssetsManagerEx*",
                        "script_ns": "cc.AssetsManagerEx",
                        "whole_name": "cc::extension::AssetsManagerEx*",
                        "namespace_name": "cc::extension::",
                        "namespaced_class_name": "cc::extension::AssetsManagerEx*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "EventCode",
                        "script_ns": "cc.EventAssetsManagerEx::EventCode",
                        "whole_name": "const cc::extension::EventAssetsManagerEx::EventCode&",
                        "namespace_name": "cc::extension::",
                        "namespaced_class_name": "cc::extension::EventAssetsManagerEx::EventCode",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": true,
                        "is_numeric": false,
                        "enum_declare_type": "int",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "std::string",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "std::string",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "eventName",
                    "manager",
                    "code",
                    "assetId",
                    "message",
                    "curleCode",
                    "curlmCode"
                ],
                "static": false,
                "min_args": 3,
                "is_overloaded": false,
                "is_constructor": true,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " Constructor ",
                "current_class_name": "EventAssetsManagerEx"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::extension::",
        "script_ns": "cc.Manifest",
        "parents": [],
        "nested_classes": [],
        "class_name": "Manifest",
        "is_ref_class": false,
        "namespaced_class_name": "cc::extension::Manifest",
        "underlined_class_name": "cc_extension_Manifest",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "isVersionLoaded": {
                "name": "isVersionLoaded",
                "signature_name": "js_extension_Manifest_isVersionLoaded",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Check whether the version informations have been fully loaded",
                "current_class_name": "Manifest"
            },
            "isLoaded": {
                "name": "isLoaded",
                "signature_name": "js_extension_Manifest_isLoaded",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Check whether the manifest have been fully loaded",
                "current_class_name": "Manifest"
            },
            "getPackageUrl": {
                "name": "getPackageUrl",
                "signature_name": "js_extension_Manifest_getPackageUrl",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "const std::string&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets remote package url.",
                "current_class_name": "Manifest"
            },
            "getManifestFileUrl": {
                "name": "getManifestFileUrl",
                "signature_name": "js_extension_Manifest_getManifestFileUrl",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "const std::string&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets remote manifest file url.",
                "current_class_name": "Manifest"
            },
            "getVersionFileUrl": {
                "name": "getVersionFileUrl",
                "signature_name": "js_extension_Manifest_getVersionFileUrl",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "const std::string&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets remote version file url.",
                "current_class_name": "Manifest"
            },
            "getVersion": {
                "name": "getVersion",
                "signature_name": "js_extension_Manifest_getVersion",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "const std::string&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets manifest version.",
                "current_class_name": "Manifest"
            },
            "getSearchPaths": {
                "name": "getSearchPaths",
                "signature_name": "js_extension_Manifest_getSearchPaths",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "vector<std::string>",
                    "script_ns": "std::vector<std::string>",
                    "whole_name": "std::vector<std::string>",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::vector<std::string>",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Get the search paths list related to the Manifest.",
                "current_class_name": "Manifest"
            },
            "getManifestRoot": {
                "name": "getManifestRoot",
                "signature_name": "js_extension_Manifest_getManifestRoot",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "const std::string&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Get the manifest root path, normally it should also be the local storage path.",
                "current_class_name": "Manifest"
            },
            "constructor": {
                "name": "Manifest",
                "signature_name": "js_extension_Manifest_constructor",
                "min_args": 0,
                "comment": " @brief Constructor for Manifest class, create manifest by parsing a json string<br>\n-- param content Json string content<br>\n-- param manifestRoot The root path of the manifest file (It should be local path, so that we can find assets path relative to the root path)",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": "Manifest",
                "implementations": [
                    {
                        "name": "Manifest",
                        "signature_name": "Manifest",
                        "arguments": [
                            {
                                "name": "basic_string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::string",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "basic_string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::string",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "content",
                            "manifestRoot"
                        ],
                        "static": false,
                        "min_args": 2,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": " @brief Constructor for Manifest class, create manifest by parsing a json string<br>\n-- param content Json string content<br>\n-- param manifestRoot The root path of the manifest file (It should be local path, so that we can find assets path relative to the root path)",
                        "current_class_name": null
                    },
                    {
                        "name": "Manifest",
                        "signature_name": "Manifest",
                        "arguments": [
                            {
                                "name": "basic_string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::string",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "manifestUrl"
                        ],
                        "static": false,
                        "min_args": 0,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": " @brief Constructor for Manifest class, create manifest by parsing a json file<br>\n-- param manifestUrl Url of the local manifest",
                        "current_class_name": null
                    }
                ]
            },
            "parseFile": {
                "name": "parseFile",
                "signature_name": "js_extension_Manifest_parseFile",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "manifestUrl"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Parse the manifest file information into this manifest<br>\n-- param manifestUrl Url of the local manifest",
                "current_class_name": "Manifest"
            },
            "parseJSONString": {
                "name": "parseJSONString",
                "signature_name": "js_extension_Manifest_parseJSONString",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "content",
                    "manifestRoot"
                ],
                "static": false,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Parse the manifest from json string into this manifest<br>\n-- param content Json string content<br>\n-- param manifestRoot The root path of the manifest file (It should be local path, so that we can find assets path relative to the root path)",
                "current_class_name": "Manifest"
            },
            "isUpdating": {
                "name": "isUpdating",
                "signature_name": "js_extension_Manifest_isUpdating",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Get whether the manifest is being updating<br>\n-- return Updating or not",
                "current_class_name": "Manifest"
            },
            "setUpdating": {
                "name": "setUpdating",
                "signature_name": "js_extension_Manifest_setUpdating",
                "arguments": [
                    {
                        "name": "bool",
                        "script_ns": "bool",
                        "whole_name": "bool",
                        "namespace_name": "",
                        "namespaced_class_name": "bool",
                        "is_const": false,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "updating"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Set whether the manifest is being updating<br>\n-- param updating Updating or not",
                "current_class_name": "Manifest"
            }
        },
        "static_methods": {},
        "dict_of_override_method_should_be_bound": {}
    },
    {
        "namespace_name": "cc::extension::",
        "script_ns": "cc.AssetsManagerEx",
        "parents": [],
        "nested_classes": [],
        "class_name": "AssetsManagerEx",
        "is_ref_class": false,
        "namespaced_class_name": "cc::extension::AssetsManagerEx",
        "underlined_class_name": "cc_extension_AssetsManagerEx",
        "is_struct": false,
        "is_abstract": false,
        "is_persistent": false,
        "is_class_owned_by_cpp": false,
        "has_constructor": true,
        "public_fields": [],
        "override_methods": {},
        "getter_setter": [],
        "methods": {
            "constructor": {
                "name": "AssetsManagerEx",
                "signature_name": "js_extension_AssetsManagerEx_constructor",
                "min_args": 2,
                "comment": "",
                "is_ctor": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": "AssetsManagerEx",
                "implementations": [
                    {
                        "name": "AssetsManagerEx",
                        "signature_name": "AssetsManagerEx",
                        "arguments": [
                            {
                                "name": "basic_string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::string",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "basic_string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::string",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "std::function",
                                "script_ns": "std::function<int (std::string, std::string)>",
                                "whole_name": "cc::extension::AssetsManagerEx::VersionCompareHandle",
                                "namespace_name": "cc::extension::",
                                "namespaced_class_name": "std::function<int (const std::string, const std::string)>",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": true,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [
                                    {
                                        "name": "string",
                                        "script_ns": "std::string",
                                        "whole_name": "const std::string",
                                        "namespace_name": "",
                                        "namespaced_class_name": "const std::string",
                                        "is_const": false,
                                        "is_pointer": false,
                                        "is_reference": false,
                                        "is_rreference": false,
                                        "is_object": true,
                                        "is_struct": false,
                                        "is_function": false,
                                        "is_enum": false,
                                        "is_numeric": false,
                                        "enum_declare_type": "",
                                        "param_types": [],
                                        "ret_type": null
                                    },
                                    {
                                        "name": "string",
                                        "script_ns": "std::string",
                                        "whole_name": "const std::string",
                                        "namespace_name": "",
                                        "namespaced_class_name": "const std::string",
                                        "is_const": false,
                                        "is_pointer": false,
                                        "is_reference": false,
                                        "is_rreference": false,
                                        "is_object": true,
                                        "is_struct": false,
                                        "is_function": false,
                                        "is_enum": false,
                                        "is_numeric": false,
                                        "enum_declare_type": "",
                                        "param_types": [],
                                        "ret_type": null
                                    }
                                ],
                                "ret_type": "int"
                            }
                        ],
                        "argumentTips": [
                            "manifestUrl",
                            "storagePath",
                            "handle"
                        ],
                        "static": false,
                        "min_args": 3,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    },
                    {
                        "name": "AssetsManagerEx",
                        "signature_name": "AssetsManagerEx",
                        "arguments": [
                            {
                                "name": "basic_string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::string",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "basic_string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::string",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "manifestUrl",
                            "storagePath"
                        ],
                        "static": false,
                        "min_args": 2,
                        "is_overloaded": false,
                        "is_constructor": true,
                        "not_supported": false,
                        "ret_type": {
                            "name": "void",
                            "script_ns": "void",
                            "whole_name": "void",
                            "namespace_name": "",
                            "namespaced_class_name": "void",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": "",
                        "current_class_name": null
                    }
                ]
            },
            "checkUpdate": {
                "name": "checkUpdate",
                "signature_name": "js_extension_AssetsManagerEx_checkUpdate",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief  Check out if there is a new version of manifest.<br>\n-- You may use this method before updating, then let user determine whether<br>\n-- he wants to update resources.",
                "current_class_name": "AssetsManagerEx"
            },
            "prepareUpdate": {
                "name": "prepareUpdate",
                "signature_name": "js_extension_AssetsManagerEx_prepareUpdate",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Prepare the update process, this will cleanup download process flags, fill up download units with temporary manifest or remote manifest",
                "current_class_name": "AssetsManagerEx"
            },
            "update": {
                "name": "update",
                "signature_name": "js_extension_AssetsManagerEx_update",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Update with the current local manifest.",
                "current_class_name": "AssetsManagerEx"
            },
            "downloadFailedAssets": {
                "name": "downloadFailedAssets",
                "signature_name": "js_extension_AssetsManagerEx_downloadFailedAssets",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Reupdate all failed assets under the current AssetsManagerEx context",
                "current_class_name": "AssetsManagerEx"
            },
            "getState": {
                "name": "getState",
                "signature_name": "js_extension_AssetsManagerEx_getState",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "State",
                    "script_ns": "cc.AssetsManagerEx::State",
                    "whole_name": "cc::extension::AssetsManagerEx::State",
                    "namespace_name": "cc::extension::",
                    "namespaced_class_name": "cc::extension::AssetsManagerEx::State",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": true,
                    "is_numeric": false,
                    "enum_declare_type": "int",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets the current update state.",
                "current_class_name": "AssetsManagerEx"
            },
            "getStoragePath": {
                "name": "getStoragePath",
                "signature_name": "js_extension_AssetsManagerEx_getStoragePath",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "basic_string",
                    "script_ns": "std::string",
                    "whole_name": "const std::string&",
                    "namespace_name": "std::",
                    "namespaced_class_name": "std::string",
                    "is_const": true,
                    "is_pointer": false,
                    "is_reference": true,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets storage path.",
                "current_class_name": "AssetsManagerEx"
            },
            "getLocalManifest": {
                "name": "getLocalManifest",
                "signature_name": "js_extension_AssetsManagerEx_getLocalManifest",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "Manifest*",
                    "script_ns": "cc.Manifest",
                    "whole_name": "const cc::extension::Manifest*",
                    "namespace_name": "cc::extension::",
                    "namespaced_class_name": "cc::extension::Manifest*",
                    "is_const": true,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Function for retrieving the local manifest object",
                "current_class_name": "AssetsManagerEx"
            },
            "loadLocalManifest": {
                "name": "loadLocalManifest",
                "signature_name": "js_extension_AssetsManagerEx_loadLocalManifest",
                "min_args": 1,
                "comment": " @brief Load a local manifest from url.<br>\n-- You can only manually load local manifest when the update state is UNCHECKED, it will fail once the update process is began.<br>\n-- This API will do the following things:<br>\n-- 1. Reset storage path<br>\n-- 2. Set local storage<br>\n-- 3. Search for cached manifest and compare with the local manifest<br>\n-- 4. Init temporary manifest and remote manifest<br>\n-- If successfully load the given local manifest and inited other manifests, it will return true, otherwise it will return false<br>\n-- param manifestUrl    The local manifest url",
                "is_ctor": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "current_class_name": "AssetsManagerEx",
                "implementations": [
                    {
                        "name": "loadLocalManifest",
                        "signature_name": "loadLocalManifest",
                        "arguments": [
                            {
                                "name": "basic_string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::string",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "manifestUrl"
                        ],
                        "static": false,
                        "min_args": 1,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "bool",
                            "script_ns": "bool",
                            "whole_name": "bool",
                            "namespace_name": "",
                            "namespaced_class_name": "bool",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": " @brief Load a local manifest from url.<br>\n-- You can only manually load local manifest when the update state is UNCHECKED, it will fail once the update process is began.<br>\n-- This API will do the following things:<br>\n-- 1. Reset storage path<br>\n-- 2. Set local storage<br>\n-- 3. Search for cached manifest and compare with the local manifest<br>\n-- 4. Init temporary manifest and remote manifest<br>\n-- If successfully load the given local manifest and inited other manifests, it will return true, otherwise it will return false<br>\n-- param manifestUrl    The local manifest url",
                        "current_class_name": null
                    },
                    {
                        "name": "loadLocalManifest",
                        "signature_name": "loadLocalManifest",
                        "arguments": [
                            {
                                "name": "Manifest*",
                                "script_ns": "cc.Manifest",
                                "whole_name": "cc::extension::Manifest*",
                                "namespace_name": "cc::extension::",
                                "namespaced_class_name": "cc::extension::Manifest*",
                                "is_const": false,
                                "is_pointer": true,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "basic_string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string&",
                                "namespace_name": "std::",
                                "namespaced_class_name": "std::string",
                                "is_const": true,
                                "is_pointer": false,
                                "is_reference": true,
                                "is_rreference": false,
                                "is_object": false,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "argumentTips": [
                            "localManifest",
                            "storagePath"
                        ],
                        "static": false,
                        "min_args": 2,
                        "is_overloaded": false,
                        "is_constructor": false,
                        "not_supported": false,
                        "ret_type": {
                            "name": "bool",
                            "script_ns": "bool",
                            "whole_name": "bool",
                            "namespace_name": "",
                            "namespaced_class_name": "bool",
                            "is_const": false,
                            "is_pointer": false,
                            "is_reference": false,
                            "is_rreference": false,
                            "is_object": false,
                            "is_struct": false,
                            "is_function": false,
                            "is_enum": false,
                            "is_numeric": false,
                            "enum_declare_type": "",
                            "param_types": [],
                            "ret_type": null
                        },
                        "comment": " @brief Load a custom local manifest object, the local manifest must be loaded already.<br>\n-- You can only manually load local manifest when the update state is UNCHECKED, it will fail once the update process is began.<br>\n-- This API will do the following things:<br>\n-- 1. Reset storage path<br>\n-- 2. Set local storage<br>\n-- 3. Search for cached manifest and compare with the local manifest<br>\n-- 4. Init temporary manifest and remote manifest<br>\n-- If successfully load the given local manifest and inited other manifests, it will return true, otherwise it will return false<br>\n-- param localManifest    The local manifest object to be set<br>\n-- param storagePath    The local storage path",
                        "current_class_name": null
                    }
                ]
            },
            "getRemoteManifest": {
                "name": "getRemoteManifest",
                "signature_name": "js_extension_AssetsManagerEx_getRemoteManifest",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "Manifest*",
                    "script_ns": "cc.Manifest",
                    "whole_name": "const cc::extension::Manifest*",
                    "namespace_name": "cc::extension::",
                    "namespaced_class_name": "cc::extension::Manifest*",
                    "is_const": true,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Function for retrieving the remote manifest object",
                "current_class_name": "AssetsManagerEx"
            },
            "loadRemoteManifest": {
                "name": "loadRemoteManifest",
                "signature_name": "js_extension_AssetsManagerEx_loadRemoteManifest",
                "arguments": [
                    {
                        "name": "Manifest*",
                        "script_ns": "cc.Manifest",
                        "whole_name": "cc::extension::Manifest*",
                        "namespace_name": "cc::extension::",
                        "namespaced_class_name": "cc::extension::Manifest*",
                        "is_const": false,
                        "is_pointer": true,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": true,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "remoteManifest"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Load a custom remote manifest object, the manifest must be loaded already.<br>\n-- You can only manually load remote manifest when the update state is UNCHECKED and local manifest is already inited, it will fail once the update process is began.<br>\n-- param remoteManifest    The remote manifest object to be set",
                "current_class_name": "AssetsManagerEx"
            },
            "isResuming": {
                "name": "isResuming",
                "signature_name": "js_extension_AssetsManagerEx_isResuming",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "bool",
                    "script_ns": "bool",
                    "whole_name": "bool",
                    "namespace_name": "",
                    "namespaced_class_name": "bool",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets whether the current download is resuming previous unfinished job, this will only be available after READY_TO_UPDATE state, under unknown states it will return false by default.",
                "current_class_name": "AssetsManagerEx"
            },
            "getTotalBytes": {
                "name": "getTotalBytes",
                "signature_name": "js_extension_AssetsManagerEx_getTotalBytes",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "double",
                    "script_ns": "double",
                    "whole_name": "double",
                    "namespace_name": "",
                    "namespaced_class_name": "double",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets the total byte size to be downloaded of the update, this will only be available after READY_TO_UPDATE state, under unknown states it will return 0 by default.",
                "current_class_name": "AssetsManagerEx"
            },
            "getDownloadedBytes": {
                "name": "getDownloadedBytes",
                "signature_name": "js_extension_AssetsManagerEx_getDownloadedBytes",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "double",
                    "script_ns": "double",
                    "whole_name": "double",
                    "namespace_name": "",
                    "namespaced_class_name": "double",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets the current downloaded byte size of the update, this will only be available after READY_TO_UPDATE state, under unknown states it will return 0 by default.",
                "current_class_name": "AssetsManagerEx"
            },
            "getTotalFiles": {
                "name": "getTotalFiles",
                "signature_name": "js_extension_AssetsManagerEx_getTotalFiles",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets the total files count to be downloaded of the update, this will only be available after READY_TO_UPDATE state, under unknown states it will return 0 by default.",
                "current_class_name": "AssetsManagerEx"
            },
            "getDownloadedFiles": {
                "name": "getDownloadedFiles",
                "signature_name": "js_extension_AssetsManagerEx_getDownloadedFiles",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Gets the current downloaded files count of the update, this will only be available after READY_TO_UPDATE state, under unknown states it will return 0 by default.",
                "current_class_name": "AssetsManagerEx"
            },
            "getMaxConcurrentTask": {
                "name": "getMaxConcurrentTask",
                "signature_name": "js_extension_AssetsManagerEx_getMaxConcurrentTask",
                "arguments": [],
                "argumentTips": [],
                "static": false,
                "min_args": 0,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "int",
                    "script_ns": "int",
                    "whole_name": "int",
                    "namespace_name": "",
                    "namespaced_class_name": "int",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": true,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Function for retrieving the max concurrent task count",
                "current_class_name": "AssetsManagerEx"
            },
            "setMaxConcurrentTask": {
                "name": "setMaxConcurrentTask",
                "signature_name": "js_extension_AssetsManagerEx_setMaxConcurrentTask",
                "arguments": [
                    {
                        "name": "int",
                        "script_ns": "int",
                        "whole_name": "const int",
                        "namespace_name": "",
                        "namespaced_class_name": "int",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": false,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": true,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "max"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Function for setting the max concurrent task count",
                "current_class_name": "AssetsManagerEx"
            },
            "setVersionCompareHandle": {
                "name": "setVersionCompareHandle",
                "signature_name": "js_extension_AssetsManagerEx_setVersionCompareHandle",
                "arguments": [
                    {
                        "name": "std::function",
                        "script_ns": "std::function<int (std::string, std::string)>",
                        "whole_name": "const std::function<int (const std::string, const std::string)>&",
                        "namespace_name": "cc::extension::",
                        "namespaced_class_name": "std::function<int (const std::string, const std::string)>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": true,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [
                            {
                                "name": "string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string",
                                "namespace_name": "",
                                "namespaced_class_name": "const std::string",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string",
                                "namespace_name": "",
                                "namespaced_class_name": "const std::string",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "ret_type": "int"
                    }
                ],
                "argumentTips": [
                    "handle"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Set the handle function for comparing manifests versions<br>\n-- param handle    The compare function",
                "current_class_name": "AssetsManagerEx"
            },
            "setVerifyCallback": {
                "name": "setVerifyCallback",
                "signature_name": "js_extension_AssetsManagerEx_setVerifyCallback",
                "arguments": [
                    {
                        "name": "std::function",
                        "script_ns": "std::function<bool (std::string, cc.ManifestAsset)>",
                        "whole_name": "const std::function<bool (const std::string, cc::extension::ManifestAsset)>&",
                        "namespace_name": "cc::extension::",
                        "namespaced_class_name": "std::function<bool (const std::string, cc::extension::ManifestAsset)>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": true,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [
                            {
                                "name": "string",
                                "script_ns": "std::string",
                                "whole_name": "const std::string",
                                "namespace_name": "",
                                "namespaced_class_name": "const std::string",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            },
                            {
                                "name": "ManifestAsset",
                                "script_ns": "cc.ManifestAsset",
                                "whole_name": "cc::extension::ManifestAsset",
                                "namespace_name": "",
                                "namespaced_class_name": "cc::extension::ManifestAsset",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "ret_type": "bool"
                    }
                ],
                "argumentTips": [
                    "callback"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Set the verification function for checking whether downloaded asset is correct, e.g. using md5 verification<br>\n-- param callback  The verify callback function",
                "current_class_name": "AssetsManagerEx"
            },
            "setEventCallback": {
                "name": "setEventCallback",
                "signature_name": "js_extension_AssetsManagerEx_setEventCallback",
                "arguments": [
                    {
                        "name": "std::function",
                        "script_ns": "std::function<void (cc.EventAssetsManagerEx )>",
                        "whole_name": "const std::function<void (cc::extension::EventAssetsManagerEx *)>&",
                        "namespace_name": "cc::extension::",
                        "namespaced_class_name": "std::function<void (cc::extension::EventAssetsManagerEx *)>",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": true,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [
                            {
                                "name": "EventAssetsManagerEx*",
                                "script_ns": "cc.EventAssetsManagerEx",
                                "whole_name": "cc::extension::EventAssetsManagerEx*",
                                "namespace_name": "",
                                "namespaced_class_name": "cc::extension::EventAssetsManagerEx*",
                                "is_const": false,
                                "is_pointer": false,
                                "is_reference": false,
                                "is_rreference": false,
                                "is_object": true,
                                "is_struct": false,
                                "is_function": false,
                                "is_enum": false,
                                "is_numeric": false,
                                "enum_declare_type": "",
                                "param_types": [],
                                "ret_type": null
                            }
                        ],
                        "ret_type": "void"
                    }
                ],
                "argumentTips": [
                    "callback"
                ],
                "static": false,
                "min_args": 1,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "void",
                    "script_ns": "void",
                    "whole_name": "void",
                    "namespace_name": "",
                    "namespaced_class_name": "void",
                    "is_const": false,
                    "is_pointer": false,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": false,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Set the event callback for receiving update process events<br>\n-- param callback  The event callback function",
                "current_class_name": "AssetsManagerEx"
            }
        },
        "static_methods": {
            "create": {
                "name": "create",
                "signature_name": "js_extension_AssetsManagerEx_create_static",
                "arguments": [
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    },
                    {
                        "name": "basic_string",
                        "script_ns": "std::string",
                        "whole_name": "const std::string&",
                        "namespace_name": "std::",
                        "namespaced_class_name": "std::string",
                        "is_const": true,
                        "is_pointer": false,
                        "is_reference": true,
                        "is_rreference": false,
                        "is_object": false,
                        "is_struct": false,
                        "is_function": false,
                        "is_enum": false,
                        "is_numeric": false,
                        "enum_declare_type": "",
                        "param_types": [],
                        "ret_type": null
                    }
                ],
                "argumentTips": [
                    "manifestUrl",
                    "storagePath"
                ],
                "static": true,
                "min_args": 2,
                "is_overloaded": false,
                "is_constructor": false,
                "not_supported": false,
                "ret_type": {
                    "name": "AssetsManagerEx*",
                    "script_ns": "cc.AssetsManagerEx",
                    "whole_name": "cc::extension::AssetsManagerEx*",
                    "namespace_name": "cc::extension::",
                    "namespaced_class_name": "cc::extension::AssetsManagerEx*",
                    "is_const": false,
                    "is_pointer": true,
                    "is_reference": false,
                    "is_rreference": false,
                    "is_object": true,
                    "is_struct": false,
                    "is_function": false,
                    "is_enum": false,
                    "is_numeric": false,
                    "enum_declare_type": "",
                    "param_types": [],
                    "ret_type": null
                },
                "comment": " @brief Create function for creating a new AssetsManagerEx<br>\n-- param manifestUrl   The url for the local manifest file<br>\n-- param storagePath   The storage path for downloaded assets<br>\n-- warning   The cached manifest in your storage path have higher priority and will be searched first,<br>\n-- only if it doesn't exist, AssetsManagerEx will use the given manifestUrl.",
                "current_class_name": "AssetsManagerEx"
            }
        },
        "dict_of_override_method_should_be_bound": {}
    }
]